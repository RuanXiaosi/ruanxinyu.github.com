[{"title":"026：自控力：和压力做朋友（凯利.麦格尼格尔）","date":"2019-03-03T04:36:54.000Z","path":"posts/读书笔记/026-自控力：和压力做朋友/","text":"什么是压力？压力就是你在乎的东西发生危险时引起的反应 压力的好处？压力是可以依靠的资源，压力背后是我们生活的意义 为什么压力是资源？压力是帮你从经验中学习的生理阶段 有哪些典型压力反应？逃跑或战斗；应对挑战；与人联结；学习和成长 如何对待压力？压力是否有害，取决于你看待压力的思维方式，与其逃避不适，不如接受压力，追求意义，积极利用压力 什么是压力？ 压力就是你在乎的东西发生危险时引起的反应。压力和意义无法分割，对不在乎的事情，你不会感到压力，不经受压力，你也无法开创有意义的生活。 思维模式是塑造现实的信念，是左右你思考，感受和行为的信念，如同滤镜一样，你透过它看待所有的一切。从安慰剂效应和自我实现预言，都说明观念产生着至关重要的作用。安慰剂效应对特定高产出只有短暂影响，但是思维模式效应如同滚雪球一样，对结果有更长久的影响。 压力思维模式很强大，是因为他们不仅影响你怎么想，并且影响你怎么行动。而思维模式的干预只需要对思维模式做一些小的改变，就会激发一系列的深入变化。我们习惯性的详细，需要改变生活中的一切，才能幸福，而实际上却相反，改变思维是其他变化的催化剂，但是首先得有成长型思维。 最有效的思维干预有三步：1. 学习新观点；2. 练习，鼓励自己采纳和应用新思维；3. 提供机会和别人分享该观点 感到压力时，锻炼新思维： 当你感觉到压力时，承认压力的存在，允许自己感知到压力，包括它是如何影响身体的 欢迎压力，意识到它是对你在意事物的反应。你能联结到压力背后的积极动机吗？什么有危险了，你为什么会在乎？ 运用压力给你的能量，而不是耗费它试图去管理压力。你现在可以做什么才能反应你的目标与价值？ 改变压力思维的第一步就是在每天的生活中关注你现在的思维是如何产生的。我们通常看不到思维的影响，是因为我们太认同思维背后的信念了，你可能意识不到信念是怎么样影响思想，情感和行为的，这叫思维盲区。解决办法就是联系思维察觉，注意你现在的压力思维是如何在生活中运行的。 最有帮助的压力思维应该是灵活的，不是非黑即白，能看到正反两面，但选择看压力的好处，感觉到分神，但是还是决定专注在你在乎的事情上。（这不就是自由吗？） 思维转换的观念在于允许你秉承更平衡的压力观念，少害怕它，相信自己能搞定它，以它为资源更投入的生活。 压力是可以依靠的资源 当压力和焦虑被视为有害的状况，我们可能会转向更具破坏性的行为，试图保护自己或庇护我们在乎的东西。因为受到压力的经历本身就具有保护性，可以锻炼我们的抗压能力。如果你认为身体对压力的反应总是战斗或者逃跑，那么压力反应就成为了人类进化的包袱，这是许多科学家争论的焦点。针对压力，逃跑或战斗并不是你身体能支持的唯一策略。 压力反应的类型： 逃跑或战斗：你命悬一线的情况，你就会发现自己正处于典型的逃跑或战斗的反应模式 应对挑战：（集中注意力，强化感觉，提高动力，激发能量）压力环境稍微缓和的情况，大脑和身体会切换至挑战模式。此时你注意到心脏砰砰跳动，身体出汗或者呼吸加快。你的头脑聚焦在压力源上，感觉兴奋，冲动，不安，焦躁或者准备好行动。 与人联结：（启动亲社会本能，鼓励社会交往，强化社会认知，抑制恐惧，提升勇气）压力会促进催产素的释放，从而鼓励你与社会支持系统联结。此时你想与朋友或者家人更亲近，你注意到自己更关注他们，或者对他们的情感更敏感。你有保护，支持，庇护别人的愿望。 学习和成长：（恢复神经系统平衡，会放与整合吸收过往经历，帮助大脑学习和成长）压力荷尔蒙可以增强你大脑的可塑性，促使你经验中学习，此时即使身体已经平静下来，你依然感觉大脑充满了电，你在脑海中回放会分析过往的体验，或者想跟别人倾诉。呈现的倾诉往往很复杂，而且想从发生的事情身上找到意义。 压力是帮你从经验中学习的生理阶段，这意味着你的压力反应很容易被刻意练习影响。无论你压力过程中你采取了什么行动，你都在同步的教授身体和大脑。你可以选择你的压力反应。当你感觉到身体对压力有反应时，问问自己，你最需要压力反应的哪个部分。你想反击，逃避，投入，联结，找到意义，还是成长？ 压力与意义成正比 在日常生活中寻找生活的意义。书写价值观的魔力在于它转变了你对压力体验的思考，以及应对他们的能力，倾向于认为经历的困难时暂时的，问题不是不能改变，也不会因此搞砸自己的人生，能从困难的情境中发现意义。 当压力来临时，记起你的价值观，问问自己在这个时刻，它能如何引导你。和你在乎的人如何讨论压力，也至关重要。我们了解自己能做什么的方式之一，就是通过别人的眼睛去看。 逃避压力的代价： 压力和意义形影不离，剥离压力后并不是理想的生活，反而会抹去人生的意义。企图逃避压力的最大问题是，它改变我们看待生命和自我的观点，任何导致压力的事情都被视为问题。 压力繁殖是企图逃避压力的讽刺性后果：耗费掉应该支持你的资源的同时，你创造了更多的压力源，当压力不断积累，你渐渐无法招架，离群索居，因此更容易依赖逃避性策略，进入恶行循环。 思考逃避压力的代价是什么？ 错失机会：由于你认为压力太大，生活中拒绝或错失了什么事情，经历，活动，角色或其他机会？错失这些机会你会付出什么代价？ 逃避方式：当你想逃避，摆脱或漠视生活压力的时候，你会求助于什么行为，替代品或别的逃避路径？你有更好的方式去应对吗？这种应对方式是自毁行为吗？ 限制未来：如果不害怕未来有压力，你想做，体验，接纳和改变什么？追求这些机会，你的生活会丰富成什么样子？不允许追求则付出的代价是什么？ 应对挑战 擅长压力的定义：在压力下成长的勇气。它承认了拥抱压力是勇敢的行为，要求我们选择意义，而不是逃避不适。 紧张的时候，你只需要提醒自己，压力会帮你更好的表现。逃避令其紧张的东西，只会强化害怕，提高对未来焦虑的担心。 决定压力反应的最重要因素，是你如何看待自己处理压力的能力。如果你认为环境的要求超过资源，你就会有恐惧反应，但如果你相信有资源取得成功，就会有挑战反应。专注于资源上，人们更容易有挑战反应。最有效的策略包括：了解自己的优势，思考你过去式如何准备某个挑战的，回忆过去战胜类似挑战的经历，想象来自亲友的支持。 无论压力是什么感觉，别再焦急地试图赶走它，而是聚焦在可以用压力给你的能量、能力来做些什么，你的身体正在提供资源帮助你应对挑战。不是做次深呼吸平静下来，而是深吸一口气，感受可以吸取到的能量，然后运用它，问问自己“我可以怎么行动，或者做何选择，能够与当下的目标保持一致？” 视压力为资源，是因为它令你相信我能做到。拥抱压力是自我信赖的根本：觉得自己可以，并视身体为资源。你不必等着害怕、压力或者焦虑消失，只是做最重要的事情。压力不是停止或放弃的信号。这类思维转换是催化剂，而不是治疗，它并不抹去痛苦或让问题消失。 与人联结 照顾与友善理论不是说压力总导致关怀，它仅仅说，压力能经常使人更具有关怀性。联结冲动，既是自然的压力反应，也是抗挫力的来源。 照顾和友善反应，是减少恐惧和提升希望的生理状态。为了确保有勇气保护所爱之人，照顾与友善必须和逃避伤害的基本生存本能作战。照顾与友善反应令你主动社交，拥有勇敢和智慧，包含大脑三个系统的活动：1. 催产素控制社会关爱系统；2. 奖励系统释放神经传导素多巴胺；3. 神经传到血清素驱动协调系统。任何时候，你选择帮助别人，就会激活这个状态。（为什么这么多人的终极目标是服务他人） 同情崩溃：试图逃避别人的压力带给我们的压力，因而裹足不前，而不是行动。 当在乎的人受苦时，如果聚焦于安慰，帮助和照顾所爱之人，我们会体验到希望与联结；相反，如果聚焦于解除自身痛苦，我们会身陷忧虑。如果你受逃避，自我怀疑的折磨，或者感觉要崩溃，助人是最有效的动力助推器之一。 痛苦中的孤独感，是转换压力的最大障碍之一。想减少孤独感，可以做两件事情：1. 提高对他人痛苦的认识；2. 对自己更加开放。那些需要联结，支持和关怀的人，往往认为得等着别人主动前来，提供那些东西。你能做的，最有益的思维转换之一就是：视自己为资源 幸福成长 经历痛苦的好处，并不是来自压力或者创伤事件本身；它来自你，来自困境唤醒的力量，来自化艰难为意义的人类自然本能，成长的源泉是你自己，你的优势，你的价值观，以及你选择如何应对困难。杀不死你的，都会令你强大。 对于负面事件，在发生之初，毫无争议是坏的，看到痛苦的消极面很容易，微妙之处在于，也能看到其他的。人们看到自己或生活的积极一面，并不代表他们不再痛苦。注意的是，同时看到好坏两面比单纯注意好处，会带来更好的长期结果。 灾难思维，不仅让苦难体验更难受，而且使人更加容易放弃。 我们经常把失败看作停止的信号，要么是自己有问题，要么是目标有问题，这会引发自我怀疑和放弃的恶性循环。成长性思维视挫折为不可避免的东西，遇到困难意味着这是利用资源的机会。不是说不会遇到挫折或挑战，而是在发生时，你会怎么做。 发现好处不应该是对每个小沮丧的膝跳反应，琐碎时间不是寻求成长和积极变化的好地方。同时，也不是每个创伤都有积极面，你不应该强迫自己对所有的痛苦做出积极的诠释。当一个压力事件对你影响很深的时候，发现好处才最有力量。 替代成长：人们可以从他人的创伤体验中找到意义，获得个人成长。如何做到替代成长，而不是同情其不幸呢？最重要的因素是同理心。你必须感同身受，想象自己深处其中，你还得在看到痛苦的同时，发现他们的优势。替代成长的最大障碍之一是怜悯。因为怜悯保护你不和别人的痛苦保持的太近。","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"025：自控力：实操篇（凯利.麦格尼格尔）","date":"2019-03-02T23:06:23.000Z","path":"posts/读书笔记/025-自控力：实操篇/","text":"行为和情绪之后都有动机，观察并接受动机，通过思维转换看到其好的一面，然后聚焦于目标和价值观上，这是这本书比较核心的内容。洞察并接受行为背后的动机需要刻意练习，将这种练习流程化，即类似于大脑处理习惯一样组块化，然后通过暗示来自动触发流程行为，最后自然而然就能收获这种思维的奖励。 高效的思维模式 有效率的拖延 实践有效率的拖延，把“我应该”做变成“我想做”，把“我不要做”变成“我想做” 凡事都未必要做到尽善尽美 忙碌也是一种积极的压力，越忙碌的人越能体会到幸福，自己要看开一些 身体化认知 身体化认知包括身体的姿势在内，特定的身体状态、感觉和动作能够产生特定的内心状态。能量姿势：挺直后背站立，手臂下垂端坐。可以通过香味，声音等作为提升效率的开关（仪式感） 心理动机 所有人都拥有的最基本的，积极的心理动机： 关联性：感知自己和他人、集体或者重要目标之间的关联 自主性：能够自由的做出决定人生质量的行为和选择 熟练程度：知道自己有能力处理手头的工作，并能够做出贡献，自身的学识和进步能够让个人得到满足 重塑工作法：主动的将被迫去做的工作变成值得去做的工作。可以从小处改变自己的工作方式。 提升工作干劲的三类关键问题： 在职场中，你最看重的人际关系是什么，为了进一步深化这种关系，你能够做些什么？ 在工作中，，哪些目标，愿景，宏大的计划在支撑着你做出个人贡献？ 自己的职业规划是什么，打算如何发展自己的事业，能以最快的速度实现这一目标的方法是什么？ 上瘾的惯性 上瘾时，我们的大脑被回报机制操纵了，就像刷抖音一样，我们产生了一种被急忙催促着的感觉，与其说是一种乐趣，不如说是一种不得不继续刷新的冲动。原本始于快乐的事情，结果变成了毫无乐趣的冲动，被胁迫的一种欲望。当我们的欲望得到满足时，或者预感自己能够得到满足时，多巴胺神经系统就会被被激活。 在接触诱惑之前，想好一件重要的事情，设定一个定时器，限制自己沉迷的时间。观察自己是如何变得上瘾的，找到并去做能够让自己内心得到满足的事情。 制定目标 如何有效制定目标： 思考新的一年里“打算获得怎样的成长” 思考“是什么”之前，先想想“为什么” 设定具体的行动目标，从最小的一步开始行动 接受周围人的帮助 设定目标前要做的5件事： 包括意想不到的困难在内，列出过去一年中最好的回忆与成绩 列出人生中的感恩清单 想象新的一年里的重要计划 站在后年的1月1号，让未来的自己给现在的自己写信 新年目标中也可以包含与他人相关的内容 成长认知力 设定自己的成功标准 期待做出改变与实现改变的意志是不同的两码事。为了达成目标，我们期待做出改变，但这一点远远不够，我们还需要有正确的欲望与期待。哪种当你想要轻言放弃的时候，能够给你力量让自己坚持到底的那种欲望和期待。 思考为什么要做出改变的要点： 是否希望获得称赞，金钱，晋升这样的外部回报？ 是否会将“我不想让自己再感到自卑”的想法放在第一位呢？ 是希望获得他人的认可吗？ 能改善你的生活质量吗？ 能反映出你内心的“想要成为什么样的人”吗？ 这种改变是让你觉得有价值，有乐趣的事情吗？ 正确关注他人看法的方法： 要接受一个事实，那就是“我们无法让所有人都满意” 不要就“是否该去追求目标”而征求意见，而应就“如何达成目标”去寻求建议 所有重要的目标中，都应设定一个属于自己的成功标准 成长型思维 鸭子综合征的名于鸭子在水中有用的状态。水面之上，我们看到的鸭子是轻松的游来游去，但在水面之下，则要拼命的扑腾，让自己一直前进而不会沉下去。 鸭子综合征有两个特点： 坚信获得成功才是最重要的 坚信不能让周围的人看见自己为了成功而拼命努力的样子 不要隐瞒自己的问题，要去应对这些错误。（不要将学习区和展示区混为一谈）所谓失败和错误，只不过是让我们找出应对方法，采取最佳措施的一个契机而已，一个产生新发现的机会。 失败反映是指一种由失败或被拒绝的情绪引起的恶行循环。要想从失败反映，最重要的是，不要试图去隐瞒或压抑自己很在意，很看重这件事的原因，而是要好好思考它，而不是告诉自己这没什么大不了的。我们要思考为什么自己觉得这个目标、角色和关系很重要，转变观念，将失败和挫折当成学习和成长的机会。 和情绪做朋友 压力 “感受到较大压力”和“认为对身体有害”这两种想法组合在一起，会引起身心问题。与之相对的是“虽然我感受到了较大的压力，但是我认为压力会带来一些好处”。越回避压力，越容易感到不安和低落。 遇到压力，不要认为必须减轻压力或者想要排解压力，或者觉得自己不行。应对压力的最好方式，不是想着去减轻或者回避压力，而是要改变自己的看法，试着去接受这种压力。比如，哪个工作是没有压力的。承认自己有过痛苦的经历，让自己去接受这一点，然后将自己的感受原原本本的记录下来，这才是关键。以成长性思维来看待压力。 自我效能 所谓的自我效能，是指能运用自己拥有的一切条件，包括自身的努力以及周围人的帮助等，去应对所面临的考验的一种信念。虽然现在的自己还不够完美，但是自己能够做到自我改善。 让周围人觉得你有能力且值得信赖，并且也让自己变得更有勇气的三个法则关键点在于不要为了让自己看起来很自信，而去刻意控制自己的行为，或者自我催眠“我很自信”，而是通过思维模式的转换，唤醒更深层次的自我依赖。 没有自信或者有不安的情绪，也可以作为“值得信赖”的一种信号。不要将其当作内心准备不足或没有觉悟的信号。 在重要的会议或交流开始前，先花几分钟时间想想“这次会议或交流为什么很重要”？ 敞开心扉，关注周围人所说的话 不安 挑战反应是一种为了完成重要事情，而调动所有必要的能力的生物学本能。首先要了解一点的是，不安的情绪能促使我们拿出全力去奋斗。当我们不安时，胸口会有发慌的感觉，这就是挑战反应，表明你的大脑和身体正在获得能引导你走向成功的能量，我们要接受这种不安，集中精力去思考，该如何运用不安感带给自己的能量，来实现我们的目标，此时此刻，我应该做出什么样的行为和选择？不要将不安视为“这次机会可能会出岔子的先兆”，也不要将精力花在抑制不安的情绪上。 嫉妒 将有害的嫉妒心转变为正能量的方法： 将自己的想法说给别人听 将嫉妒心看作提示欲望的信号，然后尝试必要的行动和挑战 再怎么嫉妒也要祝贺别人的成功 沟通 人际关系 比起所从事的工作内容来，我们更应该关注如何看待一起共事的人。与其将社交的精力都消耗在这种令人身心疲惫的人际关系上，不如多去努力构建对你有帮助的人际关系。 改善人际关系的三个要点： 思考周围是否存在需要帮助的人 亲身实践职场上的善意 承认他人的贡献，并向其表示感谢 为了表现自己而在会议上发言，或者因为缺乏自信或想一直保持低调等理由做出从不发言的行为，对团队都没有任何贡献。从不发言这种行为本身，已经向外界传递出了这样的信息:我认为没有必要发言或为讨论做出贡献。 提意见 提意见时，千万不要将评论的对象当作我们要去改变的对象，所以正确的提出意见的方法： 首先，询问清楚对方的目标是什么 其次，让其回顾自身的经历 再次，问一些能让心情变好的问题 在这一步，首次就“是否存在令人失望的地方”进行提问 以没有结论的对话，来结束这一流程 有效道歉 有效道歉的4个要点： 承认自己做了应该道歉的事情 弄清楚因为你的错误所产生的后果，以及让对方蒙受的损失 表达你已经从这一行为或失败中吸取了教训 表达你希望与对方构建起一种什么样的关系 千万不要做： 在没有认识到给对方造成多大影响的前提下，就进行道歉 不去弄清楚自己的行为造成了什么样的损失，而是不断的辩解为什么会犯那样的错误 关于需要哪些必要的补偿，不给对方表达的机会，只是自己单方面的想要解决这个事情 有效感谢 有效感谢的4个要点： 对对方的行为给出评价 说清楚，为什么对方所做的事情对你来说是很重要的？对方的行为为什么能帮到你？对你来说产生了什么影响？ 从对方的行为中，能够认识到他的性格和优点是什么？ 表达你希望与对方构建起一种什么样的关系？ 自我认同 言行一致 当我们注意到自己言行不一致的时候，重要的是要能回想起自己原本想做什么，当我们弄清楚自己的价值观后，就能减少道德上的虚伪。 当事态难以按我们理想的状态发展时，不要轻易放弃理想，而是将其当作重新确认自己价值观的一次机会。 每天都要思考自己的核心价值观，确认好当天的工作中，最重要的价值观是什么，这样能防止自己做出违背理想的决定。 同理心 能够考虑到他人的需求，要求，痛苦，关心他人的苦难 以与他人互相依存的心态去体谅对方，与其构建牢固的人际关系 满足他人的需求，为减轻起痛苦和实现幸福而提供支持","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"024：我的《自控力》实践记录","date":"2019-02-27T23:36:54.000Z","path":"posts/读书笔记/024-我的《自控力》实践记录/","text":"实践规划说明 为什么要实践自控力书中的实验？ 自控力差，是因为很多行为都属于潜意识层面，意识不到，所以需要我们刻意的观察和理解，然后充分利用这些原始本能，采用训练肌肉的方式训练自控力。 将潜意识提升至意识层面，那么必须刻意练习，这也就是这我实践《自控力》意志实验的原因。 实践方式： 总共实践10周，每周一个主题，记录6天，周日总结归纳，然后确定下一周实践内容。 为什么不一次性规划好10周的内容呢？因为每一周结束认知都会有变化，更知道应给实践什么。 记录时间： 每天4次（上班前8:00左右，中午11:40左右，傍晚18:30左右，睡觉前22:30左右） 第1周：观察意志力 制作表格，打印出来，然后专门用于记录，一天一张表，7天完成之后统一汇聚到文档中 实践步骤 回忆并观察自上次记录以来你所做的所有的意志力决定。（客观的记录所有的事情标题即可，先不做任何评判，重点在于快速全部罗列出来） 确定每一个意志力决定属于哪一种类型：我要做？我不要？ 写下每一个决定背后的我想要的力量，这个力量是否符合我的目标？ 如果是我不要的类型，我们是否可以转化为我想做的类型？ 关于每个决定，是否有更好的方式？ 困难预想 回忆不起来做了什么？ 首先，能回忆多少是多少，不要有心理负担；其次，试着在平时每半小时做一个简单的时间记录。 对自己的意志力决定不满意，情绪低落怎么办？ 接受自己，不要上升至道德和个人层面，做得不好并不意味着我不行，只能说明这一方面我需要继续练习，而我正在努力这么做，所以没有必要彷徨，继续行动就可。 觉得花费的时间太长怎么办？ 首先只是7天而已，花费不了太多时间，所以不要用浪费时间来找借口。其次，在开始之前就提醒自己控制时间，最长在一个番茄之内解决这个事情，不用太过深入的思考而花费太多时间，深度思考可以等到一周总结的时候专门花时间做。","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"024：自控力（凯利.麦格尼格尔）","date":"2019-02-25T04:36:54.000Z","path":"posts/读书笔记/024-自控力/","text":"提高自控力的最有效途径在于：弄清楚自己如何失控，为何失控。 之所以自控力差，是因为很多行为都属于潜意识层面，意识不到，所以需要我们刻意的观察和理解，然后充分利用这些原始本能，采用训练肌肉的方式训练自控力。 我要做，我不要，我想做：什么是意志力？为什么意志力至关重要？ 意志力就是驾驭“我要做”，“我不要”和“我想要”这三种力量。想要做到自控，你得在关键时刻明确自己的目标，也就是“我想要”的力量。 我们的头脑中有两个自我，一个自我任意妄为，及时行乐；一个自我则克服冲动，深谋远虑。两个自我都有价值，在意志力挑战中获胜的关键在于，学会利用原始本能，而不是反抗这些本能。然而，原始本能更多的属于潜意识层面，我们根本意识不到，所以意志力的第一法则是：认识你自己。 至少选择一天，把你做的决定都记下来，在一天结束的时候，回想你做的决定，分析哪些有利于你实现目标，哪些会消磨你的意志？ 利用这一周的时间观察，你究竟是怎样屈服于冲动的；意识到自己在做什么；什么样的想法、感受和情况最容易让你冲动；想些什么或暗示些什么最容易让你放弃冲动？ 意志力的本能：人生来就能抵抗奶酪蛋糕的诱惑 自控力不仅和心理有关，更和生理有关。只有在大脑和身体同时作用的瞬间，你才有力量克服冲动，因此我们需要认清什么是需要克制的内在冲动，所以，下一次受到诱惑时，试着关注自己的内心世界。 “三思而后行”的反应和应激反应有一处关键的区别在于：前者的起因是你意识到了内在冲突，而不是外在的威胁。因为内在的冲突本身就是一种新的威胁，所以你的本能会促使你做出潜在错误的决定。而解决这个问题最有效的办法就是：放慢速度（冥想、放慢呼吸都是有效的方式）。当你意识到后内在冲突后，即当你产生“三思而后行”的反应时，你的心跳不会加速，血压也是正常的。 心率变异度称为身体的意志力储备，也就是一个衡量自控力的生理学指标。心率变异度是指窦性心率在一定时间内周期改变的现象，是反映交感和副交感神经张力及其平衡的重要指标。当有压力时，心率升高，变异度降低，反之，越平静，心率越低，心率变异度。 提高心率变异度的方式有：冥想，控制呼吸速度（将呼吸频率降低至每分钟4-6次），锻炼（可以有效提高心率变异度的基准线，每次5分钟就可以产生效果），睡眠和饮食。 5分钟的绿色锻炼可以有效缓解压力，增强控制力。绿色锻炼指的是任何能让你到室外，回归到大自然怀抱的活动。如果你觉得锻炼太累，或者没有时间锻炼，那么不妨将锻炼当作恢复体能和意志力的方法。（见《精力管理》） 早睡的真正问题并不是强迫自己去睡觉，而是远离那些让自己没法睡觉得事情。 压力让你关注及时的、短期的目标和结果，而自控力则需要你的大脑有更广阔的视野。 试着找出持续一天或者一周的压力，看看它对你的自控力产生的影响 累到无力抵抗：为什么自控力和肌肉一样有极限？ 自控消耗了身体的能量，而能量的消耗又削弱了意志力。对大脑来说，能量就是金钱，资源丰富时，大脑会支出能量，更倾向于选择长期的投资；当资源减少时，它会保存能量，更倾向于满足当下的需求，而且更愿意冒险。血糖的变化方向，决定着大脑是做出支出还是保存体力的战略性决定。 在一些小事情上持续自控会提高整体的意志力，比如： 增强“我不要”的力量：不随便发誓，坐下时不跷二郎腿，用不常用的手进行日常活动 增强“我想要”的力量：在固定的时间做固定的事情 增加自我监控能力：记录一件你平时不关注的事情，比如你的支出，饮食，阅读时间等 疲惫不是一种身体反应，而是一种感觉，一种情绪，目的是大脑想让我们停下，是一种预先警报系统，第一波疲惫感绝对不是自己真正的极限，我们可以挺过这个感觉，冲向意志力挑战的终点。 如果我们想增强自控力，就要考虑如何支撑住最疲惫的自己，而不是指望最理想的自己突然出现来拯救生活。 当你发现自己最重要的“我想要”的力量，只要你觉得自己就要在诱惑前放弃时，想一想这个动力。 这一周，试着观察自己在什么时候意志力最强，在什么时候最容易放弃。 这一周，当你面临挑战时，问问自己，那一刻哪种动力最能让你坚持下去。 容忍罪恶：为何善行之后会有恶行？ 1. 道德许可： 当你做善事的时候，即便是想想你做过的善事，你会感觉良好，这意味着你更可能相信自己的冲动，而冲动常常允许你做坏事。你会认为自己做决定时能够自控，也没有罪恶感，相反，你会把坏事当成了奖励，并以此为傲。我都已经做得这么好了，应该得到一点奖励。我都锻炼了，我可以多吃点。我都吃蔬菜了，我应该吃一个炸鸡腿。我们忘记了自己的真正目标，我们把放弃节食、多抽根烟等不良行为当成了对自己的款待。不要把支持目标实现的行为误以为是目标本身。 当你把意志力挑战当作衡量道德的标准，做到就是好，没有做到就是不好，那么你就会陷入道德许可陷阱，而给自己找借口允许自己去做无效的奖励。 2. 进步： 进步是好的，但是进步已经给全社会道德化，所以这也是一个道德许可陷阱。进步一小步可能让你后退两大步，我们把需要做的事情当成了自己已经付出的努力，这会给我们错误的满足感。可以理解为：目标释放。 进步可以激励人，甚至可以提高未来的自控力，但前提是，你要把自己的行为当成努力完成目标的证据，你要清楚自己做了什么，并盯紧你的目标。记住我们为什么会拒绝诱惑，这是个很有效的方法。(取消许可，牢记理由) 3. 今天犯错，明天补救： 当我们想到未来的选择时，我们总是期待明天你能做出和今天不一样的选择，我们认为自己能够在未来弥补过错，而且还能做得更多，从而压力减小了，然后就更容易在今天放纵自己。其实今天和明天毫无区别。 4. 光环效应： 当我们屈服于诱惑时，我们会迫切想给诱惑我们的对象加以道德标准，好让我们在放纵自己时毫无负罪感。只要使你放纵的东西和是你觉得品德高尚的东西同时出现，就会产生光环效应。比如零脂肪食品。 这一周，试着观察你意志力挑战成功或者失败时，你是怎么对自己和他人解释的。你会不会以自己的善行为借口，允许自己去做坏事情？ 这一周，看看你是否被那些破坏长远目标的光环所笼罩？ 大脑的弥天大谎：为什么我们误把渴望当成幸福？ 多巴胺会促使人们期待得到奖励，但是却不能感觉到获得奖励的时的快乐。当奖励系统活跃时，感受到的时期待，而不是快乐。当多巴胺劫持了你的注意力时，大脑只会想如何获得或者重复哪个触发它的东西。（习惯的力量中有类似的说法）即使你抵抗住了诱惑，大脑也会分泌更多的多巴胺去满足你奖励的承诺。 我们可以试着将不喜欢的东西多巴胺化，将不想做的事情与能让多巴胺燃烧的事情联系在一起。我们可以给自己设置奖励，比如说鱼缸奖励。 由于多巴胺的首要功能是追求快乐，而不是让我们快乐，并且由于没法立马得到快乐，所以我们也会产生压力。我们需要区分让我们的生活有意义的真实奖励，和让我们精力分散上瘾的虚假奖励。 这一周，试着观察是什么吸引了你的注意力，是什么给了你奖励的承诺，强迫你去寻求满足感？ 这一周，看看你是否发现渴望会引发压力和焦虑，如果你屈服于诱惑的话，你觉得这是自己对奖励承诺的反应？还是在缓解焦虑？ 那又如何：情绪低落为何会使人屈服于诱惑？ 当你情绪低落时，你一般会选择奖励的承诺来让自己高兴起来，而通常，我们缓解压力的办法反而会让我们更有压力，即压力会勾起欲望。我们需要找到一种有效的解压方法，比如锻炼、阅读、外出散步、冥想等，而抽烟、上网、看电影、购物并不能有效缓解压力。在你感受到压力之前，先想出一些鼓励自己的方法。 屈服会让你对自己失望，会想做一些改善心情的事情，那么最廉价和快捷的方式往往是导致你情绪低落的事，从而进入“那又如何”的恶行循环，所以导致恶行循环关键不在于第一次屈服，而在于第一次之后产生的羞耻感、罪恶感和失控感。因此在失败的时候，我们要选择原谅自己，接受自己。 发誓改变会让我们感觉良好充满希望，然而当实现时遇到困难没有达成目标，失望和失控感就会产生，此时我们更容易放弃努力。而当我们希望再次拥有时，我们又会再次发誓做出改变。循环开始，成为“虚假希望综合症”。为防止这种情况，我们要做乐观的悲观主义者，预测自己在什么时候会如何受到诱惑和违背承诺。 这一周，注意观察什么事情会引发你大脑里的恐惧管理？ 这一周，留意你是如何应对注意力失效的？ 出售未来：及时享乐的经济学 对于及时奖励和未来奖励，大脑的处理方式是不一样的，即使奖励会激活更古老，更原始的奖励系统，刺激相应的多巴胺产生欲望；而未来奖励则不会激活奖励系统。对于未来的奖励，我们会打一个折扣。 我们常常认为未来的我们可以做到，会不一样？原因在于，我们不知道未来自己的想法和感受，大脑会把未来的自己当成别人。等到了未来，理想中的自己却不见了，最后做出决定的还是毫无改变的曾经的自己。 等待10分钟：在诱惑面前强制安排10分钟的等待时间，在这期间，一定要想着长远的奖励，抵制住诱惑 降低你的折扣率：当你收到的诱惑与长期利益冲突时，想一想，这个选择意味着，你为了即时的满足感放弃了更好的长期奖励 预先对未来的自己做出承诺：做好拒绝诱惑的准备，让改变偏好更难，用奖励和威胁来激励未来的自己 传染：为什么意志力会传染？ 目标、肥胖等都可以传染。破窗效应。社会认同。镜像意志力失效的三种形式： 无意识的模仿：镜像神经元，我们有模仿别人行为的本能 传染情绪：同理心 当我们看到别人屈服于诱惑时，我们的大脑也可能受到诱惑 目标感染仅限于你已经拥有或是和他人共享的目标。目标传染既可以感染自控，也可以感染自我放纵。我们可以通过树立榜样，建立自豪感，加入社团组织等方式增强意志力。 别读这章：我不要力量的局限性 为什么人们想消除某种想法或情绪，结果却适得其反呢？比如说，接下来5分钟，不要想白色的熊。 我们大脑在处理这个指令的时候分为两不分，并且由两而不同的系统去执行。一部分负责将人的注意力从被禁止的想法那里引开，这个过程称为“操作”；另一部分负责寻找证据证明你没有去想、去感觉、去做你不该去想、去感觉、去做的事情，这个过程称为“监控”。监控是自动运行的，不需要耗费大量精力。 这就有一个有趣的现象：为了阻止你“堕落”，“监控”直接把你引向了堕落。更有趣的是，当一个想法在你脑海中不停的回想时，你可能认为它一定是真的，虚假成为事实。 那么如何避免这个问题呢？同样有趣：放弃自控，观察并接受自己所有的想法和感受。是关注，而不是转移。忠于自己的感受，但别相信你所有的想法。直面欲望，但是不要付诸行动。 承认脑海中的欲望，以及渴望某种事物的感觉 不要马上试着转移注意力或与之争论，接受这种想法或感觉，提醒自己白熊现象和反弹理论 退一步考虑，意识到这种想法和感觉并不受你控制，但你可以选择是否将这些想法付诸实践 记住你的目标，提醒自己预先做出承诺 每一个我不要的背后都有一个你想要的内容，如果你关注自己想要做什么，而不是不想做什么，你就可以避免反弹效应带来的危害。 花一周时间来关注你想做什么，而不是你不想做什么，并最后评估自己的表现。","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"世界记忆大师教你快速提升记忆力","date":"2019-02-23T13:30:29.000Z","path":"posts/快速提升记忆力/快速提升记忆力/","text":"圆周率挑战 从前有座山，山巅有一座寺庙。寺庙里有一壶酒儿，酒流到了五座山上，山上有五个爸爸。爸爸浑身上下都是酒气，酒气飘到了两座山上，一座山是酒山，一座山是二山。突然从两座山中开出一辆巴士，巴士上有六个儿童，儿童手上都拿了一根柳丝在跟珊珊打招呼。珊珊正在爬山，山頂有两个旗子，一个旗子上面有一个酒壶，一个旗子上面有一个玲儿。玲儿掉到了爸爸的头上，爸爸在拉着四姨，四姨手里有一个酒器，酒器一漏，漏到了旧伞上。旧伞下面竟然是舅舅，舅舅手里拿着三个旗子，他把三个旗子送给了五姨，五姨在旁边领舞。 3.141592653589793238462643383279502884197169399375105 什么是记忆 记忆是个体经验在头脑中积累和保存的心理过程，是人脑对过去经验的反映，也是人类满足知性快感的一种典型的行为。记忆的过程主要分为识记、保持和再现三个阶段。记忆中的记体现在编码和存储上，忆体现在提取上。","tags":[{"name":"个人成长","slug":"个人成长","permalink":"http://ruanxinyu.github.io/tags/个人成长/"}]},{"title":"023：刻意选择","date":"2019-02-22T22:46:56.000Z","path":"posts/读书笔记/023-刻意选择/","text":"用左手吃饭，是隐喻，是指代那些有违我们惯性思维的行为或方式。这本书的主题就是，刻意选择那些有违惯性思维的行为或方式。主动增加不确定性，就可以给我们的生活带来惊喜。 石榴原则：在一个充斥着各种各样建议的网络时代，我们需要做的就是要相信自己的直觉。而直觉得培养建立在日常生活中，建立在我们对周围事物的细微观察上。 思考 人生算法01：如何从挫折中快速恢复？（学会遗忘） 在现实生活中，大多数失败你是不会承认的，更不用说去庆祝了。出了认清现实，想要快速的从挫折中复原的下一步应该是学会如何保持冷静。 在你的能力范围内，把你的“解释风格”切换成积极的，向上的。（积极思考之父马丁塞利格曼《活出最乐观的自己》） 降低自己的要求（你没有自己想象中的那么重要） 别再想它（公开做出承诺，表示已经放下） 人生算法02：如何掌握自己的命运？（开始抽烟） 掌控自己命运就是在生活中做一些有象征意义的选择。 去领导，而不是去跟随 拥抱开小差的自己（灵感） 选择离开 人生算法03：如何“透支&quot;你自己？（重新制定你的播放列表） &quot;透支&quot;你自己是指追求提升自我的机遇而不是考虑自身的经济因素。（注意不要陷入极端） 专注于你最擅长的地方 重在过程与经历，而不是最后的结果 卖掉你拥有的东西 人生算法04：如何学习知识？（学会约德尔唱法） 学会一些现在看似无用的知识。 多提问 买自己不熟悉的杂志 多花点时间在沙发上（前提是在转换和吸收新知识） 工作 人生算法05：如何完成领导没有要求你做的工作？（忘掉工作内容的条条框框） 你的工作不应该只是职位描述中罗列的内容，那只是你必须做的工作。 理解真正的需求（一方面是任务本身，一方面是任务背后隐藏的潜在需求） 让它变得更好（在提交你的工作成果之前，对其加以改进是超过要求的关键） 重新写自己的职业描述 人生算法06：如何做一个正直的人？（永远不要向顾客提供烤焦的面包） 即使没有人盯着你，也要保持一致性。 分享大家未曾期待的真相 履行你的承诺（培养践行自己说的话的习惯） 写上你的名字 人生算法07：如何学会共情？（做一个异装癖） 想象一个具有戏剧性的背景故事 谨防无意激励 询问他人感受 人生算法08：如何做到更及时？（养成“拖延的好习惯”） 不求准时，但求及时。准时指的是有计划，一丝不苟，按部就班的做事；而及时是指在对的时间去做对的事。及时讲究的是能根据实际情况，做出相应的调整，并及时的做出时间的再分配，而不是盲目的遵从自己原定的计划（平衡准时与及时，而不是非黑即白）. 战略性拖延：将你需要做的事情延迟到你能优化的最佳时间去做。 专注 增加自己的“及时性”学习（二八原则） 沟通 人生算法09：如何更好的讲述你的故事？（让他人哭出来） 只需做，无需多说 让故事更真实 从历史故事中获取灵感 人生算法10：如何做一个积极的倾听者？（学会打断） 少附和，多问细节性信息 使用反馈性预演 按着“剧本”走（&quot;的确如此，而且...&quot;的即兴聊天思维） 人生算法11：如何有自己的观点？（永远不吃花菜） 在处理一件事情时，能否持有自己的观点，决定着你到底是一个积极的主导的角色，还是被动的服从命令的盲从者。允许被说服，意味着在有证据表明自己一直以来的想法是错的时候，愿意改变自己的想法。 学会将信息与事实分开 别当笨蛋（当一个笨蛋是指在没有任何事实，依据，也没有能力的情况下选择相信一个观点并为其争辩） 呆在一个不显眼的位置（剑走偏锋，可以选择别人不去选的那种观点） 人生算法12：如何简化所有的事物？（记号笔的神奇之处） 简化信息的优势并不局限于你表达自己观点的方式，或者你用什么样的笔来记录你的想法。 意识到“知识的诅咒” 动手画，而不是动嘴说 使用平实的语言 连接 人生算法13：如何成为社交网络中的桥梁式任务？（把你的玩具放在外面） 成功人士更倾向于建立一个社交关系网，而非只是通过名片或者以网上申请好友的方式建立单独的联系。 通过介绍解决问题（把自己当作中间人，帮助他人解决问题） 不止“向右滑”（主动寻求建立连接的机会） 别挡路（介绍别人认识后，选择主动离开） 人生算法14：如何激发更多的灵感？（重新定义你的牛仔裤） 根据场合而不是规定来决定自己的穿衣风格 找到一种可以展现自我的途径 展现你的亲和力 人生算法15：如何分享？（帮别人偷窃） 拥抱第一个关注你的人 让参与变得更简单 欢迎新观点的融入 书中引出的书籍清单 颠倒思考题 人性的弱点 CEO说：人人都应该像企业家思考 清醒思考的艺术 看见成长的自己 请假裝关心 讲述铸就成功 行为设计学：让创意更有黏性 好点子是偷来的 爱因斯坦的梦 痛点 疯狂的独角兽 聪明人的心理学 全新销售 我可以让你富 救猫咪：电影编剧宝典 把妹达人 商业词汇大全 沟通：用故事产生共鸣 排班设计 餐巾纸的背后 每周工作4小时 深度生存 活出最乐观的自己 当我不再说话的时候，你就知道我死了 摇摆 怪诞行为学 政治头脑 精英的人格魅力课 允许被说服 别独自用餐","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"022：精力管理","date":"2019-02-20T23:07:17.000Z","path":"posts/读书笔记/022-精力管理/","text":"时间管理，精力管理和注意力管理，不是非黑即白的关系，而是属于相辅相成的关系，它们围绕的核心就两点：效率和价值。精力管理的重点在于高效，注意力管理的重点在于价值，而时间也是可以通过串并行进行管理的。 本书的更重要的是让我意识到精力的分类，并且需要刻意创建仪式习惯去恢复精力。一直以来，一方面过度消耗，另一方面又过度恢复，造成精力管理混乱。 在注意力缺失的年代，我们对广度的热爱超过了对深度的关注，注重反应速度却不愿深度思考，我们着眼现状提出权宜之计，往往却忽视了长期的负面效果。 精力，而非时间，是高效表现的基础。有技巧的精力管理是高度表现、健康和幸福的基础。通过活跃的体能、联动的情感、专注地思维和内省的意志才能达到最优效能时的最优精力，即进入全情投入状态。针对这四个方面，保持消耗与恢复的平衡，同时通过突破舒适区系统训练以扩大舒适区范围。 管理精力包含4个原则： 原则一：全情投入需要调动四种独立且相关联的精力源：体能，情感，思维和意志 原则二：因为使用过度或者使用不足都会削弱精力，必须不时更新精力以平衡消耗 原则三：为了提高能力，我们必须突破自己的惯常极限，模仿运动员进行系统训练 原则四：积极的精力仪式习惯，即细致具体的精力管理方法，是全情投入、保持高效表现得诀窍 旧观念 新观念 管理时间 管理精力 避免压力 追求压力 生活是一场马拉松 生活是一系列短跑冲刺 放松是在浪费时间 放松是有效产出的时间 回报驱动表现 目标驱动表现 依靠自律 依靠习惯 四种精力 体能精力（为身体添柴加火）： 走出舒适区，然后等待恢复，是拓展体力的方法。 体能再生方式：运动（间歇训练），规律的睡眠（早睡早起），补充食物（每天5-6顿），喝水（8杯水），小憩（20-30分钟） 我的需要改进的地方包括：间歇训练以提高运动效率，固定晚上睡眠时间，提高喝水的量，中午和晚上下班后小憩20分钟 情感精力（把威胁转化为挑战）： 情感精力的终极目标是掌控各种情感。自信，自控，人际关系和共情是正面情感经历的关键因素，为了达到最佳表现，我们必须汲取愉悦，积极的情感，享受挑战。其实，单纯的变换频道就可以有效增加情感精力，关键是要表达出你对激发正面情感的活动的重视，并把投入在它们上面的时间视为神圣不可侵犯。 留意你对那些对立品质的评价和态度，只有接受那些看似相反的品质，不逼自己在其间二选一，才有可能获得最深刻最丰富的情感能力。 我的需要改进的情绪包括：焦虑（阅读《控制焦虑》），自卑（阅读《自卑与超越》），共情（刻意练习倾听），急躁（三明治技巧，冥想） 思维精力（保持专注与乐观）： 最有益于全情投入的思维精力是实现乐观主义：看清事物真相，却仍朝目标积极努力。优化思维精力的关键在于思想准备，构建想象，积极的自我暗示，高效的时间管理和创造力。 创造的最高形式依靠的是投入与抽离，思考与放松，活跃与休息之间有节奏的交替。 我的需要改进的地方包括：现实的乐观主义（积极的自我暗示），专注力（番茄工作法） 意志精力（活出人生意义）： 意念指通向更深层的价值取向和超越个人利益的意图，能为所有层面的行为提供动力。只有在为他人奉献和照顾自己之间找到平衡，尊重他人的同时坚守自己的立场，意志力才能延续下去。拓展意志力需要将自己的需求置于次位，为超出个人利益的目标让路。 最强大的意志力量是：激情、投入、正值和诚实。 我的需要改进的地方包括：言出必行 三个步骤 管理精力包含3个步骤：目标-正视事实-行动。 目标： 我们太过忙碌，无暇追寻生命的意义。**问题的关键并非在于生活赋予你怎样的意义，而在于你是否主动将生活变成自己价值取向的载体。**价值观才是终极的行为指南。 请思考如下问题： 如果现在就是人生尽头，你学到的最重要的3件事是什么？为什么他们如此重要？ 想想你最敬重的一个人，描述他身上你最钦佩的3中品质 你能做到的最好的自己是什么样的？ 你希望你的墓志铭如何总结你的人生？ 正视事实： 每个人对于自我欺骗都有无限潜能，我们有数不清的手段将意识从不愉快、令人沮丧或不符设想的事实上转移走，然而否认和欺骗自己是需要消耗精力的。我们只有面对现实，才有机会理解和应对负面情感。 自我欺骗的一种形式是，认定自己的观点就是事实，所以正视事实的基础是收集事实，我们要意识到我们的观点可能是错的，我们要保持一种开放的心态。 正视现实还有一个点在于：接受现实，然后聚焦于解决方案上，不要陷入消极的情绪中。 行动： 行动相当于习惯养成，这个《习惯的力量》和《如何想到又做到》都有解读，这里提到的重点在于仪式感，这个很重要。也就是说我们需要花时间用于精力恢复上，主动寻求机会，而且保证其连续性。","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"021：习惯的力量","date":"2019-02-16T11:47:56.000Z","path":"posts/读书笔记/021-习惯的力量/","text":"习惯回路 人每天有40%的行为并不是真正由决定促成的，而是处于习惯。大脑将一系列行为变成一种自动的惯常行为，成为组块化，这是习惯形成的基础。 习惯回路由3步组成： 存在一个暗示，能让大脑进入某种自动行为模式，并决定使用哪种习惯 存在一个惯常行为，这可以是身体、思维或情感方面的 存在一个奖赏，让你的大脑辨别出是否应该记下这个回路，以备将来之用 这里有一个事实，就是在习惯出现时，大脑不再完全参与决策，它要么完全静下来，要么集中做其他的任务。所以除非你可以抵制习惯，找到新的惯常行为，不然习惯模式依旧会自动展开。习惯一旦养成，就会影响我们的行为，而我们往往是意识不到的。 习惯改变后并不会消失，这样不至于放个暑假你就不知道怎么开车了，问题是你的大脑无法分辨出好习惯和坏习惯，如果你有一个习惯，那么这个习惯会一直蛰伏在你的大脑内，等待正确的暗示和奖品的出现。 奖励在习惯中至关重要，大脑一直在寻求奖励，就像尤金这种病人，幸福的记忆都消失了，但大脑依然后这种令人惊奇的能力去寻找幸福。 胡里奥黑莓汁实验： 在习惯养成初期，只有在喝到黑莓汁时才会产生奖励： 在习惯养成之后，在看到屏幕图形时奖励就产生了： 奖赏提前，因为产生了预期。如果这种预期没有满足，则容易生气或者没精打采，即产生了神经渴望。图案不仅成为了拉动拉杆的暗示，同时还成为了脑内愉悦反应的暗示。即暗示出了能够触发惯常行为，还能触发人对即将到来的奖赏的渴求。 为什么习惯如此强大：因为他们能够创造神经渴望。我们把暗示和特定的奖赏关联起来，大脑中就出现了潜意识的渴望，自动选择惯常行为，从而驱动习惯回路继续运转。 核心习惯 核心习惯是指那些自身变化后，会驱动和重塑其他行为模式的习惯。核心习惯说明成功并不需要做对每一件事，而是要辨别出一些重要的优先因素，并将其变为有力的杠杆。核心习惯对企业和个人都是一样的重要。 我2019年的核心习惯是运动和阅读，从而撬动早起早睡、积极主动等习惯 核心习惯推动改变的方法： 找到小成功。小成功其实是细微优势的稳定运用，一旦一个小成功完成了，就会推动下一个小成功出现。（目标分解） 打造能够促成其他习惯蓬勃发展的架构（多问为什么，找到核心原因） 建立能融入心价值观的文化（核心习惯让艰难的抉择变得容易） 当企业出现危急时，正好是重塑组织习惯的良好时机，因为这个时候大家都想改变，推动是最容易的。 其他内容： 星巴克的拿铁方法：静静听顾客的要求，接受顾客的抱怨，用行动来解决问题，向他们致谢，然后耐心解释问题的原委。 教育子女：每次晚饭提问。今晚的学习计划是什么？明天你准备做什么？今天经历了哪些失败？（将你想传递的价值观融入平常生活） 商家套路 健康的蔬菜水果放在超市的入口（补偿心理让你更容易买垃圾食品） 最赚钱的商品排在商场的右侧（默认右转的习惯） 商品并非按字母排序，而是随即排列（更长的徘徊时间） 音乐电台在熟悉的歌曲中插播新歌曲（用旧的习惯装扮新内容） 改变习惯 要改变习惯，你必须留在旧习惯回路中的暗示，提供旧习惯回路中的奖赏，但是要插入一个新的惯常行为。 习惯是由渴望驱动的，要控制这种渴求感控制我们，我们就必须找出背后驱动我们行为的渴求究竟是什么，可以通过“意识训练”（描述引发习惯性行为的暗示的做法）来实现。(从无意识的无能状态转化为有意识的无能) 改变习惯的框架： 找到惯常行为 用各种奖励进行试验：替换惯常行为，15分钟后你是否还会有相同的渴求 将暗示隔离出来：时间，地点，情绪状态，其他人，之前紧挨着的动作 制定计划 一旦你弄清楚了习惯背后的机理，也就是你能够分析出暗示，惯常行为和奖励时，你就有了超越习惯的力量。","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"020：让未来现在就来：成为高效能的行动派","date":"2019-02-16T02:00:56.000Z","path":"posts/读书笔记/020-让未来现在就来/","text":"时间管理 时间管理真正的意义在于，不拘泥方法论，而是结合自己的实践操作不断改进总结，在深入这个体系的过程中，慢慢梳理出自己真正认可的价值观。 当你很忙时，如何管理时间？ 学会构建自己的知识体系，关注学习区，进入学习+分享的模式 采用二八法则，断舍离，利用块状时间关注高成效事务，利用碎片状时间充电 记录并分析时间，番茄工作法保持专注 黄金圈法则：Why(动机)，How（方法策略工具），What（行为） 结构拖延法 原理：每位拖延者都会把必须要做的事往后拖，但不等于拖延者什么都不做，他们会做些略微有用的事，比如削削铅笔、整理一下东西。这样就可不去做那些重要的必须做的事了 目的：不是为了改掉拖延习惯，而是利用上述心理，让自已做更多有用的事儿，变成有用的人 方法：把事务排序。把看起来最紧急、最重要的事排在最前头。【重点】选择一另一些值得做的事位列其后。于是，完成后边这些任务，就变成避免去做清单最上方的任务的一种手段。借助于这种排列得当的任务结构，拖延人士就以可做更多有用的事儿了 吃掉那只青蛙 简化原来的时间管理的方法和内容，专注于重要的事情，专注于精力管理 明确你的三只大青蛙：最重要的事情 先吃掉那只最大最丑的青蛙：最重要的事情决不能受限于最不重要的事情 每天保护自己的青蛙时间：最高效的时间段，番茄工作法 把“3的法则”应用到整个生活：围绕“重要但不紧急”的高杆杆活动组织时间 创建并严格遵守每天的待办事项清单 早起 晚上保证在黄金时间段休息，然后中午和傍晚通过小憩来恢复精力 通过早起倒逼早睡 睡前仪式，关闭手机，冥想，看书 早起仪式，运动，能量词，晨间笔记（番茄工作法+吞青蛙） 阅读 工作越久，越发现自己需要学习，阅读的需求越迫切。 碎片化时间比较适合用来读书，可以考虑使用番茄来记录读书时长。 知识体系： 为什么阶段：黄金圈法则 获取阶段：练习快速阅读和主题阅读 整理阶段：时间管理，精力管理，断舍离，思维导图，读书笔记 分享阶段：如何写文案，如何营销 利用阶段：如何实践，提高效率 创新阶段：个人品牌，快速迭代想法 很多时候是觉得没有时间，所以才参加培训，以便于直接吸收别人整理好的内容，但问题是，当你自己没有积累时你是无法吸收的。 培训很多时候是奔着讲师去的，结果去了之后才发现是徒弟掌勺。 通过阅读学习基础知识，把培训时间放到高阶提高上。培训前准备自己的问题，争取针对性的知道，培训后做一个分享，以教促学。 职场 什么叫会干活？以结果为导向；注重全过程（PDCA环） 专注于扩大自己的影响圈，然后实践高效能人士的七个习惯。职场中注重感性思维，理性和感性相互平衡。 我不提倡加班，我提倡你在8小时之外构建自己的核心竞争力。工作中你不会的，你以为创业就会了吗？学会抓住工作的机会锻炼自己，职场的三个阶段： 优秀个人管理：追求个人的高效率，保持专注，注重思维训练 高效团队管理：追求团队的成果，知道如何安排任务，调度资源，论功行赏 卓越组织管理：领悟公司的战略决策 你关注过你的领导都在干嘛吗？没有人为事情负责的时候，你来负责，不管有没有给你头衔，你都是领导。产品经理不是头衔，是你负责的事。 个人 5个核心技能：提问能力,检索能力,阅读理解能力,写作能力,实践能力 走出自己的舒适区，大胆去尝试 建立自己的品牌 学会如何培养习惯 学习写作 书中资源列表 书籍列表： 笑话方法论 让未来的你，感谢现在的你 少年啊，前路漫漫 影响力 意志力 图解番茄钟工作法 你一年的8760小时 拖延一点也无妨 吃掉那只青蛙 精力管理 哪有没时间这回事 另外八小时 8小时+ 横向领导力 微信力量 书都不会读，你还想成功 这样读书就够了 高效能人士的七个习惯 卓有成效的管理者 市场营销 非暴力沟通 启示录-打造用户喜欢的产品 一分钟经理人 人类简史 提问的艺术 走出恐惧 王者速读法 创新的艺术 以图代言 定位 学会独立思考 从为什么开始 专注力 如何高效读懂一本书快速阅读 失控 参与感老的网课创业 增长黑客 如何做好个人品牌 魔鬼搭讪学 魔鬼约会学 金字塔原理 结构思考力 透过结构看世界 全新思维 自控力 NLP复制卓越的艺术 社区列表： 行动派社群 拆书帮 结构思考力学院 十点读书会 趁早 墨咖 业问 职问 职场充电宝 人人都是产品经理 一千零一夜（梁文道） 吞青蛙小组 冬吴相对论 幸福进化俱乐部","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"019：不抱怨的世界","date":"2019-02-15T11:37:27.000Z","path":"posts/读书笔记/019-不抱怨的世界/","text":"什么是抱怨？抱怨是表达哀伤、痛苦或不满。脑子中想的不算，只有说出来才算。抱怨与陈述负面事实的区别：陈述只是为了传递信息，而抱怨则包含了强烈的情感。我们不可能同时对某样东西既心怀感恩又不停抱怨。从现在开始，不要再做抨击性的批评，相反，提些建设性的意见吧。 养成不抱怨的能力包含四个阶段：无意识的无能，有意识的无能，有意识的有能，无意识的有能。 首先你得意识到才行，而这需要刻意练习。移动手环就是一种仪式，用于从无意识向有意识的转换。 紫手环运动 紫手环运动的预期： 一般来说，人们每天抱怨15-30次 如果你对自己诚实，你会发现你可能需要好几天、好几周甚至好几个月，才能做到一整天不抱怨。 不抱怨旅程往往是反反复复回归第一天重新开始，但是坚持时长总体趋势是上升的。 紫手环运动的关键点： 每说出一句抱怨、批评、讲闲话和讽刺时，就挪动紫手环到另外一只手 记住自己的时间，如果你都记不住自己坚持了多少天，那你肯定就很难达到目标 不要管别人的手环，不要管别人的抱怨 不要抱怨之后当天就破罐子破摔 不抱怨习惯的小技巧： 每一个月或者一周给自己一个“不爽日”来抱怨 改变的第一步就是要表现得像那个你想要成为的人一样 提高抱怨的门槛，降低快乐的门槛 紫手环运动；记录感恩事件；心理暗示，我很快乐；如果抱怨，就重新说；如果你快乐，就拍手； 无意识的无能（盲区，不知道自己不知道） 该阶段重点在于通过移动紫手环从无意识的无从进接到有意识的无能 抱怨就像口臭，当它从别人口中发出来时，我们能注意得到，但从我们自己口中发出时，我们却觉察不到。 抱怨从来不会吸引，带来那些你想要的东西；相反，抱怨会使你你永远摆脱不掉那些你不想要的东西（想摆脱那些不想要的，那么就请少一些关注）如果你一直说不好的事情将会发生，那么很有可能它就会真的发生。（思想会影响健康和行动，自证语言） 我们会去抱怨不好的事情偏偏落到我的头上，但是却很少去感激好的事情降临在我们身上。（少一分抱怨，多一份感激） 习惯是通过不断重复某种行为而产生的。重复的次数越多，习惯就越根深蒂固。但是我们可以通过不断重复截然不同的行为来打破已经养成的习惯，从而培养截然不同的习惯。（如果你在无意识重复一些坏的行为呢，坏习惯也会打破好习惯） 抱怨是我们关注问题本身，以至于我们不去考虑解决问题、改善境遇的方法，“抱”和“怨”，就是拥抱自己的怨气。人们抱怨自己的不健康，扮演病人的角色，以获取同情心和注意力，并且回避那些让自己“反感的事情”，比如采取更健康的生活方式。 有意识的无能（探险区，知道自己不知道） 该阶段重点在于通过接受无能的现实，做好心理预期，然后专注于行动上，耐心点，接受自己，相信积累后一定能走向下一阶段 当你不在抱怨了，不要指望别人能够立马停止抱怨，如果你非要指出别人的不足，不妨先审视一下自己，看看你自己是否也有同样的倾向。一般你之所以能够注意到别人的缺点，是因为你自己也有相同的缺点。同样，优点也是这样。那么你的关注点应该是在缺点上还是优点上呢？ 你对别人或者自己的抱怨从来都无法带来积极的改变。你以为只有抱怨才能让别人作出改变，其实，当你向别人抱怨时，你其实是在认定对方会做你所抱怨的这件事情，而对方往往更可能会重复这种使你产生抱怨的行为。更好的方式是：说出你的期望，当对方开始朝你说的方向努力时，给于真实的表扬。 抱怨是一种竞技活动，很容易引起别人参与抱怨比赛。不幸福的关系最大的特点就是在这段关系中抱怨常在。 如果你想让别人作出改变，如果你想改善关系，那么你就要首先改变自己，以身作则。（小孩的教育） 我们为何抱怨（GRIPE）？ 寻求关注（Get attention）：解决方案是主动关注，同时不要去反驳，去接受对方，但是要往积极的方面引导 推卸责任（Remove repository）：解决方案是我相信你有能力找到方法完成这个任务，询问他，如果这事能够做到，你会怎么去做呢？ 引人艳羡（Inspire envy）：解决方案是当别人通过抱怨引人艳羡时，你应该转而赞美他，说他拥有与那个缺点相反的优点 操纵力（Power）：解决方案是让对方和他抱怨的对象直接谈谈，不要让自己站队 为欠缺的表现找借口（Excuse poor performance）：解决方案是问问他们下一次打算怎么改进 如果你说某件事是不可能的，其实你的潜台词是：我不想做这件事。 想要变得不抱怨，那么需要调整心态接受不可控制的事实，同时关注当下状态，随时随地的发现事物好的一面。 用与别人在场时一样的语气，谈论别人在场时你会谈论的那些东西。 让别人不再抱怨的最好方法不是和他们对峙，而是转移对话的方向。 保持心理健康的方法，就是要随时随地寻找事物好的方面。 有意识的有能（舒适区，知道自己知道） 该阶段重点在于不要松懈，继续保持，直到下一个阶段 开口说话前，先想想你说的这句话是不是比沉默更有意义。如果你在抱怨，那就耸耸肩，重新开始吧。 你要记住，重要的是：随时做好准备，为了你可能成为更好的自己，放弃现在的自己（离开舒适区） 批评和讽刺是两种隐藏的抱怨模式。 找一个能帮你以积极的态度重朔生活的人，他可以成为你的守护天使，帮助你在眼前任何境遇中发现光明面和善良点。你需要一个啦啦队长，在你试图放弃时鼓励你的人，希望你能够挑战成功的（共同成长，恋人） 如果你快乐，就按喇叭。（仪式感）如果一个人认为自己不快乐，那么他就不可能感到真正的快乐（自我暗示的作用，和微笑的作用是一样的，也可以通过这种方式提升自信，自我暗示能将其变为潜意识） 人们总是会数自己遇到的麻烦，却很少人会去数自己的开心事。（每天记录5件开心的事情） 我的生命多精彩呀，我多么希望我能更早的意识到这一点! 无意识的有能（宝藏区，不知道自己知道） 当你已经稳定的处于无意识的无能状态时，你心中的预设立场会是欣赏与感恩。 成为不抱怨的人能够成为教育子女的资本（不抱怨、感恩、阅读、绘画、音乐）。 当心理健康者的生活中出现令人压力增加，心烦意乱的时间时，击打喊叫扔东西等试图让怒气释放的方法，其实是没有科学依据的。生气时，在心中默数10下再说话；如果非常生气，那就默数100下。 “处理”和“抱怨”是两回事。处理是分享你对已经发生的事件有何感受，而不是去重塑这些事件。处理事情时，要确定自己说的话都是聚焦于你的感受，而不是你对这件事的解读与说明。 己立立人，己达达人。","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"018：认知突围：做复杂时代的明白人","date":"2019-02-12T06:54:24.000Z","path":"posts/读书笔记/018-认知突围-做复杂时代的明白人/","text":"内容剖析 每个人的大脑都有一套算法，是由从出生到现在的环境投射自主意识共同进化而成的。这套算法决定了一个人对基础材料的加工方式，我们将其简单的归为两个字：认知。 自己 我们的大脑不靠谱，我们惯用切片思维，为了获得更好的情绪体验，我们会创造自我，自欺欺人 我们的记忆是被自我意识改造过后的记忆 我们对自己的评价总是构建在他人反馈的基础之上，所以我们不是不会客观地评价自己，而是不想客观地评价自己 懒惰、放纵、自制力不足，根源都在于认知能力受限，看不到某事能带来的巨大收益，因此就不足以产生足够的动力。广义上来讲，认知也是一种智慧 机会并没有那么依赖运气，机会之所以没有青睐你，是因为你并不具备开启它的条件 先做起来，让自己变得更好，“意外好运”才有更大的概率降临 势利是刻进人类基因里的，它并不是一个贬义词，势利贯穿了人类各种行为的始终 获得好人缘的正确方式是拥有更多的正面资源 当我们审视自己，眼睛定格在一瞬间的时候，我们所看到的其实是自己的某一个切片，相当于高维在低维上的投影。 首因效应、晕轮效应等都是证实偏差在某一时刻的表现。我先入为主认为你不错，那么你干什么都看起来不错。我看你着装得体，干净漂亮，那么你做起事来应该也是干净利索。（你默认的标签是什么？） 记忆并不是过去某个时间点的三位定格照片影像，我们会对信息进行压缩、处理和加工，这里面可能还参杂了情感和主观成分，还可能参杂了其他时间点的片段杂质。我们是自己记忆的编辑师，我们的使命是创造一个“虚假但我们更愿意看到的所谓现实”，这个现实包括我们自己。 苏格拉底说过：我唯一所知的是自己一无所知。 非刻意的不懂装懂就是非但我不知道，而且我竟然不知道我不知道。这种状况的根源在于过度自信，习惯于把一知半解的东西拿出来拼凑，并立马真心认为自己动了。 无意识的无能，都不知道自己在装。所以就像李笑来说的，概念必须清晰 我们对自己的评价总是构建在他人的反馈之上，我们致力于为了获得别人更好的评论，从而利用这些反馈反向构建大脑对自己的印象。 这是一个从外而内的认识自己的过程，而反思是从内而外的认识自己的过程，然而我们反思的比例却远远不够 懂了这么多道理，依然过不好这一生。判断某一个道理自己是不是真懂，愿不愿意懂，值不值得懂得标志是：你有没有按照“道理”所述去践行。对一个正确的道理表现出懒惰，放纵，自制力不足都是认知能力不足的体现。 不管是量变引起质变，还是突如其来的好运，都需要一个开启条件，当这个条件降临时我们才能取得飞跃式进展。机会是指一定时间内迈向有利的可能。机会一直都在，问题是你没法开启机会。 与其将时间浪费在原地踌躇和等待，不如先做起来试试。当你没有更好的选择时，请按照当前最好的选择行动起来。 知识 知识必须同时满足以下三个条件：客观的，能被验证的，相对正确的 知识分为四个层次：信息知识，加工知识，体系知识，智慧 将有限的时间优先用于对有效知识的学习 系统阅读和碎片化阅读是可以相互兼容并存的，重要的是能否找到可以在两者中取得各自优势的方法 完善自己的元知识是打造知识体系的关键 深度思考的目的在于修正和完善元知识，而非单单往上造东西 坚持学习有一系列方法可循，收益可见性（目标分解）和即时性（虚拟上帝） 知识变现需要找到最适合自己的点，虽然每个人的工作都是知识变现的过程，但并非每个人都能找到最优解 在边际接近零的领域，数量比单价重要得多 学校的竞争更类似于标准跑道上的赛跑，一声令下，大家同一时间触发，顺着规定的跑道，谁先到重点谁赢。社会的竞争更像定向越野跑，告诉你起点和终点，你自己选择最合适的路去走。 系统阅读与碎片化阅读相结合的方法是先建立自己的知识体系，然后利用碎片化阅读作为建立该知识体系的入口。也就是说碎片化阅读不能盲目。 元认知即认知的认知，它包含所有对认知的认识，以及对认知的控制和调节。通过左右互搏的方式建立认知。 分享是最好的学习方式： 分享是一件利人利己的事 分享是一件能倒逼你完善知识体系的事 每一次分享后，将各类反馈进行归类和收集，就是一个非常好的查漏补缺的方式 金钱 人格决定钱格，金钱影响道德；仓廪实而知礼节，衣食足而知荣辱；穷则独善其身，达则兼济天下 渴望程度决定努力程度，正确方向上的努力程度决定成绩 花钱比省钱更符合道德标准 无节制地省钱是错误的金钱观，无节制地花钱也一样 在开源和节流产生冲突的时候，通常情况下，坚定地站在开源这一边 不同种类的劳动，产生的价值当然是不同的，但考虑到边际，同种劳动产生的价值也是不同的 不可替代性和稀缺性才是最大的价值，而金钱是这种价值的外在表现形式 让别人挣到钱就是让自己挣到钱 风险盈利并不等同于赌博，风险思维是一种策略，赌博思维是纯凭运气 野心就是企图心，是描述你对一种事物的渴望程度。如何让你更有野心，最好的方式是强行将其扔到一个充满野心的陌生环境中，逼着他想周围人看齐。 努力的效果累计，不在于努力的时间段，不在于磨了多久，而在于有效时间有多少，即花在有效的学习区域里的时间。避免无效的努力，被自己感动。刻意练习，进入学习区而不是展示区。 正确的省钱方式可以在不牺牲体验和其他重要代价的前提下进行，我们先得知道什么东西是我们的成本，省了钱以后增加了哪些显性和隐性的成本，以及收益与成本之间的关系。 财富重力加速度 时间 时间可以赚，时间是变量。这不仅是物理学上的概念从人生哲学上看也是如此 时间就是生命，这并不是什么修辞，而是事实。占用他人的时间等于部分消耗他人的生命，请付出代价 注意力才是计算有效时间的关键，滥用注意力的隐性成本非常高昂 操别人的闲心是对自己生命的不尊重 花时间还是花钱，究竟哪个合算不能一概而论 近似估算时间价值是选择的关键 提升时间的使用效率有八大黄金守则 丰富自己的时间经历等于变相延长寿命 赚取时间分为两个维度：单位时间做事的数量；单位时间做事的类型。 什么样的行为可以给自己赚取更多时间呢？在短时间内通过大量练习迅速达到一个“再花时间下去，投入和产出比就不划算了”的状态，然后迅速切换至新的领域。 在某件事情上花了多少时间，其实指的多是表象时间，更为准确的说，应该是我们在某事上花了多少注意力。 “能用钱搞定的事情，别花时间”是成功人士的结果，而不是原因。能请人就请人，能花钱就花钱，只有核心价值的，不可替代的部分由自己完成，视谁是稀缺资源来决定。 你也许并不知道你时间的价值，但是每次衡量钱和时间的比较价值时，都是自己思考优先级的契机 提升时间效率的八大黄金守则： 列出条目任务 寻找高效时段 远离噪音干扰 合理利用碎片时间 减少后台运行 降低切换频率 明确任务目的 挤挤，再挤挤 时间经历可以理解为人生的内容，我们用多少时间，替自己赚了多少内容。花20%的时间学习某一领域80%的内容。 关系 行善或者关心他人，本质上都是为了自己 划清自己的界限，尊重他人的界限；原则 我们对某件事物的情感并非是对事物本身，而是对我们自身附着在事物之上的各种念想和辛勤劳动等 恋爱和婚姻要保鲜，只有不断提升自己在社会属性上的吸引力 亲戚关系将渐渐失去存续的基础 正确的社交方式是极少量的长期社交加大量的短期社 用人情来模糊化社交上的等价交换，是想占便宜，因为人情按“个”计算，而不是价值 情商从广义上来说也是智商的一部分，它的高低并不以是否懂得做某些特定的事为依据，而是以是否达成预定目标为判断准则 找准自己的社交定位，少做无用功，不要把消费账户和工作账户搞混 知恩图报并不正确，既然知了恩就不要图，要马上报，因为恩情会随着时间被打上折扣 不恰当的，不顾他人意愿的行善，就是作恶。 真正的高效交往来源于两个拥有独立型人格的人之间的交往，他们从不以爱或者关心的名义踩到对方的界内，而只是在公共区域进行交流与合作。 前提是你的界限要清晰有原则，而不是随意变动，否则别人无法准确感知。家庭也是如此。 履行或者不履行婚姻责任都是一种基于自身利益的选择行为。婚姻是一次忠于利益的合作，那么合作是关键，而合作的关键在于共赢。恋爱和婚姻要保鲜，只有不断提升自己在社会属性上的吸引力，我们要意识到如果不努力增加吸引力和提供价值，合作就有破裂的风险，从而是双方都进入到一种良性的军备竞赛中。 亲戚的产生时代背景是生产资源匮乏，生活方式原始，从而实现抱团取暖；但是现在物质富裕，连接方便，亲戚关系的价值正在逐渐淡去。亲缘关系以血缘和婚姻等因素为关系来源，是无从选择的。而朋友关系是以兴趣、利益为结交来源，是自愿的。我们常常以为自己还在走亲戚，其实走的只是朋友了。 低价值的一方总喜欢打感情牌，而高价值的一方更喜欢价值交换。 情商是一种对关系的处理能力，可以分为处理与自己和他人的关系的能力。情商是以效果为导向的，它需要有敏感的自我感知和感知他人的能力，通过灵活应对来调控自己和他人的情绪。情商的高低是以有没有达到你预想的目标为依据的，而不是以你有没有做某些特定的事为判定准则。 社交包含两个账户：消费账户和工作账户。很多人往往只是在使用消费账户，在没有回报时抱怨社会的不公，而根因在于想用低价值去交换人家的高价值。 我们可以通过对等交易来扩展自己的资源使用范围，也可以通过自我增值使自己有能力同更具有价值的人交换。我们要找准自己的社交定位，前者成为掮客，那么你就需要掌握关键社交节点，后者则需要更专注于提升自身交换价值。这两种方式并不是非选其一，但是当社交定位清晰后，你会更有针对性，而不是盲目社交。 社交先付出可能会面临单次吃亏的风险，但是还有一个关键的变量：数量。单次社交乘以数量才有统计意义。在信任越来越重要的情况下，你付出，多数人都会选择回报，从而建立长期关系。我们在对等社交中不仅要主动付出，而且要狠狠付出，让更多的人多多受益，先于你受益，那么很多时候就会有意想不到的好运降临。 知恩图报在付出方和接收方之间认知不一致，根本原因就在于这个时间差。交换价值应该讲究及时性。不管对方是否需要你的回报，你的回报都会给对方带来惊喜和愉悦。知恩图报能够让社交回归到一种平等的状态。 人生 人生没有起跑线，也没有假想的跑道。如果要用游戏来表示，应该是一个自由度最高的游戏 人生的最大意义在于体验，总是体验重复和相似的风景，其实在人生的时间利用率上是吃亏的 说不想努力的人，不是不想要努力后的结果，而是惧怕努力要付出的成本 努力有着许多“坑”，并非仅是看上去努力就能达成目标 很多&quot;坑&quot;是达到一定高度前不可避免的，那么踩“坑”其实是越早越好，越早损失越少 格局是每个人的认知层次，下层没法看清上层的世界 学习和职场一样，长期来看，都是专注自身最划算 提升格局首先要勇于打破自己的积累，看得到往上有更高层次（清空存量，绿灯思维） 合理分配投资和消费的比例，合理安排投资和消费的时间点，是提高人生使用效率的两大关键（金钱，时间，注意力，精神的投资与消费） 幸福源于比较，但不论是跟他人比较还是跟自己比较，这都是大脑能调整的事 自由意志下的自由体验，才是人生唯一的意义。 初始运气-初始条件-概率性习得初级智慧-努力-习得高级智慧-持续践行-创造更多好运… 努力有很多坑： 有些人努力只是埋头做事，瞎忙活，没有有目的性的学习 有些人只有努力，没有方向 有些人努力并非处于认知本能，而是做给别人看，属于表现区 有些人的努力反而是一种懒惰 努力的正确姿势：具有目的性(定向聚集效应)，内生性（内求，外求），讲效率（刀口上） 格局就是我们的认知层次，格局不同造成我们本质上就是生活在不同的世界 懂得分辨格局的层次，关闭抵触开关，梳理推到积木。 格局，局部最优与整体最优相互平衡，而不是仅仅陷入局部最优中。 损耗就是基于错误的认知下，将一段生命变得无意义或基本无意义的行为。（如果你能享受这种损耗，那就另当别论，比如躺在河边） 幸福是个主观事物，因此属于可控圈内。 行为指南 改善环境，学习心理学，用更好的认知喂养自己 提升自身能力仍旧是关键点 不管是时间，知识还是金钱，都要局部和全局平衡发展 幸福是一件自己可以控制的事情，感恩，欣赏，赞美，冥想","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"017：行为设计学：让创意更有黏性","date":"2019-02-12T01:15:45.000Z","path":"posts/读书笔记/017-行为设计学-让创意更有黏性/","text":"要让创意产生黏性，有效而又持久，你必须让观众： 集中注意听（意外） 听懂并记住（具体） 同意或相信（可信） 关心、在乎（情感） 能起而行动（故事） 黏性观念六大原则（SUCCESS）：简（简单），奇（意外），具（具体），信（可信），情（情感），事（故事）。 两个步骤： 找到核心 借助六大原则检查表转换核心 知识的诅咒：一旦掌握了某种知识，便很难想象不知道这种知识的人是什么状态。正因为如此，你往往很难跟新手进行清晰有效的沟通。 简单 找到核心 指挥官意图 找出最重要的单一事物：全球票价最低的航空公司 倒金字塔形结构：不要埋没导语 决策瘫痪之苦 强迫排定优先顺序来打败决策瘫痪：关键是经济啦，笨蛋 人名，人名，还是人名 简单是指我们应该找到创意的核心，剔除那些多余的干扰因素，因为我们不可预测和混乱的情况下是很难做出明智的决定的。 简单是指核心，追求的是简练精确和轻重有序，绝不是指化智为愚或者断章取义或者弱智化，也不是说一定要用粗浅词汇。 分享核心 简单=核心+精炼/谚语。如何在精炼沟通中塞满冲击力： 善用现成知识：借助已有图式（柚子），知识锚点 高概念营销：公交车上的《虎胆雄威》 生成性类比：迪斯尼的“演员” 人们总是想一下子就精准无比的告诉对方一切，但实际上我们应该做的是，先告诉对方能够承受的信息，然后再一点点慢慢增加。 意外 吸引他人注意：惊奇 飞行安全广播 打破旧有公式：在核心议题上踏破他人的预测机器 避免是惊讶沦为噱头：使之“可以后测” 小诺替顾客 下周四不上课 维持他人注意：兴趣 制造谜题：土星光环的成分是什么 好奇心的缺口理论：点明知识缺口 填充大缺口：阿利奇如何让非球迷爱上大学橄榄球比赛 维持长久的兴趣：口袋型收音机和月球漫步 好奇心的缺口理论：当我们觉得自己的知识出现缺口时，好奇心就会产生。 缺口理论的诀窍在于：在闭合缺口之前必须先打开缺口，要先点明他们目前缺乏这些知识。 缺口理论棘手的问题在于：人们对自己到底所知多少往往过分自信，人们总是自以为懂得很多。可以要求他人先按照既定的方式思考，预测表明自己的立场。 具体 帮人理解和记忆 寓言故事之具体（酸葡萄） 化抽象为具体：大自然保护协会化地貌景观为生态名人，汉密尔顿山荒地 提供具体语境：亚洲老师的数学教学法 置人于故事中：会计课教学模拟电视连续剧 记忆的魔术贴理论：给观念装上尽可能多的小钩子 褐眼睛蓝眼睛：模拟治疗种族歧视 帮人协调 工程师与制造人员：在共识地带找到共同点 化共同目标位具体实体：我么的飞机要降落在4-22跑道上 化虚拟为真实：费拉里斯家游迪斯尼乐园 具体何以有益：白色东西与冰箱里的白色东西 可信 外在可信 权威 反权威 权威来源之所以权威，并不是由于其社会地位，而是源于其城市可靠。所以有的时候反权威比权威更可信。 内在可信 生动细节：年逾古稀的舞者 统计数据：塑料子弹模拟原子弹；人性尺度原理；史蒂芬-柯维将工作同仁比作足球队；鲨鱼袭击 西纳特拉测试：如果你在那儿能成功，到哪儿都能成功。运送宝莱坞电影；可以吃的布料 可检验性认证：先试再买；斯纳普支持三K党 统计数据本身起不到作用，唯有尺度与语境才能使之有用。 情感 使人关心在乎 特蕾莎修女原则：看见个人才会行动 愿意捐款给罗基娅，而不是整片非洲大陆 运用联想力量 克服语义夸张：相对论失去本义；独特不在独特；化体育精神为尊重比赛 诉诸自身利益 这对你有什么好处 有线电视：视觉想象它对你有什么用 掏出马斯洛的“地下室”：错误假设他人需求都更低层 诉诸身份认同 拒绝爆米花机的消防员 理解身份认同决策模式（我是谁？现在是什么情况？像我这样的人在这种情况下该怎么做？） 别把得州弄乱：得州佬不乱乱扔垃圾 别忘记知识诅咒：双钢琴音乐捍卫者以为别人都和自己一样关心这门音乐 故事 故事即模拟（教人行动方向） 心脏监护仪不具备指导意义：那位护士如何行动 视觉想象“我如何做到”：模拟问题以解决问题 心理模拟何以有效？因为哦俄们开始想象某一事件或一连串时间时，必定会激发身体实际活动时活跃的脑区。重点是关注过程，而非结果。 大脑分不清楚是你想象的苹果还是你实际看到的苹果。那么做梦跟心理模拟有什么关联吗？ 心理模拟可以帮助我们控制情绪、解决问题和培养技能。光靠心理联系就可以产生身体联系2/3的效益。 故事即启发（给人行动力量） 留意三类故事情节：挑战情节（克服困难），联系倾计（与人为善），创造情节（别出心裁） 讲一个跳板故事：让人看清有问题怎样解决 行为指南 当你想营销的时候，通过这六个原则检查自己的想法。 时刻意识到知识诅咒的存在，保持平和的沟通心态。 利用心理模拟来控制情绪。","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"016：谁动了我的奶酪","date":"2019-02-09T10:19:12.000Z","path":"posts/读书笔记/016-谁动了我的奶酪/","text":"原文剖析 两只小老鼠嗅嗅（及早嗅出端倪）和匆匆（立即采取行动），两个小矮人哼哼（担心事态变得更加糟糕而否认抵制变化）和唧唧（发现变化可以带来更好的生活后学会及时的做出调整），在迷宫中寻找奶酪。 奶酪是一个比喻，指的是我们生活中想要得到的任何东西。迷宫代表我们不断寻找幸福的场所。 寻找奶酪 小矮人和小老鼠都找到了奶酪C站，但是他们寻找奶酪的方式是不一样的的。 小老鼠通过反复尝试，通过反馈不断调整行为从而找到奶酪。 小矮人运用自己的思维能力，在实践中不断吸取教训，总结出一套复杂的方法。 小矮人的方法比小老鼠更高效，因此常常沾沾自喜，瞧不起小老鼠。 享受奶酪 找到奶酪C站后，小矮人和小老鼠的的处理模式也是不一样的。 小老鼠依旧保持之前的习惯，保持警惕和危机感。 小矮人则把一切变得理所当然，认为自己有权利拥有这些奶酪，因为它们是它们经过努力很久才找到的。逐渐这种自信演变为成功后的傲慢。 奶酪消失 当奶酪某一天突然消失后，小老鼠和小矮人做出了不同的响应。 小老鼠因为时刻保持危机感，早已发现奶酪在一天天变少，所以不惊讶，没有进行过多的分析，穿上跑鞋，去寻找新的奶酪，并最终找到了新的奶酪站。 小矮人则不能接受这个现实，抱怨上天不公平。奶酪对他们意味着权利、荣誉和幸福，他们不相信现实，认为这些事情不应该发生在自己身上，欺骗者自己，做出各种努力以证明一切都会回到从前。这个期间满满的都是焦虑和怨恨。 唧唧寻找新奶酪 哼哼选择不接受现实，不接受改变。唧唧经过一段时间意识到改变已经发生，与其坐以待毙坐着无用的事情，还不如去寻找新的奶酪。 唧唧曾经认为迷宫里不会再有奶酪，或者永远找不到新的奶酪，正是这种担心和恐惧阻止他走进迷宫。 如果不再恐惧，你会做什么？在寻找过程中，唧唧感觉到吃力、迷茫和恐惧，同时开始思考C站的奶酪为什么会消失，思考小老鼠的行为模式，并且不断的给自己以鼓励，想象获得新奶酪后的美好，以保证自己不断前进。 当你克服了恐惧，就会感到轻松和自在。唧唧意识到，自己一直被恐惧所俘获，然而向着新方向触发则释放了他内心的恐惧。 在迷宫中搜寻，总比停留在没有奶酪的地方更有保障。 只要你相信自己能够找到并且享用新的奶酪，你就会改变自己的行为。 你可能认为变化会伤害你，所以抵制它，坚决不接受变化；你也可以可认为找到新的奶酪对你有益，从而热烈拥抱变化。 及早注意细微小变化，这有助于你适应即将到来的大变化。 最终唧唧找到了新的奶酪站，而哼哼仍留在原地。 行动指南 小老鼠代表我们简单的一面，小矮人代表我们复杂的一面。当变化发生时，或许简单行事比瞻前顾后带来更多的快乐和收益，以行促知可能更有效。这让我想起NLP理论12条前提假设中的“有效比有道理更有用” 如果不再恐惧，你会做什么？当你克服了恐惧，就会感到轻松和自在。 变化是唯一不变的真理。我们要时刻做好失去奶酪的准备。 及早注意细微小变化，比如现在的国际形势、AI、人工智能、新零售等，然后随着奶酪变化而变化，尽快放弃弃旧的奶酪，这样你就可以越早的享受新的奶酪，享受早期红利。 我自己做了这么久的哼哼，不关注变化，不肯改变，怨天尤人，终于现在也逐步开始向唧唧转型了。 寻找新的奶酪站并不意味着就是换一种工作或者换一种婚姻，我们可以选择换一种心态、换一种行为模式。重点在于你意识到当前的奶酪已经没有了么？你做好准备去寻找新的奶酪了吗？","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"015：行为设计学：掌控关键决策","date":"2019-02-08T04:33:12.000Z","path":"posts/读书笔记/015-行为设计学-掌控关键决策/","text":"内容概述 WRAP决策流程的核心就是促使你将自动聚光灯转为手动聚光灯，通过批判性的思维方式“拓宽选择空间”，把假设放到现实中检验；在做出决策前，留出一段距离来考虑；做好出错的准备，进而做出正确的决策。 文章剖析 避免有效决策的四大思维陷阱： 思维狭隘：我们倾向于将选择限制在极小的范围中，以二元化的简易思维看待选择 证实倾向：我们往往习惯于对某种状况快速做出判断，然后找到支持我们判断的信息 短期情绪：面临艰难抉择时，我们的情绪也会夹杂其中 过度自信：在猜测未来的时候，我们只关注手边的信息，然后从中得出结论，我们对自己的预测太过自信 一个正常的决策过程通常包含四个步骤即WRAP决策流程： 面临选择（思维狭隘限制了你的选择范围：拓宽选择空间） 分析选项（证实倾向是你搜集利于自己的信息：把假设放到现实中检验） 做出选择（短期情绪常使你做出错误判断：在做出决策前，留出一段距离来考虑） 接受结果（你对未来的走势过度自信：做好出错的准备） WRAP决策流程的核心就是促使你将自动聚光灯转为手动聚光灯。你将不在依靠那些引起你注意的东西做出决定—本能的感情、利己的信息和过度的自信等—你开始谨慎的关注更有决策性的因素：我们忽视的选项、抵触的信息以及疏忽了的准备工作。 拓宽选择空间 1. 避免思维狭隘 要或不要，能或不能，你的选择只有两种吗？ 我们要学会不信任“是与否”式决定。每当你看到或是听到那几个字时，脑海里就要响起警铃，提醒你思考自己是不是陷入了思维狭隘的误区。 犹豫不决时，请分析机会成本。我们在开始做每个决定之前都问一些简单的问题：我们在做这个选择的时候放弃了什么？利用同样的时间和金钱，我们还可以做其他什么事情？ 如果你没有意识到自己在忽视其他选项，你就不会考虑它们，通常，你无法察觉自己正陷入思维狭隘之中。 消失选项测试：丢掉现有选项，你还能想出新的可能性吗？ 2. 多目标追踪 从不同角度，同时考虑一个以上的选项。不断的寻找各种选择，直到你至少有两个心仪的选择，同时要小心虚假选项，避免选择综合症。 预防心态（避免消极结果，谨慎）和进取心态（追求积极结果，热情）。这两种心态都是有益的，在生活中考虑不同的决定时，我们需要在这两者之间转换，混合心态，争取两项都选，而不是非此即彼的选择。 3. 借助外脑 咨询解决过同样问题的人，当你可以从世界上丰富的选择中进行挑选时，为什么你非要自己提出想法？ 从外部寻找：竞争分析、标杆分析、基准数据和最优方法 从内部寻找：以往的成功经验，找到亮点 写下问题列表：同类决策以往会考虑的所有问题 类比法：着眼于远处，通过爬梯子的方式逐层级类比 把假设放到现实中检验 1. 克服证实倾向 魔鬼代言人，务必听取反面意义。我们在做高风险决定时，要有一定的质疑精神，避开那一瞬间受到挑战的不适感。 学会提问，探究性问题还是开放性问题。探究性问题能显示出发问者是自信而有经验的，当你试图从销售员，招聘人员和别有用心的员工等想糊弄你的人那里获得信息时，探究性的提问方式就能发挥作用；如果发问者已经是一个专家，在权利地位明确的情况下，比如上下级、医患关系等，如果采用探究式问题，会显得咄咄逼人，使得对方拒绝配合或者过于迎合，此时应该使用开放性问题。 使用假设法进行批判性思维，假设积极的意图，是我们用更加积极的角度去看待他人的行为和言语。 三种对抗证实倾向的方法： 我们可以使他人更容易的提出反对意见 我们可以提出更有可能使相反信息显现的问题 我们可以通过考虑相反情况的方法来对自己进行核查 因为我们会自然地寻找自我证实的信息，所以我们需要训练自己去考虑相反的情况。 2. 缩小放大 我们对“一般评价”的信任常常会超过我们的直觉，但还不够相信（比如度假村的评论）。 内部一件即我们对自身所在的特定环境的评价。外部意见即在类似于我们这样的情况下，事情通常是如何发展的。外部意见更为精确，但绝大多数人会向内部意见倾斜。 如果你无法为自己的选择找到基本比率，那就去找专家。专家们擅长评估基本比率，但是在预测方面却不行。 特写可以弥补外部意见所缺少的内容，为了得到更好的信息，我们应该将外部意见和特写相结合。 3. 尝试 尝试提供了一种方法—一种探索现实而非预测现实的方法。 尝试等于做小实验以测试我们的理论，我们不是直接投进去，而是先试深浅。尝试之所以有用，是因为我们在预测未来方面做的很糟。 尝试在需要做出承诺的情形中，不能使我们达到预期效果，反倒容易成为放弃的借口。 在做出决策前，留出思考的距离 1. 战胜短期情绪 瞬时的情绪诱使我们做出那些从长远来看是坏决定的选择。在冲动决定之前，先暂停一下，留些距离进行判断，使用10-10-10法则：10分钟，10个月，10年后，我会如何看待此刻的选择？ 小心认知偏见，曝光效应（人们会对自己更熟悉的东西产生偏好）和损失厌恶（相较于收益带来的快乐，损失带来的痛苦更大）。这两者相结合的结果就是维持现状偏见。如何避免？留出距离，问自己一个问题：我们的继任者会怎么做？ 解释水平理论：离问题越远的人越能参透本质，从观察者的角度看自身所处的情况，做出好决策。 我们给他人提建议有两大优点：它自然的会把最重要的因素放在决策中的优先为之进行考虑，而且它还弱化了短期情绪。这就是为什么在帮助我们打破决策僵局时，最有效的提问可能是：如果面临这种情况的是我最好的朋友，那我会告诉他如何去做？ 2. 尊重你的核心重点 精简次要事项，专注于重要事项，将核心重点视为行动纲领，而非仅仅支持那些一般性价值标准是很重要的。目标不是消除情感的影响，而是尊重那些重要的情感。 一个令人苦恼的决定常常是你的核心重点遭遇冲突的时候。你长期的情感价值、目标和志向是什么？你想要成为什么样的人？你想要建立什么样的组织？ 为空出时间来时间我们的核心重点，我们必须对不太重要的事情发起攻势。比如停止做的事情清单，每小时提醒自己是否在做自己当下最需要做的事情。 做好出错的准备 1. 预防过度自信 未来不是一个点，对结果进行最佳和最差的预期，采用区间来预测未来。缺乏区间思维时，我们的聚光灯将会定位在对自己未来发展的最佳猜测上。 事前分析：假设决策失败，造成失败的原因可能是什么 事前预演：针对未来可能的种种结局，要提前做好应对措施 安全系数：假定你正处于一种过度自信的状态，人后给自己一个适度的误差范围 真实工作预览：光鲜亮丽不如丑话说在前头 在为最差情况做准备时，采用事前分析；在为了最好情况做准备时，采用预演；为了应对无法预见的结果，采用安全系数。 通过区间评估—同时对逆境和成功做出预期和准备—我们可以预先做好有利于自己决定的布局。 2. 设置一个止损点 在生活中，我们会自动进入自动驾驶状态，将以前的决定搁置一旁，不对其进行检查。止损点，作为一种信号，会在最恰当的时刻令我们清醒过来，强迫我们重新考虑自己的决定或者做一个新的决定。在变化缓慢进行的时候，止损点尤其有用。 受困于自动驾驶状态的人可以考虑最后期限和隔断，更多的是可以使用预警信号，而预警信号是通过模式识别的，而不是由明确的日期、度量和预算所确定。 止损点可以让冒险行为为提供一个安全空间，他们规定了冒险行为的上限，使你的精神获得平静，直至碰到报警。 3. 决策流程的公正性 群体做出的决定有一个额外的问题：他们必须被人们视为公正的决定。 讨价还价，直至各方都可以接受最后的选择，有助于形成被人们视为公众的决定，讨价还价开始时会需要更多的时间，但是它会加速执行的速度。 流程能够提供信心，对于一个流程的信任使得我们可以冒更大的险，做更大的选择。 行为指南 决策过程流程化，然后针对每一个节点制定对应的措施，给自己的决策过程制定一个流程。","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"014：行为设计学：零成本改变","date":"2019-02-07T08:36:12.000Z","path":"posts/读书笔记/014-行为设计学-零成本改变/","text":"内容概述 改变三部曲：指挥骑象人（看似心生抵触，实则方向不明），激励大象（看似懒于改变，实则精疲力尽）和营造路径（看似是人的问题，实则为情境问题）。 文章剖析 成功的改变包含三个要素：理智，情感和情境。 三个不可不知的事实： 看似是人的问题，实则为情境的问题：要想劝人少吃点爆米花，不用考虑对方是否理解，也不用关心他们态度会怎么样，只要拿小一点的桶装爆米花就可以了。 一个脑，两条心：我们的情感面像一头大象，理智面像是骑象人。大象渴望及时行乐，骑象人擅长超越当下，深谋远虑，未雨绸缪。大象的长处是掌握着爱，怜悯，同情和忠诚等诸多情感，提供能量和动力朝目标前进，是改变得以实现的重要因素。骑象人的缺陷是往往过度分析，过度思考，从而造成原地踏步，停滞不前。大象抗拒不从，骑象人原地空想，两者都会让改变遥遥无期。 看似懒于改变，实则精疲力尽：自控力是可耗尽的有限资源，想要改变，往往意味着修改已经自然而然形成习惯的动作，因此需要骑象人监督，而这会消耗自我控制力。假如骑象人和大象对于前进方向存在分歧，骑象人可以在短时间内掌握方向-用尽全力拽住缰绳，迫使大象服从，但是骑象人不可能长时间跟一头庞然大物拔河，他总会有精疲力尽的时候。 改变三部曲： 指挥骑象人：看似心生抵触，实则方向不明，因此必须提供清晰明确的方向（低脂牛奶案例） 激励大象：看似懒于改变，实则精疲力尽（饼干与萝卜实验） 营造路径：看似是人的问题，实则为情境问题 指挥骑象人 找出亮点：找出成功案例，复制推广亮点（越南妈妈故事、聚焦解决短期治疗方案） 制定关键举措：无须高瞻远瞩，着眼于关键步骤（低脂牛奶，亚美运输4条原则） 指明目标：预先指明方向和原因大有益处（成为三年级学生、英国石油公司杜绝枯井） 骑象人有很多长处，会思考，会分析，会规划未来蓝图，但是它有一个糟糕的弱点，就是倾向于原地打转。骑象人喜欢再三考虑，反复分析，更糟的是骑象人分析对象往往都是麻烦，而不是亮点。骑象人会觉得到处都是问题，然后患上分析瘫痪症，除非指明方向清晰的知识否则骑象人会无穷无尽的原地打转。（想想为什么可以以行促知） 1. 找到亮点 从亮点入手，可以避免“非我发明”所带来的疑虑。 找出特例，复制经验。（成功是成功之母） 骑象人再分析问题时，总是寻求规模与其一直的解决方案，但是很多时候问题和解决办法的规模是不对等的，小办法，可以实现大改变。 寻找亮点，也就是在问：“怎样做才有用？怎样才能多做一点？”。但是现实生活中我们更多的将精力放在问题本身，问题聚焦：“哪里出了问题？怎么才能解决问题？”。因为我们对坏比对好要敏感很多。 某一天，女儿带回成绩单，1科优秀，3科良好，1科不及格，身为服务，你的关注点在哪儿，你会怎么教育孩子？ 我们的骑象人不应该聚焦在问题上，而应该聚焦对策。我们必须把分析负面问题的考古式办法，转变为寻求亮点，传播亮点的解决思路。 2. 制定关键举措 选项越多，越疲惫。看似抗拒改变或者反对改变，实则行动方向不明。 改变意味着自动驾驶变为手动驾驶，决策瘫痪的成因不光是众多选项让人眼花缭乱，还有含糊不清，暧昧不明的状态。（想想定制目标的SMART法则） 方向不明是改变的大敌，要想成功改变，就必须把模糊不清的目标转化为具体实在的行动。你应该努力朝低脂牛奶运动靠齐，避免重蹈事物金字塔的覆辙。 改变始于个人层面的决策和行为，但是个人层面时长内心交战，冲突不断，因而也最难实现。惰性加决策瘫痪，让人不免想要沿用原先得办法，继续走老路。 你不可能制定每一步棋着，也无需定制所有的棋着，关键在于定制关键举措。 3. 指明目标 当你在描述一个引人注意的终点时，也是在帮助骑象人克服它的一个重大缺陷：在分析中迷失的倾向。（想想为什么大目标比小目标更容易实现？）指明方向后，骑象人会开始把力气滑倒如何到达终点上，而不是聚焦在小问题上。 聪明目标（SMART目标）具有明确性，但是缺少情感共鸣，难以激励大象。因此比较适用于稳定的环境，而不适合变革时期，因为聪明目标已经预先假定这个终点具有追求价值。聪明目标假定了情感因素，当不能激发情感共鸣。 想要让目标打动大象，走进心坎，决不能指望聪明目标。“终点明信片”具有双重效用：告知骑象人去往何处，晓示大象此行的价值。 在自我控制的关头，人人都摇身一变，成了善于钻空子的律师，我们总是将失败自我合理化，因此我们必须将目标中含糊不清的因素剔除干净，制定非黑即白的目标，不留回旋余地。 非黑即白目标一点都不激励人心，只能100%的限制人。而且非黑即白的目标指制定关键措施，没有描述终点图景。终点明信片提供情感力量，而非黑即白目标具有消灭自我合理化倾向的优势。 长期目标要与短期关键步骤相结合，改变开始后，不要执迷于中间的旅途，真正重要的是一个有利的开始，一个有利的结尾，然后赶快上路。 激励大象 找到感觉：仅停留在知道层面未必能改变，必须形成感觉（手套展、化疗电子游戏、沃特斯向塔吉特员工展示服装样品） 缩小改变幅度：分解改变步骤，消除大象的恐惧（5分钟房间拯救行动，联邦政府采购改革） 影响他人：建立新认同感，灌输成长心态（员工创新者、初中生数学成绩猛增） 1. 找到感觉 传统模式下顺序是：分析-&gt;思考-&gt;该百年；对于巨大的改变，正确的顺序是：看见-&gt;感觉-&gt;改变。 试图用分析论证的方法来消除惰性和冷漠，无异于扔给溺水者一只灭火器。 “再生任务”游戏。改变不是源于理解，而是源于感觉，那种感觉就是：我能做到，我的人生由我做主。（反馈） 人们推动改变失败，常常会归咎于他人对事物缺乏了解。当我们碰到需要该百年他人行为的情况时，第一反应总是改变别人。事实上，改变失败，往往不是理解出了问题。 积极错觉是一个棘手的问题，大家都认为自己最了解自己，高估自己。可以通过别人的视角来打破。 2. 缩小改变幅度 鼓励人们采取行动的办法之一，就是让对方感觉自己距离目标越来越近了。要让一头不情愿的大象迈开脚步，你必须缩小改变幅度。 缩小改变幅度的方法之一是限制资源投入，比如5分钟家务。要想激发改变，你必须主动设定里程碑，将官僚惰性转变为前进的动力。 从0到10量化奇迹。打造早期成功，其实正是打造希望，希望是激励大象的动力。将奇迹予以量化的另外一个好处是消除整个过程的神秘感。借助奇迹标尺，你总会清楚自己下一步该往哪儿走，也确切了解下一场小胜利将是什么。你会不断前进，更棒的是，你对自己保持前进的能力越来越有信心了。 小目标，小胜利，触发积极行为。小胜利应当具备两个特点：其一，他们具有意义；其二，他们触手可及。 3. 影响他人 影响他人，让人们得到成长。认同是影响人们决策方式的关键因素。 人们愿意培养新的认同感，只是认同感的培养要从小处开始，比如创新者的身份。 新认同感的生根发芽可以很快完成，但是开枝散叶却极为艰难。因为，当你试图改变自己或者引领改革时，一定不饿避免的会出现失败，而失败势必会让人本能的想要逃跑。 如何处理呢？你必须建立起对失败的预期，具有成长心态。 真正的改变，能够持续下去的改变，往往是前进三步，再后退两步。要创造并延续改变，采取行动就必须像教练员，而不是守门员，必须接纳成长心态。 成长心态看似让人关注失败，甚至鼓励人寻求失败，实际上却是对乐观情绪的坚守。成长心态是对抗失败主义的缓冲，并且把失败包装成改变过程中不可避免的自然产物。 营造路径 调整环境：情境影响行为，设法改变环境（机架空间取消呼叫转接系统、亚马逊一键下单功能、简化在线工时表） 培养习惯：形成习惯则不费力，设法鼓励培养习惯（设定行动触发扳机、节食者每天多喝两碗汤、使用检查清单） 召集同伴：行为有传染力，设法号召众人（医院“自由空间”、在小费盒里预先投钱） 基本归因错误，人们总是把行为归咎于个人性格，而不是其自身所处的环境。 1. 调整环境 看似是人的问题，实则为情境问题。不管你的角色是什么，都可以或多或少掌控所处的情境。一键式调整，改变路径，就能改变行为。 战胜自我能够带个人满足感。所谓的战胜自我是指骑象人战胜大象。 使用哈顿矩阵可以帮助人们系统性的梳理问题，重点思考意外的3个阶段：事件前，事件中，事件后。 2. 培养习惯 环境可以强化或者淡化习惯，但是养成习惯并不完成取决于环境因素，也与人的心理休戚相关。 预设决定，触发下一步行动。（相当于认为设计《习惯的力量》里描述的触发点）行为触发扳机并不完美，但绝对是促进改变立即发生的简单手段。 培养习惯和调整环境可以相辅相成，让行为更加持之以恒。 清单，检查表。 3. 召集同伴 从众效应，行为会传染。当你指挥大象走在不熟悉的路径上时，大象很可能会追随其他的同伴的脚步。 行为指南 以行促知，以知促行，不是非此即彼，而要骑象人和大象双管双下，这样才能知行合一，最后营造良好的路径，实现零成本改变。","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"013：如何戒掉坏习惯（古川武士）","date":"2019-02-06T14:36:12.000Z","path":"posts/读书笔记/013-如何戒掉坏习惯/","text":"内容概述 戒掉坏习惯包含禁欲期，动力缺乏期，平稳期和倦怠期4个阶段。在禁欲期要克服千难万险，在动力缺乏期要制定成功范例，在稳定期要提高实践率，在倦怠期要为方针设置变化。 文章剖析 所谓的坏习惯，是指禁不住眼前的诱惑或是诱惑的驱使，从长远来看会带来负面影响的习惯。劣币驱逐良币，坏习惯也会驱逐好习惯。 如果说《坚持，一种可以养成的习惯》是养成好习惯的方法，那么《如何戒掉话习惯》就是甩掉坏习惯的方法。 为什么总是戒不掉坏习惯？ 习惯引力的法则 意识与无意识的平衡 欲望与理性的斗争 无法甩掉习惯是因为这一习惯具有肯定性的意义，某些欲望被坏习惯满足，比如说放松，忘记烦恼，缓解压力。因此我们需要确定我们为什么要戒掉这个坏习惯，那么这个坏习惯对应的肯定性意义怎么办，是放弃还是通过别的方式弥补。即《习惯的力量》里的奖励部分。 养成习惯，相比于结果，我们要将目光聚焦于行动本身，因为我们要坚信只要重复的做到，我们的习惯就会养成。 戒掉坏习惯分为4个阶段：禁欲期，动力缺乏期，平稳期，倦怠期。 分阶段有什么好处呢？ 有全局观，可以从高处俯视从戒掉习惯到养成习惯的过程 我们知道我们处于何种阶段，并且针对应得使用对策 里程碑的作用，每个阶段达成后可以获得成就感 意志力是可以培养的，并且是有限的，并且在能量匮乏的时候意志力会更差，所以我们要尽量在早晨意志力高的时候处理，通过不断达成目标来锻炼意志力，同时多锻炼。更多可以参考《自控力》。 寻找核心理由，可以从三个方面入手：危机感，快感，期待感。最好将核心理由写在纸上，让自己随时能够看到。 禁欲期 禁欲期是一段很痛苦的过程，所以每天都要调整心态，以饱满的精神投入其中，不要因为昨天的失败而纠结苦恼。 这个过程千万不要同时养成多个习惯，另外要保持心态的积极乐观，如果一直有负面情绪，后续也会很麻烦的 营造杜绝诱惑的环境：设想所有可能的诱惑；减少或消除这些诱惑 将行为可视化 给破罐子破摔设置上限：设想会陷入破罐子破摔的思考模式的场景；思考受挫的对策； 动力缺乏期 制定成功范例，设定必胜模式 制定例外规则 通过持续开关提升动力 平稳期 提高实践率，这一时期不允许自己有例外的情况发生，要努力追求最好的成果。 回顾过去的行动，从失败案例中吸取教训，并再次强化预防对策和成功范例。 彻底斩断坏习惯，将行动率提升至100% 倦怠期 方针：设置变化方式原地踏步 注入刺激：更新内容；更新替代方案 计划下一个习惯 行为指南 针对每一种需要养成的习惯制定针对性的设计每个阶段的策略，列出详细的执行列表，打印出来。","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"012：坚持，一种可以养成的习惯（古川武士）","date":"2019-02-05T07:25:43.000Z","path":"posts/读书笔记/012-坚持，一种可以养成的习惯/","text":"内容概述 不同类型的习惯所需的时长不一样，习惯养成包含反抗期，不稳定期和倦怠期三个阶段，针对不同习惯的不同阶段采取不同的策略可以使习惯更容易达成。 文章剖析 成功不是一种行为，而是一种习惯。 所谓习惯就是“不以来意志或者毅力，把自己想要拆徐的事情引导到如每天刷牙般轻松的状态”。 人类有95%的行为是在无意识中进行的，而大部分的无意识行动都是通过习惯产生的。一旦某种行动化为习惯，就可以通过较少的劳动获得较大的成果。 习惯就是将重复的行动转化为无意识的行动，而不需要意识层面的思考，这是大脑适应环境的一种能力，从进化角度讲的话就是为了节省能量。 人类具有对抗新变化，维持现状的倾向，从进化角度讲，这是最有利的，可以避免危险。因而会产生习惯引力，不管是培养好习惯还是改变坏习惯，都是改变，大脑都会阻挠以保持现状。所以很容易出现三分钟热度。 习惯养成与火箭升空的过程类似，前期需要摆脱引力，脱离引力后就只需要少量的能量就能够前进。 首先，不要指望21天就能搞定所有习惯。不同类型的习惯所需的时间是不一样的。同时如果你在养成习惯的过程中，一直有负面的情绪，那么所需要的时间会更长。 行为习惯：每天规律的行为，比如读书、写日记等，大约1个月 身体习惯：与身体节奏相关的习惯，比如减肥、运动、早起、戒烟等，大概需要3个月 思考习惯：与思考能力相关的习惯，比如正面思考、逻辑能力、乐观心态等，大概需要6个月 养成习惯的时候不要有负面情绪，这个要调整。另外确定好你想坚持哪些习惯，优先级是什么，你想通过多久达到。同时注意短期，中期和长期习惯的搭配。 习惯的养成分为：反抗期，不稳定期和倦怠期。 预防失败的三个原则是： 锁定一个习惯，不要同时培养多个习惯，不要急于求成 坚持有效的行动，行动规则越简单越好 不要太在意结果，相信你的行为能够达到结果，然后坚持就好，相信积累的作用 反抗期 反抗期的重心放在“撑下去”上就好，就是说每天持续行动很重要。克服该阶段可以采用如下两种方式： 以婴儿学步开始 补充内容可以参考《微习惯》这本书 绝不勉强，从小处开始行动。这样的好处是：行动压力小；引发动力。但是无论你把行动的门槛降到多低，请一定要注意每天都积累一小步。 细分行为有两个维度：细分时间，1分钟，5分钟，10分钟等；细分步骤，月度一页书，写一行日记等。 设定最低标准并不意味着不能做高于标准的行动。 在反抗期无论多小的目标，对于培养习惯都有相当大的意义。所以一定要每天持续执行 简单记录 记录能够用于客观的分析并了解问题，减少不确定性，提高动力。成就感。 记录的工具和规则一定要简单，同时一定要每天记录，每天记录能够将这件事内化到脑子中，否则你可能都会忘了这事。 不稳定期 在通过反抗期之后我们要将难度提升到自己本来要求的成程度。 不稳定期的对策有：模式化；设定例外规则；设定持续开关。 行为模式化 行为模式化指：在固定的时间，地点和方式执行你的习惯。可以减少选择和思考，便于大脑更好的内化到潜意识中。 如果你不在某一个时间做某一件事情就觉得浑身不对劲的话，那你就成功的培养了该习惯。 设定例外规则 设定例外规则不是为了宠溺自己，而是为了让计划保持弹性。这样可以减少在特殊情况无法完成所造成的压力。 设定特例规则的步骤：首先，考虑有哪些例外情况；其次，考虑应对方式，比如回退到婴儿学步的方式（优先），第二天加倍完成，设定特殊的日子光明正大的中断。 设定持续开关 持续开关就是能产生积极行动的方法，根据产生快感和回避痛苦两种情感分为糖果型开关和处罚型开关。 糖果型开关可以参考《行为设计学：打造巅峰体验》 倦怠期 倦怠期需要引入变化，可以通过改变环境或者利用不同的持续开关等方法，在一成不变的状态下加上变化。同时可以在该阶段计划培养下一个习惯。 添加变化时需要注意一下几点： 以一举两得的角度思考问题，串并行，附加效果 准备多种选择 不要轻易改变模式或者规则 行为指南 对每个习惯进行分类，然后通过甘特图将各中习惯和阶段安排好，然后以微习惯的模式启动并坚持。 提前预想习惯养成的困难点，以及如何应对","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"011：行为设计学：打造峰值体验","date":"2019-02-04T23:04:43.000Z","path":"posts/读书笔记/011-行为设计学-打造峰值体验/","text":"内容概述 行为设计基于人类思维习惯的研究，间接的设计干扰，影响行为和决策。人们对于一段经历的评价取决于两个时刻：峰值（最好和最坏的时刻 ）和结尾。打造峰值时刻大致包含4中情感：欣喜感，认知感，荣耀感和连接感。 文章剖析 我们的生活是由一个个时刻丈量的，而决定性时刻则会在我们的回忆中长久持续存在。决定性时刻是指一段既令人难忘又意义重大的短暂体验。 峰值定律：人们会根据两个关键的时刻来评判一段体验的好坏：一是，最好或是最坏的时刻，即峰值时刻；二是，结尾。 瞬间思维，辨识哪些时机是值得投入时间和精力的。三种值得凸显的事件是：转变事件，里程碑事件和低谷事件。 欣喜时刻 所谓的欣喜时刻就是超越平日之上的体验。欣喜时刻就是峰值时刻。 进攻而非防守，为消费者提供满意的体验，先填平低谷，再搭建高峰。因为负面评论比比正面评论更有影响力，因此管理层经常过于专注于填补小漏洞，而不是专注于打造峰值体验。 可以通过如下三种方式在一个时刻中加入欣喜因素： 1. 提升感官感受 提升感官感受指的是将现实世界的“音量调高”，让事物从视觉，味觉，听觉或是感觉上超过寻常。 2. 加入刺激性 提升刺激性是指添加一些有助于提升效率的压力，比如比赛，截止日期，承诺等 3. 突破脚本 颠覆人们对于一段体验的预期，与其说是一种出乎意料，更应该是一种战略上的惊喜。 新鲜感能够改变我们对时间的感知，惊喜能够使时间延长。记忆隆起，15-30岁，时间都去哪儿了，时间为什么过得那么快，因为你的生活越来越老套。大脑的记笔记功能。 认知时刻 如果一个人生活中的决定性时刻并不满是欣喜，反而充满了痛苦，该怎么办？认知时刻能让我们产生认识和改变。有两种方式打造认知时刻： 选择让他人被现实绊倒 如果我们需要对自己产生更深刻的理解时，我们可以选择突破认知 1. 被现实绊倒 案例：孟加拉乡村的卫生改革，帕尔默在设计课程时用到的“逆向整合设计” 真相让人觉醒。当你得到一个未曾预料，却从打心眼里知道是正确的顿悟的时候，你就与现实产生了碰撞。这个决定性时刻，能够在须臾之间改变你看待世界的方式。 如何设计被现实绊倒： 明确认知：领导人知道自己想要分享的真相是什么 用时简短：这些真相很快就能让人警醒 由受众自己发现：真相是作为听众的人们自己发现的 如果你有一个好的解决方式，想说服比人？我们可以采用这种方法，关注于问题，而不是解决方案。若是不能理解问题，我们就不会重视解决方案，我们可以通过放大某个问题或者蔚海的真实情况，从而点燃认知。 2. 认知突破 从冒险和失败中认识自己，突破认知，所以首先需要正确认识失败，同时要用于走出舒适区。 认识自我，想明白自己要什么，理解自己的能力，是一个持续一生的过程，而这也是一个缓慢的过程，若想加速理解自我，一个重要的方式就是突破认知。 鼓励我们突破自我的往往是别人，而不是我们自己，所以我们要多结交高人，拓宽视野，站在更高的层次之上。 助推突破认知的方法：高标准+信心和方向+支持 让失败成为轻松的谈资。父亲每次在餐桌上都会问：“你们这周都经历了哪些失败”。我们每周总结的时候是不是也可以这么问问自己呢 走出去吧。尝试做些不同的事情。打开新的篇章。去冒险吧。这些建议都在暗示，成功已经是你囊中之物了。这个承诺并不完全正确。冒险是存在风险的。突破自我不一定能够给你带来成功，但是一定可以带来学习和成长。 不突破自我，我们永远都别想知道我们自己的极限在哪儿。 荣耀时刻 欣喜时刻让我们超越平淡，认知时刻启发我们认识世界和自我，而荣耀时刻则记录我们最光彩的时刻：展现勇气，获得认可，战胜挑战。 如何打造荣耀时刻？努力工作，投入精力，结果是你会变得更有才华，页更有成就，而这些反过来又会点燃你的荣耀感。正螺旋，兴趣是可以培养的。 1. 认可他人 真诚的认可和赞美，重要的并不是具体的方式，而在于是否真诚。另外频率也很重要，尽量一周一次，而不是一个月一次。 感谢信，面对面的感恩，这个在哈佛幸福课中也有提及。 2. 设置里程碑 前瞻性策略：采用升级法，为目标设置关卡和层级 回顾性策略：回顾以往，将那些你已经经历过，但可能没有注意到的里程碑时间挖掘出来 设置里程碑，里程碑式的目标本身就能给人带来激励。 触到里程碑的时候，荣耀感会油然而生，同时，这也应该激发人们为之庆贺，从而引发欣喜时刻。里程碑时间应该的陪峰值体验 3. 锻炼勇气 暴露疗法的目的是控制恐惧。 事先存储默认反应，以便于在事到临头时能够不假思索的快速行动。勇气不仅仅是压制恐惧感，还包括掌握在危急情形之下该如何反应的知识。 练习勇气，缓解焦虑，勇气是有感染力的，勇于站出来，就会有人跟随你。 连接时刻 连接时刻能够将我们与他人联系在一起。我们感到温暖，团结，心心相印，且得到了认可。 想要团队中激发彼此产生联系，我们必须创造共同的意义： 打造让大家步履一致的时刻 点明共有的难处 为之赋予意义 共同经历过患难的小组成员会产生更为紧密的联系。在能够自愿选择面对困难，拥有一定的主动权，且困难有意义的情况下，人们会报以欢迎的态度。 使命感能够基础超越日常工作的行动。认知时刻和连接时刻都能够培养使命感。触及贡献一层的时候，你就触及了问题的核心。了解自己最终所做的贡献是什么，你就能够脱开代办清单的束缚。 人际关系不是通过时间的长短来衡量的，没有人确保人际关系会随着时间的推进而愈加深厚。那么，如何哪些行为可以促进感情更加深厚呢？ 给予回应：回应包括理解，肯定和关心三个因素。 你来我往：一方先分享一件事情，等待看另外一方是否也会分享一件事情作为回应。如果对方给出了回应，这便是一种理解，肯定和关心的表示。 行为指南 每周总结问问自己这一周都经历了哪些失败，经历了哪些突破脚本的事情给自己以惊喜？ 工作中运用：高标准+信心和方向+支持 说服别人采用被现实绊倒的方式 设置里程碑 通过打破脚本来脱离陈规旧习 突破自我，实现自己的极限 有意的在自己的私生活中打造峰值体验","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"010：谁说你不能就坚持（程龙）","date":"2019-02-04T02:09:23.000Z","path":"posts/读书笔记/010-谁说你不能坚持/","text":"内容概述 GALA能量环：确定自己的目标，然后行动，赋予意义，最后在实践中不断调整修正。 G（Goal 目标）：给坚持一个具体的方向和明确的理由，这是初心 A（Action 行动）：进行大量而持续的行为，或因目标而行动，或因行动而发现目标 L（Love 热爱）：在行动中产生热爱，持续质变，收获惊喜 A（Adjustment 调整）：阶段性调整，战胜倦怠，修正方向，升级目标 目标：Goal 确定自己到底想要什么 将大目标分解为阶段性目标 设定有挑战但是可实现的目标 找到实现目标的标杆 成为别人的标杆 把超越对手设为标杆 把第一优先级留给最重要的事情 一切改变的根源，来自我们大脑想要去改变，所以在做任何事情之前，先要让大脑确认这件事情是否很重要。 目标不要设置太多，否则一个目标出现问题很可能引发破窗效应，进而恶性循环。 跨界，斜杠青年，全栈工程师，首先先有一个精通领域，然后再跨。专注于打造长板，然后围绕该长板打造出专业木桶。而且长板的能力是可以迁移到其他板的。 来一句鸡汤：成功的路上并不拥挤，因为坚持的人并不多。 行动：Action 我们应该做什么？ 认清自己的现状 做事情我们需要关注两个问题：做这件事情可以给自己带来多少收益；这个收益是否可以积累。 去做有挑战的事情，走出生理和心理的舒适区，当你走到更高的层次之后再回过头看的时候认知是不一样的 每天HAIO（嗨喔）：Health健康：运动，健康和饮食；Attitude心态：控制情绪，正能量，不抱怨；Input输入，Output输出 那么是不是就意味着不用做无用之事呢，还是要认清边界，该主题得到的30天认知训练营中有很好的解读。 积极正向心态的培养方法是：从自己需要培养开始，从一次转念开始，从一次不抱怨开始，从一次收获正能量看是，从一次回归内心开始。嗯嗯，从现在开始。 衡量输入是否有效的标准是是否进行有效的输出。你现在有哪些输出的渠道？ 如何让自己行动起来 先考虑要不要做，然后再去考虑怎么做到；当你纠结要不要做时，那就去做。必要时，逼自己一把，立刻马上开始。 降低启动成本 启动前不要想着追求完美，可以后续再快速迭代 创建自己的启动仪式，比如手环或者番茄闹弄都可以 设置截止时间点，根据完成所需要的时间来设置截止时间，而不是最后的交付时间，否则你总是会拖到最后一刻 愿意付费，购买动力，付费可以保证更好的质量 玩一把坚持当铺，类似的有很多累死挑战金的应用 把钻戒丢过栅栏：别丢太远，否则可能捡不回来；钻戒的分量要重，否则不想去捡 如何提升行动效率 从HAIO四个方面制定量变到质变的表，可以按月或者按周制定，每个方面控制在三项以内，同时需要确定优先级和核心计划，而不是所有的平分时间 行动中保持极致专注，心流 充分利用碎片时间，充分利用串并行，随时记录零碎的灵感 决定我们是否脱颖而出的不是看了多少书，不是听了多少演讲，不是参加了多少培训，而是我们给这个世界输出了什么。 做问题的终结者，而不是问题的传递者。（边界是什么？） 过去的某一天积累和善行都将会作用于未来的所有作为，未来你的伯乐很可能就是若干前你不经意间提供帮助的那一位。（无用的事也许只是此时无用，局部无用全局有用） 热爱：Love 二社四感：社交，社群；参与感，责任感，成就感，愉悦感。 社交 你的朋友圈决定你的高度。如何与更优秀的人建立联系，情感账户，帮助别人，交换价值。如何去做： 持续增加自身的那块长板，让自己成为细分领域的大牛 大牛需要的我愿意给 让自己成为社群领袖 社群 社群是提升自己交换价值得好地方。成为社群领袖后，你的交换值就成为了自己和整个社群。借力用力。 参与感 优秀的领导者都具备一个能力：让别人认为他很重要，来赋予对方更多的参与感。可以通过结识负责人来提升自己的参与感，同时要积极主动。不是You can you up，而是you up you can。 责任感 要想获得更多的参与感，不管是在公司还是社群，不管做什么，都需要把自己身上的责任感激发出来。 成就感 成就感可以通过小事情上的成功积累，里程碑思维。关于获得成就感，请注意，不管你做什么，需要可以输出作品，并找到输出渠道。输出才能彰显你的价值，才能收获更多的成就感。 愉悦感 培养愉悦感的有效方式是：间接愉悦感带动直接愉悦感，也就是利用可以产生愉悦感的事带动想要做的事。 如何实践 围绕自己的第一优先级： 通过’在行’APP或其他方式约谈相关的大牛 成为相关社区的一员，如坚持星球，头马 主动发言，主动要求承担更多的责任 尝试组建自己的相关小社群 输出自己的一件作品 案例 当时之坚持，今日之热爱。 婚姻：婚姻不能顺其自然，需要呵护，最重要的是要肯花时间，创造生活的小情趣，还得付出感情、创意和努力，及时发现和解决问题。 育儿：坚持自己的态度，坚持亲子阅读，坚持亲子游戏，坚持运动，坚持把时间花在有趣的事情上。给于自由，创造环境，以身作则。 调整：Adjustment 坚持周期包括：兴奋期，衰退期，倦怠期，重启期，成就期，平静期。 突破倦怠期的办法： 困了累了，就休息一下，然后继续 给自己一个重新开始的机会，爬起来再战 调整目标，调整认知，重新赋予意义 调整行动，增加新鲜度 调整热爱，让二社四感成为坚持能量站，可以跟《如何想到又做到》相结合 升级格局和目标，快速的进入一个领域，然后迅速进入更高层级，站得更高看的更远 回顾GALA，与内心对话，勿忘初心 融会贯通 坚持，是你在努力实现目标的过程中所留下的痕迹。 坚持，是你做成一件事之后分享给别人成功的原因。 坚持，是你在意义足够大及足够热爱前行动的过程。 初心为始，坚持为终。坚持的本质是踏实而认真，是平和而专注，是做出来的，而不是说出来的。 当定下目标后，路人甲说：切，就凭他？ 当开始行动后，路人甲说：咦，竟然开始了。 当行动顺利后，路人甲说：唉，好像还可以哦。 当目标实现后，路人甲说：WOW，你看，他就是行。 做好自己，质疑自然消失，华为终端 四个过程都是需要在实践的过程中不断调整的，而不是一尘不变，这样这个GALA环才能流动，4个过程才能相互促进，形成正螺旋。 行为指南 不见见别人怎么做的，你还真以为你很努力啊，不要在低水平上努力，要提高层次。一定要多接触更多的牛人，否则连自己的目标都是属于低层次的。视野。 如果有两个影响因子，那么四象限是一种很好的说明方式。 增加自己的输出渠道，重视输出。 参与到坚持星球，头马社群， 学习DISC，建立自己的小社群，约谈大牛 不要认死理，在实践过程中一定要调整自己的目标和行动，多维度相互促进，共同进步。","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"我的2019年目标跟踪记录","date":"2019-02-04T02:01:50.000Z","path":"posts/成长记录/我的2019年目标跟踪记录/","text":"目标跟踪记录表 目标进度（1-2月份）汇总：下载《目标跟踪记录表》 运动：坚持连续运动50天共计3061分钟，其中健身835分钟，跑步95公里，冥想1483分钟； 阅读：阅读并输出读书笔记21篇； 运动目标 阅读目标","tags":[{"name":"个人成长","slug":"个人成长","permalink":"http://ruanxinyu.github.io/tags/个人成长/"}]},{"title":"009：时代之巅-互联网构建新经济（水木然）","date":"2019-01-31T23:04:43.000Z","path":"posts/读书笔记/009-时代之巅-互联网构建新经济/","text":"内容概述 中国发展模式从权利+权利寻租者+政策转向为创新+自由竞争+激励。互联网衍生的新经济模式正在瓦解传统资本，资本在裂变，金融泡沫存在风险，但是这其中很存在很多机会，未来中国差异化越来越大，未来的社会是一个高度分工和协作的有机体，让最合适的人做最合适的事，企业必须思考自己的核心竞争力是什么，如何围绕核心竞争力构建商业模式；个人应该遵守长板原理，构建自己的强者聚集效应。 内容剖析 政商分家 过去企业家会异化为官员的经纪人，官员的权力被变相经营，这叫做政经不分，政商不分。现在政商关系从混沌到二元制，这是中国最大的进步。 政府只负责制定公平的游戏规则，当好裁判，是谓政府善治。 企业按现代企业制度要求不断创新，提高管理水平与核心能力，是谓企业良治。 包括消费者在内的社会成员和中介服务服务组织，自主负责，有效协调，是谓社会自治。 中国经济正在由权利驱动切换为创新驱动。最好例子就是煤老板的发家。 低价是王道的价值观，摧毁了依靠传统路径打造品牌的信息，生产低质低价的产品变为最佳选择，假货丛生。这是中国经济主体制胜的关键，但是也造成品牌的没落。 金融泡沫 杠杆，房贷，P2P，股市，双杠杆。 什么叫公正？ 社会财富的分配向底层民众倾斜，抑制豪强的膨胀，从而刺激全社会消费潜力。 社会财富奖赏劳动创新，智慧创造价值，而非奖赏坑蒙拐骗资本运作和制度套利的人。 资本是具有天然的扩张性，侵略性。资本掠夺财富的基本逻辑是先让大量货币涌入市场最高经济增长，提高劳动者的积极性，然后架空实体经济，迫使传统企业低价变卖资产，这次再来抄底收购，通过一张一缩变相侵占劳动阶层的财富。 三个原则： 财富不能单向汇聚，必须循环供给。 实体产业是社会的根基，需要保证其发展。 创新型企业必须得到哺育。 直升机撒钱的主要目的是为了让民众有钱，目前主要有三种方式： 制定最低工资标准 完善提高养老保险制度 调整税收政策，劫富济贫 产能过剩，流通性变差，战争是消耗资本过剩的一个很好的方式。英国的鸦片战争，美国的波士顿倾茶事件，德国妄图吞并世界，日本侵略中国东北，美国发动的战争。对于当前的国际形势，中国必须做好突发情况的准备。 危中有机 飞猪理论有两个条件：经济处于上行期；行业属于红利期。2005年的房地产，2007年的股市，2010年的自媒体。 中国人生产什么，什么价格就跌，买什么，什么价格就涨。 对于企业来说，必须思考自己的核心竞争力是什么，如何围绕核心竞争力来构建商业模式。今后的企业战略不是目标做到多大多大，而是在行业里做精。 互联网供应链采用的是先消费后生产，是一种动态的，扁平的，网络化的组织结构，松散联合具有高度适应性，能够弥补传统组织个性的不足。 传统供应链是推动式的，由后面的环节推动前面的环节，互联网供应链是提拉式的需要依靠消费者的需求来拎起整个产业链。一个靠投资推动经济增长，一个是靠消费拉动经济增长，其本质是变经济由外力驱动为内力驱动。 中国自改革开放以来先后经历了三波商业革命：释放人口红利，释放市场红利，释放个人红利。 用多样化的产品去对接多元化的需求。拳头挡不住细沙，细沙遮不住流水。 行为指南 关注最新动态，抓住机会，及时退出，在规则中求生存。","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"008：新零售时代-未来零售业的新业态（水木然）","date":"2019-01-27T15:04:43.000Z","path":"posts/读书笔记/008-新零售时代-未来零售业的新业态/","text":"内容概述 作者通过分析电商的困境，实体店为何崛起，零售如何变革，未来零售业如何发展以及根基是什么，以此详细的介绍了零售的发展路线以及应该如何应对，对于零售业具有很好的知道意义。 内容剖析 新零售 互联网确实是个好工具，我们不能否认，但更应该记住产品永生,两者万万不可本末倒置。一个成功的企业要懂得一个道理，首先客户要赢,其次合作伙伴要有,最后企业才会赢。利他,其实是最朴素的商业之道，也是产品的核心。 电子商务的本质是什么？是直接搭建了一座工厂和消费者之间的桥梁。而且他将所有的产品都呈现在消费者面前，让消费者去对比购买哪个便宜买哪个，哪个看上去靠谱就买哪个。 新零售就是基于大数据，云计算等新兴科技，以数据为驱动，以满足个性化需求为目的，借助体验式服务完成的点对点商业行为。 新零售到底新在哪里？ 利用新技术提升用户体验和运营效率，以改变用户的消费场景。 通过云计算完成数据收集分析，总结用户的购买行为，优化营销方案，进行精准的商品信息推送，关联。 运用新科技对供应链进行管理和控制，降低成本，提升效率，提升产品品质。 什么样的心理照可以长足发展？ 加强体验服务，大数据关联。 实现个性需求，点对点消费。 打造高品质，强品牌的产品。 新零售的核心可以概括为4个关键点： 云计算，以消费大数据为前提。 个性化，以需求市场为出发点。 体验式，以情感或社群为纽带。 点对点，以消费而非批发为目的。 中国经济大势纵览 1998年中国启动了住房改革。 2002年欧元诞生，世界加速一体化，中国正式加入WTO，向全世界输出产品，中国GDP增速驶入8%以上快速车道。三驾马车（出口内需和投资）开始飞驰。 2003年中国淘宝诞生。中国进入电子商务，同时也只是制造业陷入了低价竞争的恶性循环。 2007年美国发生的次贷危机，并在2008年9月份也变成了百年一遇的全球金融危机。2008年11月份中国推出了4万亿计划扩大内需。 2009年成为了房地产最火的一年。这一轮房价的飙升其实是投资拉动的。 2010年1月份等“国11条”到2011年1月份的“国八条”史上最严厉的房地产调控政策出台。 2011年楼市出现转折，中国GDP自2002年起的这一高速增长阶段已到这一年为止。 2012年到现在中国经济进入调整期，此时的三驾马车里只有围绕一个内需做文章。2012年互联网思维火了。 2013年称为互联网金融元年。2013年6月份余额宝上线，10月份微信支付功能上线，11月份十八届三中全会提出要发展普惠金融，鼓励金融创新，互联网金融首次进入决策范畴。一夜之间，各种P2P平台开始兴起。 2014年3月份互联网金融首次写入政府工作报告。 允许民营银行金融市场参与竞争，同时允许银行破产，2015年5月1日，中国出台存款保险条例，正式实施，最高可赔50万。2015之后很多暴利行业不再存在，民间金融问题开始爆发。 2015年12月供给侧改革一词横空出世。它的本质其实就是从生产端调节社会的供求关系，控制生产端无序的竞争，从而去产能消化库存，然后补短板。充分发挥国家宏观调控的能力。 2014年提出一带一路，2015年12月25日亚洲基础设施投资银行成立。2016年1月16日，亚投行进入运行状态。 2016年10月1日人民币正式加入SDR(特别提款权)货币篮子。 2017年以来，中国政府做出长远决策，推出两个庞大的经济引擎，新零售和雄安新区。 电商的困境 中国电商的典型模式有：产业链模式，开放平台模式，行业细分模式，特卖模式等。天猫是开放平台模式的代表京东是产业链模式的典范，唯品会属于特卖模式，聚美优品走的则是垂直细分模式。 刘强东的十节甘蔗理论，一个产品从创意、设计、研发、制造到定价5个环节应该由品牌商来做。然后接下来的营销、交易，仓储、配送与售后这5个环节应该由零售商来做。 困境 阿里巴巴双11只不过是提前收购了第4季度的销售额数据。目的是为了品牌和活跃用户数。活跃用户的下跌对电商平台来说是致命的。 京东商城盈利能力有限，盈利主要来自于挤占资金的贷款业务。增长进入瓶颈期。 苏宁实体店商业模式和电商其实类似，但是真正运营层面还是有实质性差别，即苏宁是类似百货也那样不做自营的电商则大多是自营。那么线上线下如何系统是一个难题。 突围 当前被认可的突围之路有两条，一是走出去，即跨境电商，二是走进来，即农村电商。跨境电商本质上无非就是把电商的模式继续往外延伸，电商遇到的瓶颈，跨界电商早晚也会遇到，因为跨境电商不涉及新技术新模式。农村电商的本质其实就是让中国更多偏僻角落里基金的好产品有机会进入千家万户。但是存在基础设施的短板。 围剿。中国电商巨头实现合纵连横，打击竞争对手。阿里与苏宁联手围剿京东。百度系的携程围剿阿里旅行。腾讯战营的美团围剿支付宝和口碑网。 中国电商将形成阿里巴巴系腾讯，京东系两个电商集团垄断的寡头格局。 服务升级 互联网流量红利已经消失，新的增长点是服务升级。 网红+直播+电商本质是电视直销只不过从主持人单向输出变成主播与用户之间的互动沟通，本质上还是营销手段做用户转化，只是电商形式上的创新，不是本质方面的提升。 VR+体验+电商这种体验式消费能够有效提升消费者的购买意愿,但是存在感官体验端的局限性和内容生产端的混乱无序。 实体店的崛起 传统零售的产业链条包括生产商，品牌商，百货商城，代理商，终端店。而库存和折扣是吞噬传统商业的两大黑洞。 传统零售的转折点在于电商的流量成本越来越高，人力物流成本也越来越高。因而线上和线下的成本会达到一个平衡。**过高的利润被消除过，低的效率会提高，过高的租金被降低，而同时过低的物流价格被抬升，这才是趋势。**商业的核心优势正在从价格变成服务，但是比拼起服务电商又怎么可能是实体店的对手。 消费升级的本质是零售业已从一个交易的时代进入到一个关系的时代，商家可以在实体店上大动手脚，从而营造出一种无与伦比的消费场景。 需求升级的本质是消费者从寻求对产品的满足感转型为寻求精神层面的满足感。 从空间角度来看无法替代的体验感，让实体店在电商面前优势无存。逛街仍然是消费者休闲的主要选项。实体店的核心功能是空间感，经营本质是商圈营销。通过提升体验感，进而让消费者获得存在感，参与感，获得感这才是实体店的核心优势。 中国电商横行实体店办遍地哀嚎，可为什么日本美国欧洲的实体店就没有遭受到如此迫害？ 日本商场具有最人性化的细节服务，贴心的基础设施，注重细节，以人为本打造极致的实体店用户体验。 美国在地租，物流成本，购物的便捷程度上，将电商难以生存的优势一网打尽。 欧洲实体店门店密集，注重差异化发展，注重精细化发展。 当前阿里，京东，顺丰优选，小米自营店，亚马逊，当当都在布局线下。 零售业的变革 零售的本质就是无限拉近人与人之间距离的过程，而零售的计划其实就是人与人对接路径的不断优化。 零售业的革命性突破点在于传统意义上的资本主义社会的生产资料不具有可复制性，掌握在资本家手里，而到了互联网时代一切都是公开的共享的。传统的产业链结构是消费者面对渠道商，渠道商面对品牌商，品牌商面对生产商，生产商面对技术上，技术上，面对资本资本面对金融市场。而现在是品牌共赢，渠道共享，流量互通，生产者与消费者直接互动。 顶层设计公开化：未来平台化的公司就是把供应商，渠道商，店家等都拉进来，从上下游关系变成平行关系，变被动为主动。 实体店资产证券化：以实体店未来所产生的现金流为偿付支持，通过结构化设计进行信用增级，在此基础上发行资产支持证券。 双轨制管理经营模式：实体店的投资和经营管理分开，将投资收益与经营收益分开结算，投资者和经营者彼此取长补短形成利益共同体。 产供销连为一体：本质是利用电商线上平台掌握消费者的需求数据，然后建立快速反应机制，实现小批量短周期的生产，缩短业务周期。 利用合作直营模式：连锁企业将所有分店改为合作直营模式，将加盟店归为直营店，在反承包给加盟店，统一定价，实现实体店，网店，微店三店合一。 利用大数据管理：数据将成为决策的重要影响因素。 对于实体零售行业来说，增加文化体验就是拉高价格的办法。 金融思维简而言之就是推动资本依次流入最有效率的国家和地区，最有效率的产业，最有效率的企业，最有效率的项目，最有价值的个人，从而实现增值和扩张。 一切金融服务都是在为有资金的人理财为缺资金的融资，以增值为目标，以杠杆为手段以及用为基石，以风险为边界。信用尤其重要，因为它是启动杠杆的基础。 资产证券化和消费金融在未来具有整合发展的趋势，其本质是提高社会运作效率。 未来要实现同款同价，破除层层批发就要实现直营店加盟店和线上店的三店合一模式。三剑合一的最核心问题就是如何才能将加盟店直营化？加盟店直营的核心在于将终端的资产和品牌价值联动起来。将门店的收益权变为资产的唯一路径就是资产证券化。典型的例子就是海澜之家。 零售业的4个现代化：直营店资产证券化，加盟店金融化，产品差异化，电商众筹化。 未来公司做大的秘密只有一个，那就是平台化，平台化的本质就是商业从竞争时代跨入大协作时代。 新零售 未来的消费关系是消费者需要什么，生产者就生产什么。电子商务的本质是定制和外包。消费者开始主导供应链，这一链条的起点是消费者发起需求，由此形成定制，然后经历层层外包，分布式生产再由物流公司将产品送到消费者手中。 彻底解决零售的问题，必须要做到3点合1同款同价要消除层层批发和不同渠道不同价的问题。 中国经济主要分为三个阶段，第1个阶段是1992年至2002年为暴利时代。第2个阶段20032012年从以销定产到保利时代。第3个阶段是20132017年混沌时代。第4个阶段是从2017年起叫做厚利时代。 厚利时代有7个特征： 文化溢价 消费精准化 市场细分化 一切以消费者的需求为出发点 从“互联网+”到“+互联网” 结构开放化 三点确定一个商业模式（你提供的服务是什么？你的消费者在哪里？你的通路该怎么建立？） 未来零售 个性化本质：以人为本。 个性化由来：心理需求。 个性化渠道：大数据融合升华 终极个性化：开发自己的产品 现在处于产能过剩的时代，可以从两个方面为产品增值： 纵深化：将产品的某种功能做到极致，越来越娇越来越专注，服务于特定人群，引领行业的不断细分。 定制化：为消费者量体裁衣，走个性化生产路线。 零售的根基 电商供应链的战略思路大体是：商流、物流、信息流，资金流四流合一；制造、零售、物流三业联动；线上、线下两线驱动；以用户价值为核心一键服务。所以，未来供应链竞争的核心聚焦于三点：用户体验，成本和效率。 信息时代产品或服务开发及生产的速度，以及对市场的反应能力，是企业取得成功的关键。 以消费者为核心，以数据为驱动，以技术为载体。 行为指南 你提供的服务是什么？你的消费者在哪里？你的通路该怎么建立？ 以消费者为核心，以数据为驱动，以技术为载体。","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"007：世界在变软（水木然）","date":"2019-01-26T03:04:43.000Z","path":"posts/读书笔记/007-世界在变软/","text":"内容概述 世界在变软，大工业时代是硬，数字时代是软。作者从商业，社会，人，价值，中国以及未来等方面对时代的演变从宏观上做了细致的对比和分析，以便于我们知晓未来的趋势所在。 商业 迭代的时代 以前乌鸦通过石子喝水，现在也许可以直接用吸管，这就是进步和创新的表现。 我消灭你，与你无关。降维打击。柯达的模拟相机被索尼的数字相机打败，索尼又被苹果智能手机蚕食，诺基亚被微软收购，中国手机厂商崛起。方便面之外卖，口香糖之手机娱乐，自行车铺之共享单车，小偷之移动支付。 每个行业都在整合，都在交叉，都在相互渗透，如果原来你一直认为获利的产品或者行业在另外一些人的手里突然变成一种免费的增值服务，你又如何竞争如何生存。有时候别人把你打败了，他连你是谁都不知道，他也许都不知道你的存在。 新商业逻辑 商业形态最大的变化是供应链的变化。公开化，共享化，平台化，制定化就是社会发展的大势所趋。 传统供应链从上到下由供应商，制造商，分销商，零售商和消费者组成的狭长的链状结构。这种方式有几个弊端，利润层层盘剥，效率层层衰减，库存问题，无法快速感知和响应消费者最新需求。 新供应链以网红经济为代表，是逆向的，扁平的，消费者需要什么生产者就生产什么，这是一个逆向生长的过程，而且中间的经销，营销环节都会被跨过。 传统企业最大的特点是计划性，而网红经济最大的特点是无计划性，并且网红经济具有社交媒体的属性，能从用户得到反馈，从而更好的利用大数据。 精确匹配是共享经济的本质。商业正在由物以类聚向人以群分过渡。 海量中小品牌正在崛起，他们专注于某一类别，具有垂直打通纵向整合的能力。他们的背后不是一家工厂，而这一个工厂集群能随时进行整合。而这种整合就是平台在背后做统筹运营。所有的共享平台的核心任务机制，平台上各个环节的企业进行授信，降低大家的磨合损耗的成本。而区块链的信任恰恰可以解决授信问题。 商业秩序重组 传统商业存在如下的问题（库存，折扣）： 生产商成本越来越高，竞争越来越激烈，产品同质化严重，利润越来越低。 品牌商上下游三角债缠身，库存居高不下，电商冲击严重。 百货商城的经营者目前还停留在扩大营业面积，内部豪华装修的层次上经营成本大幅上升，经济效益递减。 代理商只是产品流通的中间环节，受制于品牌商的各种政策发言权受限，并且有库存问题。 终端电商折扣店居高不下，还得和电商拼价格。 传统的商业模式是赚差价的逻辑。未来的商业模式是商品，应该直接从品牌商手里卖给消费者，然后从工厂到经销商等各个环节再来分配自己的利润，这里没有供货价，也没有供货折扣，而是由品牌商根据库存的仓位，统一制定零售成交价。 商家和消费者的关系正在从买卖关系升级为服务关系，未来比拼的将是深度服务的能力。社会转向“平台+个人”的结构。平台的价值就是通过运营能够精准的将生产者和消费者对接起来，实现点对点的服务。 在未来的价值链里，你要想获得价值，自己首先得有存在的价值。 从打破到大立 改革开放40年来的造富运动，从80年代的倒买倒卖，到90年代的建工厂，到2000年后的房地产，再到2001年后的互联网金融。 暴利时代已经过去，如下方式都有可能会造成反贫： 楼是美梦破灭 资金链断裂和违约 廉价劳动力消失 同质化竞争和产能过剩 重污染高能耗企业结构调整 泡沫产业挤出效应 政策改变 资源枯竭 所谓大破破的是旧规则。什么是旧规则在过去我们只讲目的，不讲手段，发展就是硬道理。很多是以牺牲诚信和道德为代价，为了改变这种粗放的发展方式，我们需要重新建立规则和秩序，这就是大立。 未来人与人之间最重要的一定是信用。我们首先迫切的需要重塑文化，其次是重建信用。做生意的基本逻辑是千方百计的寻找差价，而做事业的基本逻辑是创造社会价值的同时实现个人价值。互联网释放了我们的个性，此时的社会结构正在变得扁平柔软，有温度有情感。 未来的社会将实现按需定制，按兴趣组队，按人群服务，小批量制作，不断迭代。 产业轮回 工业对农业，互联网对工业，资本对互联网权力对资本，民众对权力。我们必须明白两点，一个是空间，你所处的上下游环节是什么？一个是时间，你收割或者是被收割的时间到了吗？ 未来商业的本质可以总结为数一数二，不三不四，五五六六，七上八下，九九归一。任何一个行业都会诞生出两家综合性的平台性的公司会存在第3家第4家，但是一定会出现垂直细分的平台型公司，而且会纵向发展，最后有一个通路新公司进行整合，将合适的产品做到与之相应的消费人群。 投资曲线 投资有两个重要因素，一个是趋势，另外一个是节点。 虚拟产业包括线上的信息流，货币流，实体产业包括线下的产品流，人群流。虚拟产业和实体产业相辅相成。 信息流与媒体电子商务等互联网产业为主 货币流与银行互联网金融等金融产业为主 产品由以制造业零售业等实体产业为主 人群流以实体店培训教育等服务业为主 社会 未来的城市 工业时代遵循的逻辑是占有大于一切，关注的是有形产品的生产和流通，有形空间的占有和使用率。工业时代的思维是线性的，连续的，可预测的。 互联网时代遵循的逻辑是连接大于拥有，他不求占有实体产品和有形资产。互联网时代的思维是断点的突变的，不可预测的。 未来社会的核心财富将不再是产品，而是数据和信息谁满足了消费者的需求，谁掌握了消费数据，谁就可以制定新规则。未来贸易的核心是信息化调度而非传统的物理输送体系。未来的金融是建立在大数据和信用基础上的普惠支持，而非传统的银行抵押模式。 从现在开始，每个人每一座城市都需要一场自我革命，没有一种商业模式是长存的，没有一种竞争力是永恒的，没有一种资源是稳固的，没有永远的落后，也没有永远的领先。 在古代每个城市都会建立一道护城河，用来保护自己在互联网时代，开放化，共享化，平台化，流动化才是大势所趋。 未来的教育 人类该如何修行才能成为地球上真正的主宰者，这是未来教育要研究的问题。现代教育的本质无非是一场教育资源的争夺。未来的教育绝不是所谓名校名师名额的争夺，而是一场人类思想的赛跑，真正能胜出的人不是最有钱的家长，而是最能读懂这个时代的家长。这个时代正在播去我们一件件华丽的外衣，他要的是你真正的情操和最原始的本真，而不是你的学历背景。 未来是超级个体的时代。教育的意义是挖掘每个人的潜能与天赋，然后不断强化，让每个人发现自我拯救自我成为最好的自己。教育的时间边界也将越来越模糊，最先学会自律的人将最先走向成功。先是自我认知，再是自律，最后是自信，这是教育过程中人格形成路线。 未来不再有最好的大学，未来只有更适合个人的课程组合，这些课程组合是定制化的，学习中心取代的是学校课程组合，取代的是老师统一授课。而文凭和学历都将消失，教育培养的不再是善于考试的优等生，而是大批创造者，创新者。 未来阶层 在以前我们的财富是跟劳动时间直接成正比的，可以通过积累原始资本来实现财富。在数字经济时代，连接改变了社会财富的分布，互联网正在加剧贫富分化，大数据，人工智能正在增强赢者通吃的效应。 在古代土地是最重要的资产。后来机器变成了最重要的资产。在未来数据将成为最重要的资产。 未来世界被设计成3层：顶层上流，中层中产和底层。第1层世界的人从一个场合到另外一个场合交换共享资源。第2层世界的人工作之余，还要把时间用在技能培养和自我提升上。第3层世界的人在充斥着各种垃圾信息的互联网上度过，用廉价的食品喂饱自己，又被廉价的社交媒体消耗掉。 人工智能将产生大量无用阶级，指的就是底层。 未来拥有大量财富和控制数据的人将优先获得机会，他们不断的改变自己，从而使自己获得平常人难以拥有的权利和机会。 未来的稳定 世界唯一不变的就是变化，稳定的本质就是你拥有化变化为不变的能力。未来没有稳定的工作，只有稳定的能力。真正的稳定是你到哪儿都有饭吃，牛叉的人到哪儿都不彷徨。 未来是平台+个人。这是一场人性的解放，因为我们可以自我支配时间，选择自己钟情的服务和消费者人们之间开始独立，互需，这将促进人与人之间的人格平等。 你是谁？你有什么特长？你能为这个世界做什么？弄清楚这三个问题后，在不断加强自己在某一方面的能力，然后强化到以不变应万变，这才是未来稳定生活之道。 人 三种思维 思维差距是在认知差别基础上增加了行为和习惯元素。 普通人成群化，精英个体化，王者孤独。 普通人关注对错，精英关注利弊，王者关注整体。 普通人注重关系，精英注重规则，王者注重平衡。 普通人被引导，精英善学习，王者善总结。 普通人做事，精英做模式，王者做局。 普通人要安慰，精英要真相，王者要希望。 普通人看别人短处，看当下，要养家糊口。静音看别人好处，看趋势，谈回报。王者看别人长处，看必然，看空间。人与人的区别就其本质是格局的区别，提升自己的格局才是人生逆袭的必然途径。 无用阶层 奶头乐战略：该战略包括发展一些低俗产业，特别是泛指那一类让人着迷，低成本能够使人满足的低娱乐内容。这种娱乐十分受欢迎，由于生活辛苦的大众对此需求很高，使其不知不觉的沉溺于享乐与安逸中，从而丧失上进心和深度思考能力。 人类存在的价值在于能给世界提供两大资源，智慧和劳动力，而劳动力正在被人工智能一点点取代。我们现在能做的就是形成和完善自己的独立思考能力，对各种低俗文化坚决抵制，然后在自己的领域不断深耕和精进。 定位与热爱 社会的组成企业+员工迈向平台+个人的时候，意味着资本正在走向裂变的时代。 热爱将是互联网时代的第一生产力。由于各种平台和连接的产生，社会的每一个需求和价值都被精准高效的对接起来，尤其是个性化的产品和个性化的需求。于是人的长处决定了人的价值，以前我们都拼命补短板，今后我们需要不断提升长处。未来我们只需要专注于将某一方面做到极致，便可释放出巨大的生产力。 互联网时代是一个人性回归的时代，我们需要坦诚的面对自己的内心，我究竟是谁，我可以做哪些有意义的事情。 今后最好的投资是自我投资。 短板理论失效，长板理论诞生，一定要成为某细分市场的佼佼者。 兴趣至上，情怀至上，理想之上。 别人浮躁，你淡定。别人喧哗，你思考。 适合你做的事，只要开始想干什么时候都不晚。 人性与伦理 一个健康的人的任何一种行为，都是服务于服务于他自己的目的的，这就叫做人性。 无论你是谁掌握了什么资源，积累了多少产业，总有一种变革针对你，总有一款危机会降落在你身上。没有一种模式是长存的，没有一种竞争力是永恒的，我们所有的经验和积累随时都有可能被颠覆，被清零。 浮躁是这个社会和时代高速发展阶段的副产品。未来我们会越来越焦虑，会越来越孤独。在效率最大化的思维主导下，人们已经进入了无利不往的状态，对待事物越来越冷静现实理性麻木活得像一台是了既定程序的机器。 价值 顺势而动 同样是画家，为什么梵高等人终生贫困潦倒，毕加索却如此富有，原来毕加索不仅是一位绘画天才，还是一位营销达人。 成功有三大因素：天时，地利，人和。天时是指你能借助时代的力量吗？弟弟是指你的努力和勤奋程度如何？人和是指你的天分特长是否能得到发挥。 一个人一生有三次心理成长期。第一次是发现自己不是世界中心，第二次是发现自己不能改变世界，第三次是认清现实后依然热爱世界。 诚信无价 穷人积累财富的轨迹是：努力工作-&gt;挣工资-&gt;消费-&gt;储蓄。 富人积累财富的轨迹是: 努力打拼-&gt;创造利润-&gt;想办法向银行借钱-&gt;用负债的方式理财创业。 负债也是一种能力。吸纳财富的最好办法就是不断给自己塑造诚信，使自己成为人心所向之地。 财务的本质无非是两个字诚信水往低处流，但是财富永远都往高处走，哪个高处呢？当然是信用的高处。 金融战争的本质无非是抢占全球信用的制高点。 阶层流通 中国人的财富形式经历了粮票（花钱的权利）-&gt; 存款（现金数字）-&gt; 房产（固定资产）-&gt; 估值（虚拟资产） 4个阶段。 未来社会越来越共享化，公开化，公共化。财富在合理的状态是，你拥有的并不是一款的钞票，而是拥有支配资源的能力，然后需要让资源继续流向最有能力的人身上才能实现财富增值，同时也能成全了他人。 接下来的机会在哪里？答案是：一定要做某个细分领域的第一。要专注专注再专注，要充分认识自己，发掘自己，坚持做某一细分领域的第一，哪怕是一个非常小的领域，能做到这一步你就不再平凡。未来那些基于平台之上的小众兴趣，小众价值观，小众梦想，小众爱好都将被成全。每个人都有逆袭的机会，当下才是最好的时代。 触点 生意二字以前的本质是买卖，未来的本质是美好生活，人类要做的不是机器的傀儡，也不是产品的跟随者，而是生活的主导者，未来不再由生产者和消费者之分，我们都是生活者。 只有实现了个性化定制，才能解决社会的根本问题，定制化带来的多元化，生活因多元而美好。 全世界的工业有三种模式，第1种是福特模式-流水线模式，第2种是丰田模式-产业链模式，第3种是海尔提出的全新商业模式-生态圈模式。 合伙人模式目的是取代传统的雇佣制，以此来充分调动全民生产的积极性。（通证经济） 传统时代流通为王，互联网时代流量为王，物联网时代一定是触点为王。创造者的最大优势在于它能让价值在自己身上放大，能创新能创造未来，只有这样的人才能立于不败之地。 共享经济 在互联网时代不是奇货可居，而是奇货可租。在不久的将来， 一件物品的所有权和使用权是分离的，未来我们交易的更多的是物品的使用权，而不是所有权。 一件物品究竟属于谁并不重要，重要的是我们每个人都可以使用它。所以在未来一切资产都会变得更廉价，而唯一变得更昂贵的东西就是你的创造力。 大象无形-中国软实力 物质匮乏的时代已经过去，我们已经处于产能严重过剩的时代。现在的重点不是生产而在于分配。那么中国能做的是什么呢？那就是以互联网和各种新技术为基础，提供各种能使世界物质分配更加均衡合理的应用工具，进而开创出一种更加合理，健康，和谐的价值分配体系。 中国从输出产品已经转换为输出模式。曾经我们只要把美国的互联网模式照搬过来，就可以获得成功（US cpoied to China），而如今大量的中国互联网公司开始向海外反向输出商业模式（China copied to US）。 中国新四大发明：高铁，网购，共享单车，移动支付。 国与国之间的竞争分为三大阶段，第1个阶段为资源的竞争，第2个阶段为制度的竞争，第3个阶段为文化的竞争。中国人口红利在消失的同时，中国的文化红利制度红利却在悄然积累着新的能量。在一带一路的国际大战略中，中国不仅仅要向外输出产品和应用工具更需要输出自己的文化和文明。文化传播讲究的是潜行默化，寓教于乐，未来以旅游为载体的文化项目会越来越多，旅游已经成为促进文化开放，促进文化交流的大平台。 中国的世界级的领导力形成主要有如下三个方面： 人口众多，因而市场和规模巨大，有能力吸引来自全球的优秀企业家技术和资金。 中国的政治社会制度，使得它能够比西方国家更快更有效的做出决策，并加以贯彻实施。 在动荡的年代，全球需要全球化日益深化，需要国内总需求被提振，也需要新的工业革命和新一轮的基础设施建设，调动各种资源。 第1次工业革命发生在英国，英国与其邻国法国最先抓住的机会，是最老牌的资本主义国家。 第2次工业革命中的美国和德国成为资本主义国家的后起之秀同英法老牌资本主义工业国家产生抗衡。 第3次工业革命源于美国和苏联在航空航空航天，原子能，生物科技，计算机等领域的相互争霸。 第4次工业革命就是当下是以中美为首的两大国家在互联网，大数据，云计算，人工智能等方面的相互竞争与发展。 关于未来 美国主导的世界经济结构分为三个阶段资源国，生产国和消费国。 中国设计的新世界秩序的代表是一带一路，亚投行，自贸区，高铁技术援助等。其中一带一路是通路和桥梁，亚投行是金融支持自贸区，是新规则的嘉羿窗口，高铁技术可以帮助资源国进行资源优化和整合。 美国版的全球结构是自上而下的三个层级的金字塔结构，而中国版的全球结构是平等的，去中心化的结构。 人类迄今为止共经历了4波全球化，分别是航海时代，殖民时代，霸权时代，多极时代。多极化，平台化，开放化就是第4轮全球化的重要特征，也是历史的大势所趋。协作，共享，开放是新一轮全球化的大势所趋。 区块链正在引领我们从个人信任制度，信任，步入数据信任的时代。互联网是用来传递信息的，还是区块链子是用来传递价值的。人类正在从信息互联网过渡到价值互联网的伟大时代。 矛盾是推动一切事物进步的根本力量，历史也不例外。每次拐点已到来，崭新的事物都会解决原来的矛盾，但同时也会带来新的矛盾。 软实力的60个体现 对于每个中国人来说，传统奋斗的五大关键词背景、学历、资源、人脉、资历;今后奋斗的五大关键词知识、创新、独立、个性、理想。以前是“学好数理化，不如有个好爸爸”，现在是“有个好爸爸，不如自己有文化”，中国的“新知识分子”将重登历史舞台。 中国一大批有“匠心”的人的社会地位将获得提升，诸如那些脚踏实地的工匠、程序员、设计师、剧、作家、艺术家等。因为互联网已经把社会的框架搭建完成，剩下的就是灵魂填充，所以即便是在普通岗位工作的人们，他们的社会地位也将获得提升，获得尊重。 以前，资源是一个人最大的财富;未来，信用才是一个人最大的财富。人与人之间的信任程度决定着一个社会的运转效率。在大数据的推动之下，未来规范人们行为的不再仅仅是法律，还有信用。“水往低处流，财往高处走”，信用值越高的地方越容易聚财失信者将寸步难行，同时，懂得自律的人最先得到自由。 这是一个机会和选择都看起来更多的时代，所以比善于选择更重要的是善于舍弃，真正的高手都具备一种深思熟虑后做出选择的战略能力 以前，我们的对手总是在身边或同行里“冒”出来，未来是跨界打劫、迅速迭代的时代，竟争变成了社会化的大竞争，你永远不知道你的对手在什么时刻、从什么方向“冒”出来。你唯一能做的就是居安思危、时刻准备着。 以前，社会上的大部分人都过着朝九晚五的生活，未来的工作形态将越来越短平快，支付报酬越来越直接与结果挂钩，所以独立的人会越来越多。这些人更善于迎接各种变化和挑战，无论到哪儿都能很快找到自己的位置，和大家协作共事，当然也能独当面，这就是一个人的兼容性。未来没有稳定的工作，只有稳定的能力，真正的能力是你到哪里都有饭吃。 未来社会，男性和女性的分工会越来越模糊，男性和女性的性格差异也会越来越小，很多女性可以独当一面，很多男性也可以做细腻的工作。 未来互联网平台最大的价值空间在哪里呢?那就是能给大家赋能。 中国正在兴起大量自由职业者，社会的基本结构从“公司+员工”，变成了“平台+个人”。每个人都将冲破传统枷锁的束缚获得重生的机会，关键就看你是否激发出了自身潜在的能量 未来的社会，分工越来越完善，细分领域越来越多，纵向发展是人发挥价值的一大趋势，每个人都在自己的领域专注而努力，人会越来越孤独，每个人创造的价值也都能被精准核算。人与人互相干涉的情况会越来越少，大家不必恶语相向，做好自己就是对世界最大的回报。 未来的社会，人与人之间会有一定的界限感，最好的关系是欣赏彼此的长处，懂得对方的不容易，互相欣赏和关注。守住自己的界限，不侵犯他人的界限，大家彼此独立 未来不会再有“贫困人口”，但会产生大量的“无用人口”。因为在人工智能时代，只启动哪怕20%的人，社会就可以良好运转 比能赚钱更重要的是让自己值钱。人人都在赚钱，但不是人人都值钱。赚钱是外在的短期行为，个人价值的提升却是内在的长期结果。学会“赚钱”只是第一步，让自己“值钱”才是一个人真正的价值体现。在个体崛起的时代，一定要注意积累自己的个人品牌、信用及影响力。未来最好的投资是自我投资。 热爱才是第一生产力。你的热爱和兴趣决定了你所处的社会位置。未来，会有越来越多的“爱好”变得实用，越来越多的兴趣变得有价值。过去受限于市场规模不能成立的特色小生意，现在可以利用互联网找到精准客户;过去受限于信息障碍不能满足的个性化需求，也能利用互联网找到生产个体传统社会最敬重的有两样东西是经验，另一个是权威。而在未来的流动社会里，这两样东西最容易成为成功的阻碍。轻装上阵、一无所有反而更容易成功，所有的优势随时都可能会转化成劣势，所有的劣势也很容易成为优势，所以我们必须时刻都有种“归零”的心态。 劳动力阶层面临一场空前的危机，工厂里的蓝领正在被机器人所取代，写字楼里的白领正在被人工智能所取代。未来只有就是价值创造者。千万不要让自己成为一个重复劳动者，也不要只拥有一种技能，要让价值在自己身上放大，要敢于创新、能创造，才能立于不败之地。 未来可以分为三种格局，即做事一做势一做局。初级格局是做事，靠人和工具;中级格局是做势，靠管理和规则;高级格局是做局，靠系统和制度。 从现在开始，你要认清自己所处的人类历程的位置、经济周期的节点、行业变化趋势，在此基础上，再考虑自己的能力、努力和天分、机遇等因素。天时、地利、人和这三大因素中，天时最重要。 传统的金融，以银行抵押模式为主，服务的是大中型企业，用穷人的钱补贴富人。未来的金融，是建立在大数据和信用上的普惠支持，服务的是大量有价值的小微企业或个体。这就更好地顺应了个体崛起的大势所趋。 以前是“占有大于一切”，未来是“连接大于拥有”，最重要的不是你拥有了多少有形资源，而是你能配置和影响多少资源。衡量一个人的能量，就看他可以随时和多少人建立连接—万物皆不为我所有，但万物皆为我所用。 传统社会的核心财富是产品，而未来社会的核心财富是数据。谁连接了消费者的需求，谁掌握了消费数据，谁就可以制定新规则。 法治的最高境界是德治，德治的最高境界是无治。什么是无治?即依靠利益关联进行互相制衡。在互联网时代，每个人都与外界有无数个连接点，依靠这些连接点，每个人都将直接绑定自己的行为，贪婪、懒惰、无知作为人性的负面，都将被自然克制。 传统的发展路径是关注人们征服自然的进度和力度，追求的是人类单方面的物质增长。未来的社会发展思路是让人类与自然、人类与资源等协作发展，我们在构建一个命运共同体，这才是人类的可持续发展战略。 以前，现金流不如利润率重要;未来，现金流远比利润率重要。传统商业盈利的逻辑是赚差价，产品经过各个环节，每个环节都会加价然后再卖出，所以盈利模式是层层加价的模式。这是种侵吞关系，你的上下游环节究竟盈利多少你是不知道的。而未来，由于互联网的共有性和连接性，消费者有机会直接与各种品牌方接触，于是越来越多的消费者能够直接付钱给品牌方(生产方)，这就导致现金只是从各种渠道方和服务方经过了一下而已。 传统的教育是一刀切、标准化、单向填鸭式的应试教育这无形中磨灭了很多孩子的天赋。随着人们的觉醒，未来的教育将更加体现出因材施教、双向互动化的网络化教育。未来你的大脑能容纳多少知识要点真的不再重要了，因为人工智能，计算机的知识能让你随时取用，最重要的是你的融会贯通的能力，由一滴水看见大海，由一粒沙而感知世界，让学生从认知走向自信。 所谓“一流的企业做标准”这句话将不再成立，这是大工业时代的逻辑，所有产品都被整齐划一地生产出来，标准的制定者可以坐享其成。未来所有的标准只有一个，那就是能否满足消费者的需求。而消费者的需求一定是个性化、多元化的，它对企业有两方面比较高的要求:第一是提供定制化的能力(科技)，第二是对接消费者的能力(互联网) “雇佣”时代已经彻底过去了，“合伙人”时代已到来。无论你愿意出多少钱，你都很难雇到一个优秀的人才，除非你跟他合伙。大胆、大度地把股份转让出去吧!海纳百川，有容乃大 中国电子商务进化论:B2B—B2C-C2C—C2B一C2F，即从商家对商家、商家对个人、个人对个人到个人对商家，最终是个人对工厂。未来每一件产品，在生产之前就知道它的顾客是谁。个性化时代到来，乃至跨国生产和定制，将彻底打破以美国为主导的全球产业链和贸易结构。 中国互联网的进化论路径:传统互联网一移动互联网一物联网。传统互联网就是PC互联网，它解决了信息对称;移动互联网解决了效率对接;物联网需要解决万物互联—数据自由共享、价值按需分配。各尽其才、各取所需，让每一个人都能找到与之相关联的人，然后进行各种合作。 互联网改变世界的方式，正在从“信息”革命升级到“效率”革命。上一个30年，世界诞生了很多的互联网企业，都是以信息分享”为价值的，比如 facebook谷歌、腾讯、百度、阿里巴巴等;但是眼下我们更需要真正解决世界物质的分配问题，需要把物品置于最需要它的位置，或者分配给最需要它的人。因此，未来的30年，将诞生一大批垂直的应用型软件或平台，能够更好地分配世界的物质资源，解决产能过剩的问题，创造更加普世的价值。 中国媒体的进化路径:传统媒体一新媒体一自媒体一信息流。媒体正在由集中走向发散，由统一走向制衡。自媒体的兴起将对传统媒体形成有益的补充，它将使中国的话语权开始裂变，而未来人人都是一个自媒体，信息流的产生将使媒体消亡。 中国营销业态的进化论方式，即媒介为王一技术为王一内容为王一产品为王。传统广告总是依靠媒介的力量去影响人，比如央视的招投标。后来的互联网广告开始依靠技术实现精准投放，比如按区域、按收入、按时段投放。再后来的社交媒体的崛起使好的广告能自发传播，而未来最好的广告一定是产品本身，最好的产品也一定具备广告效应 中国商业的盈利方式先后经历了暴利时代一薄利时代一厚利时代三个阶段。暴利时代存在于改革开放初期，当时产品紧缺需求激增，而且信息不对称;后来电子商务的兴起，产能过剩，导致商家恶性竞争，开始打价格战、促销战，于是进入到了薄利阶段;而今后的产品开始走个性化、定制化和个体化路线，产品的增值空间被打开，从而步入厚利阶段。 未来的一切内容都将开放化，版权效益将进入增值模式，而不是出售模式。所谓的内容为王，其实就是一切中介、渠道都会被边缘化。平台作为基础设施也可以被取代，只有价值创造者才是永恒的。 做生意，以前的本质是“买卖”，未来的本质是“生活的意义”，未来不再有消费者，我们都是生活者。未来商业的本质，如果用三个字概括，那就是“被需要”;如果用两个字概括，那就是“奉献”;如果用一个字概括，那就是“爱&quot; 中国的产业结构可以总结为:一维的传统产业一二维的互联网产业一三维的智能科技产业。一维世界正在推倒重建(实体经济的重组)，二维世界已被划分完毕(BAT掌控)，三维世界正在形成。高维挑战低维总有优势，降维打击几乎是必胜的，所以网店可以“冲击”实体店，而微信的对手一定会在智能领域诞生，真正的好戏还在后头。 中国当下的企业分为三个等级:三等企业做服务:二等企业做产品;一等企业做平台。企业的出路唯有升级为平台化，平台化的本质就是给创造者提供创造价值的机会，把自己变成一个价值创造的平台。未来所有的公司、企业、组织都将平台化。 原来中国的基本细胞是“企业”。社会上的每个“需求”和供给”往往都是由企业到企业来完成的，而今后中国的基本细胞是“个人”。供需双方很多都在个体化，中国的社会结构将越来越精密细致。可以做一个这样的比喻:如果把中国经济比作血液循环，那么今后它的毛细血管会更加丰富，输送和供氧能力会更加强大 原来的企业是横向发展，越做越大，涉及面越来越宽，因此企业越做越容易形成“同质化竞争”。今后的企业应该是纵向发展，越做越精，挖掘深庋越来越深。这种变化将使行业越来越垂直、协作越来越完善。于是社会越来越细分，结构越来越周密企业与企业之间、行业与行业之间的独立性越来越强，“差异化共存”成为商业主流。 中国的一线或新一线城市正在分层。老城区居民主要是本地“土著”，正在逐渐衰老;新城区居民作为城市新贵，是新兴力量的代表者;城乡结合区则以外来务工人员为主。与此同时，城市的富人区、租赁区也将越来越明朗 城市的“单中心”化正在被“多中心”化所取代。以前个城市的人会觉得逛街就要去某某商业繁华大街，所以那里寸土寸金。未来城市将出现多个区域的中心，多个中心交相辉映才是最好的发展势态，这将势必改变传统的房价格局。 中国城市格局正在改写。“北、上、广、深”正在变成北、上、深、杭”。传统贸易的衰落将广州拉下马，跨境电商的兴起将杭州扶上位，未来中国的城市格局应该是“北京的权力调控上海的金融运作+深圳的智能科技+杭州的电子商务”。 中国经济的增长动力先后是“权力驱动市场驱动”需求驱动”。最开始的改革开放由政府引导，所以权力发挥作用很重要;后来逐渐转换成了市场主导，但是导致无序化竟争，出现了产能过剩;今后一切生产都以消费者的需求为出发点，以创造价值为目标。 中国经济模式的进化路径:计划经济一市场经济一共享经济一共产经济。在“计划经济”阶段，中国实行“按计划生产，按计划消费”;后来开始发展“市场经济”，中国开始“按市场生产按利润分配”;而今后我们将以消费者的需求为出发点，开始遵守按消费生产，按价值分配”的原则;未来的中国一定会实现“按需求生产，按需求分配”，创造无限接近需求。 中国商业本质正在从“物以类聚”切换到“人以群分。原来社会结构按“物品”归类，未来社会按“人群”归类。相同爱好、相同志向的人很容易汇聚到一起。 中国商家和消费者的关系可以分为三个阶段，即买卖关系、服务关系和共生关系。以前买和卖是商业的基本逻辑，核心是“产品”，于是有了差价和利润;后来以满足消费者一切需求为基本逻辑，核心是“服务”，产品要虚拟化、增值化;未来商家和消费者的界限会越来越模糊，每个消费者都将成为一名生产者，价值共享。 中国互联网衍生出了三大新兴的经济形式，即个体经济共享经济和零工经济。“个体经济”体现为自由职业者大量兴起，象征着自由;“共享经济”是人们开始分享自己的资源，体现出资源共享;“零工经济”是人们利用互联网和移动技术快速匹配供需方，它象征着多样化。这三大新模式不断地蚕食主流的商业模式正在诞生新的商业文明。 中国经济正在先裂变后聚变。裂变指的是企业和组织大量断裂，很多自由职业者被释放，而同时这些自由个体又在不断地进行重组，共同完成某个项他们挥之则来、来则能战，灵活、独立又可高度协作。可以肯定的是，无论是裂变还是聚变，都可以释放很大的能量 随着中国经济重心进一步南移，粤港澳大湾区作为区域协同发展的先行者，有可能在中国下一轮增长中占据举足轻重的地位。南方地区将以工商业为主，北方地区将以劳动力和资源输出为主，这有利于中国产业结构的分层，进入区域协同发展阶段 今后将无差价可賺。由于传统社会的信息不对称，造成了供给”和“需求”始终是错位的，因此出现了一批商人去对接并从中谋利。而互联网搭建起的商业基础会越来越完善，今后供需双方可以随时精准连接。所有的中间环节都没有了，赚差价的逻辑也就不存在了。“经商”一词需要重新定义，传统思维彻底落伍了 中国商业角逐的核心先后经历了地段一流量—“粉丝”三个阶段，房地产经营的就是地段，传统互联网经营的就是流量自媒体经营的是“粉丝”。以前是没有调查就没有发言权，今后是没有“粉丝”就没有发言权。未来就是“影响力”和“号召力”之争，“核心粉丝”的瞬间联动是未来商业的“引力波 中国的互联网平台正由“跨界互联”迈向“兼并垄断”。平台一旦垄断市场就会自己制定这个行业的规则，就将书写新的秩序格局。虽然创新的机会越来越少，但合作过程中会产生聚变效应将使一大部分人受益 中国精神文明的红利期正在到来。传统的物质文明进展步伐已经开始放慢，因为工业化已经将社会各项硬性设施布局完善物质的野蛮增长期已经过去，而互联网又已经把所有的连接搭建完毕，柔性内容开始迅猛增长，新文化行业将是一个增长点。 传统社会注重的是生产效率，关注的是对有形空间的占有和使用效率;未来社会注重的是分配效率，关注的是价值节点的分布与连接。我们已经生产出来太多的产品，乃至进入了产能过剩的时代，未来最重要的不是你能生产什么，而是你能不能把最合适的东西送到最合适的人手中，使社会资源精准匹配、各归其位，这也是未来创业应该遵循的基本逻辑。 世界的本质无非就是一个大循环，它包含四股流体，即线上的货币流、信息流;线下的产品流、人群流。首先，我们要学会看大势，要把每一股流体的方向和趋势看透。然后踩准节点，每股流体都有N个节点，这就如人体有奇经八脉、关键穴位是一样的，商业的本质无非就是给世界把把脉、点点穴。 中国人的财富形式先后经历了票据(花钱的权利)一存款(现金数字)一房产(固定资产)一估值(虚拟财富)四个阶段，未来的财富形式一定是估值或市值，趋于虚拟和抽象，只是一个数字。即你拥有多少财富，并不代表你就可以随便动用这些财富，而是代表你有支配这些财富的权利，财富多少意味着调动资源的大小。究其本质，是整个社会越来越共享化、公开化、公共化。 中国未来将建立起一个伟大的“超级互联网公司”，将BAT收入囊中，通过高效协作和行业细分来优化配置社会的各种资源，包括各种大大小小的、边边角角的零部件，不浪费一颗螺钉、不放弃一个灵魂，将整个社会带入价值创造和吸收的大循环。这家“超级公司”的股东就是人民，CEO是政府，员工是公务员。 世界经济的发展永远都是两股势力的交融:金融和实体、线上和线下。两股势力一边交合一边延展，类似于DNA螺旋式延展，你上我下，或者我下你上;当下就是实体正在上位的时刻。所以现在的线上产业(电子商务、互联网)都跑到了线下(实体店商场)去抢占地盘，“互联网+”变成了“+互联网”。所谓的新金融、新零售、新制造无非就是这个意思。 未来线上的一切都是免费的，包括文章、书籍、视频、电影、音乐等，所有的创造者都会无私地分享自己的作品，所有的生产者都有机会展示自己的产品;未来线下的一切都是收费的，如影院、餐厅、演唱会、见面会等。究其本质，线上资源在公开化、共享化，而线下的场景和体验才是消费的重点。 人类社会的发展路径:部落社会一村落社会一家族社会家庭社会一个体社会。世界正变得越来越细致、周密。以前各种关系是面对面发生的，后来发展成了线对线，未来的世界是由各种“触点”(个体)构成的，个体崛起也就意味着各种“组织”的“下沉”，一切组织都必须下沉，把舞台留给“个人”。 行为指南 找到自己的细分领域，然后做到极致。","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"006：如何想到又做到","date":"2019-01-24T14:04:43.000Z","path":"posts/读书笔记/006-如何想到又做到/","text":"内容概述 作者持久改变分为两步：首先确认你想改变的行为是哪一类型，然后运用改变这类行为所需的武器SCIENCE模型。行为分为自动行为，冲动行为和常见行为三种。SCIENCE模型包括：阶梯模型，社交磁力，要事为先，极度容易，行为在前，致命吸引和反复铭记。 文章剖析 武器1：阶梯模型 要实现目标，就要先专注于迈出第一步，找到正确的第一步，把所有的精力都放在实现第一步上，然后花时间回顾你的进展，接着在第二步中重复这个过程。 快速迭代，进入上螺旋，然后快速应用PDCA 因为锚定效应的存在，当我们进行任务拆分时，大多数会想出3到10步，而全然不管目标是大是小，所以造成我们的行动不够小，难以迈开第一步。他们往往以为自己规划的就是达成目标的小步骤，但实际上他们设计的步骤相当大。 梦想比目标更大，它一般要花三个月或者以上的时间才能达成，而且你此前从未实现过这一梦想。 目标是人们定制的过渡计划，分为长期目标和短期目标，长期目标一般要1到3个月，短期目标一周到一个月的时间。 步骤大多只需要不到一个星期来完成，是实现目标的道路上要逐一划掉的小任务。 一般而言，设定要花一个星期完整的目标，并规划出不到2天就能完成的步骤，是使用这套方法的关键。我们要专注于完成具体的小目标。 为什么阶梯模型会有效？ 因为人们会快而小的奖励赋予的价值高于延迟到来的大奖励。专注于小步骤，能让人们更快乐，更积极的继续尝试，因为他们得到了更多的奖励。 阶梯模型有两个重要的组成部分: 首先是使用模型来规划恰当的渐进步骤，目标和梦想 其次是回想 回想有利于建立自我效能感，即改变是可实现的。值得一提的是，只有在认为自己完成了当下步骤的时候，人们才应该回想上一部，否则可能会适得其反。 阶梯模型不仅仅可以用于个人习惯改变，同时也可以应用于商业之中，比如说开发一款应用时，就应该考虑阶梯模型，提高参与度和留存率，让用户坚持使用产品。 武器2：社交磁力 这个强大的社群必定具有社交磁力。通过分享视频和群发信息的方式，召集具体的一个人或一群人，是建立社交磁力的一种途径。 想要对成员产生持久的影响，就需要有足够多的人为社区提供力量，创造社交磁力。对于规模非常小的事情，需要每个人的付出，对于较大的事情来说，需要15%的参与者投入社交磁力的建设。 磁力社群需要具备六大要素： 信任需求：信任能够让大家更乐于学习和改变，保持开放的心态 融入需求：建立社交规范 自我价值的需求：提升自尊心和积极性 社交磁力的需求：不过社群成员没有改造到社交磁力，你就必须改变事情，让他满足成员的心理需求 得到奖励的需求 赋权需求：自我效能感，榜样和导师的引领 什么样的社群能够带来持久改变 确定适合的同伴榜样 让榜样发挥示范作用 开放社群 社群里必须有15%左右的人是同伴榜样。 榜样的标准是，跟将要加入社群的其他人有着相同的人口统计特征和心理特征。 同伴榜样将自己的故事，分享给那些不愿意分享的社群成员，给对方点赞，以及别的方式，跟其他同伴进行互动，这就是我们创造社交磁力的方法。这是群成员都必然感受到来自同伴榜样的鼓励，希望自己改变的健康压力。重要的是，这是一种健康的压力，他让社群成员产生信任感，感受到来自他人的支持，而不是自己不参与就会受罚。 4类经常使用的榜样：专家，名人，传播者，本土榜样 对于到来的新访客，你只应该为他们设定的初始目标：加入后的第一个星期内，为社群做些贡献。 信任，归属感，认同，建立更深层次的连接，这不是广告营销所能达到的。 武器3：要事为先 你认为最重要的东西对你选择做什么有着很大的影响，如果人们认为这件事很重要，他们就能坚持了。 人生头三件最重要的东西是金钱，社会关系和健康。金钱不如人们想象中的那样重要，而社会关系比人意识到的更重要。 牢固的社会关系，对实现幸福来说是最重要的因素。社群力量能够成为强效改变工具的原因，正是因为让人感觉和他人心心相连很重要。 生活可以让人们产生新的动机，新的做事理由，如果我们学会把焦点放在真正重要的事情上，哪怕是悲剧事件上，也能拥有幸福和快乐。 只是让人们理解，并感觉某件事重要，还不足以让他们坚持下去，眼下重要的事情到了明天或明年，说不定就不重要了。只有自己认为重要，然后才可以让别人相信，从对方角度考虑问题，并用阶梯模型， 未来自我干预法表明，哪怕奖励看起来遥远，人也可以改变自己的行为。加入社群也能提升重要程度。 你需要弄清楚怎样才能让事情变得足够重要，重要到你愿意为他而改变。 武器4：极度容易 人们总是希望事情很容易做，他们喜欢容易做的事情，也会坚持做那些极度容易的事情。面对障碍，很快就会放弃做某件事，反过来说，如果你学会了怎样消除障碍，就能很容易继续做下去。 我们可以通过控制环境，限制选择和使用路线图来让事情变得更容易。 改变环境，让它变得更易于做某事，就会让人们真的去做这件事。 人们总以为自己希望拥有更多的选择，但实际上选择太多会让一个人难以做事。 拥有行动计划，让人更容易，也更有可能去做一件事情。阶梯模型，通过小的步骤来达到目标。 知识诅咒，只会把事情弄得对别人太复杂，也会把事情弄得对自己的负责，反而让他们难以将自己的计划贯彻到底。 短线炒家效应，人们对自己，对其他人将来会怎样行事，也会做出过分自信的预测。 极度容易这一武器跟清单可以很好的结合，比如每天2次冥想就可以拆分为2个每天一次冥想的步骤 武器5：行为在前 将密码设置为代办事项，比如smile，这样每次输入密码就是一个暗示。 因为改变通常并不是一直告诉身体，要做出持久的改变，他始于先做出一些小小的行动改变，接着让意识反映出这种改变。 自我认同是这一改变过程的关键步骤。人们通常会根据自己怎么看待自己来决定是否做某一件事。 神经记忆 神经记忆可以让人们回顾自己过去的行为，看到自己的改变，从而坚持做之前没法做到的事情。也间接的说明坚持是一种可以坚持的习惯。 神经记忆，通过两种心理流程来让一个人坚持做事，第一人们相信如果没有非做不可的压力，自己仍然在做某件事，一定是因为这件事很重要，人们会坚持这种行为，以求与对自己重要的事情保持一致。第二，人们通过回顾过去做的事情来形成身份认同，也就是说人们会继续做某件事，是因为这是他们自我形象的一部分。也就是说认知和行为是相辅相成的。 神经记忆可以分为行为，身体动作，生理及情绪，语言和认知。 不必控制自己的想法，只要对自己的行为做一些小小的改变，你的意识就会跟着改变。 语言中的小小改变，能够影响人们对自己的看法以及行事方式。 如果人们总是某一活动时能够全神贯注，而不是频繁走神，他们就会更喜欢该活动。 如何应用 想让孩子更懂得感恩，那就让孩子去做懂得感恩的人会做的事情。 想不再拖延那不妨创建一个治疗拖延的自助小组或者博客。 想更投入的享受当下生活，不妨去参加即兴表演课程。因为即兴表演的首要规则就是认同并遵从每个人的陈述。 想要更好的社交，与其改变自己希望与他人更亲近的想法，不如去做一些事情，让你变得跟他人更亲近。 那些自愿决定去做的事，比如决定自己想要这份工作，而非那份工作，自己选定完成工作任务的日期，就会有更大概率坚持到底，实现预期。（承诺的作用） 让选择变得容易接受这种做法的关键在于要让人感觉是自己主动选择的。我们可以把选择范围缩小。 持久的行为，改变始于行为的实际的实体的变化，而不是思想中的变化。(以行促知) 武器6：致命吸引 如果人们做某件事感觉到了奖励，就会继续做下去，我们把这称为坚持一种行为的吸引力。 把无聊的事情变得有趣，具有奖励的性质有助于你坚持目标，不管你的目标是什么。 奖励必须拥有致命吸引力。普普通通的奖励和真正的诱人之物，其区别在于前者能让人做某件事一次，后者却让人克制不住的坚持做。 哪些事情最为重要？希望怎样得到奖励不同的人会有不同的想法，奖励和诱人奖励之间的区别在于，他对当事人来说是否重要。比较棘手的事要对自己和他人足够了解，才知道什么真正重要。 提升吸引力的妙招 让做&quot;正确的事&quot;变得好玩 多用胡萝卜，少用大棒 别把金钱视为最佳奖励 光是教育不顶用 让活动本身变为奖励 用诱人的奖励调动人们坚持做事，比用抗拒和惩罚更有效，因为恐惧诱发了消极行为。 人不需要用额外的奖励去做，本来就有感兴趣的事，如果你开始为这些活动附加奖励，人们说不定会认为这些活动不像自己想象的那么有趣，因为毕竟需要奖励才会有人去做。 不要光想着教育人，而是要调动人的心理和情绪，让他们坚持做事。 过于简单的引入某种游戏化激励机制大多都会以失败告终，失败的常见原因有如下几点： 强调外在动机，却未能将内在动机包括在内 没有考虑玩家的动机 在原本应与合作创造或学习为重的环境下引入了竞争 主要侧重于管理目标而不是员工的动机。 如何应用 “快修”指的是对人做某事的需求进行直接强化，“妙修”涉及间断奖励。确保自己完成步骤后，立即获得自己选择的奖励，在这里完成更多的步骤，你会继续得到奖励，但同时也逐渐减少奖励的量，不那么频繁的获得它，若有可能改为间接性的获得奖励，甚至在自己期待最低的时候才给自己奖励。 运用阶梯模型和极度容易模型，专注于目标的小步骤。然后不妨先为完成小步骤思考一种让人愉悦的奖励。 如果你能够理解随随便便的奖励跟真正诱人的奖励有什么区别，那么你就掌握了实现持久改变的力量。 武器7：反复铭记 大脑的可塑性指大脑改变并适应新环境的能力。反复自己能让行为变为习惯，一旦习惯建立起来，大脑便达到一种稳定的平衡状态并能够放松下来，如此一来习惯就变成了默认行为。关键点在于重复。 回顾自己的经历，你可能会发现自己的某些坚持失败了，但是那并不重要，重要的是你已经有了一些线索和步骤，当你下一次尝试改变时，就会让你更有可能坚持下去。 我们每天都要穿鞋，它已经深深铭刻在我们的大脑里了，无需太多努力，无需太多努力，我们就可以把平常穿的工作鞋换成跑鞋跑鞋与跑步自动配对，我们发现出门跑步越来越容易了。我们把这种称为磁力行为：实施某种行为（穿上跑鞋）可以变成磁铁，导致另一件相关且可取的行为（跑步）发生。 模型整合 要想改变行为，不能只有一种武器，每一类行为都需要一套不同的武器组合来改变。哪一种武器更为适用，取决于人在做某件想要改变的事情时是否有意识，并且能不能对此做出改变。 创建持续变化的过程分为两步，首先确定你想改变的行为属于哪一种行为：自动行为，冲动行为，常见行为。接下来利用所需的武器来改变这种行为。 自动行为 自动行为指的是人们出于无意识作出的改变，自动行为的方法之一是使用条件反射。 如果你想改变自动行为，不妨使用极度容易和反复铭记的武器，如果可能行为在前和反复吸引也用上。借助其他可以改变有意识行为的武器，益处不会太多，当然也不存在坏处。 冲动行为 冲动行为是人们在受到内心强烈驱使或在愤怒的状态下所做的事。 冲动行为接近于自动行为，这意味着改变冲动行为和改变自动行为所需的力量非常接接近，利用极度容易，行为在前，致命吸引和反复铭记这种几种武器。但是由于人们在做冲动行为时是能察觉到的，所以另一些需要运用觉知的力量也能派上用场。 常见行为 常见行为是人们反复做的事情，至少在做的时候他们有部分时间是有意识的。 改变常见行为需要使用更多人对所作所为有意识时使用的武器。 行为指南 本书提供了一种可执行的步骤，首先确定行为类型，然后选择模型改变自己。很多我们知道很多方法，但是这些方法的边界在哪儿不清楚，所以造成要么不认同，要么用错了方向。本书相当于提供了一个分类，我们可以初步对号入座了解每种方法背后的原理，然后选择性的使用。 另外，当我们不知道怎么改变时，我们可以挨个套用7中模型，在套用的过程中，我们会对要改变的行为做细致的剖析，这也是有利于我们改变的。 那么，后续每次想改变一个行为，都先用该模型梳理一遍。","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"005：子弹笔记","date":"2019-01-24T03:04:43.000Z","path":"posts/读书笔记/005-子弹笔记/","text":"内容概述 作者主要从作用，结构和实践三部分描述子弹笔记。整理自己的想法到每日记录，阅读记录和未来记录等不同的集子，同时说明清单条目是如何在集子之间流转，如何更好的实现自己的目标。 文章剖析 子弹笔记术的使命是帮助人们认识自己应该如何利用生命中最宝贵的人生资源，时间和精力，剔除无意义的事，从而专注于有意义。 子弹笔记术能够帮助我们整理思绪，然后从客观的角度审视自己的想法，确定什么才是最重要的事情，并且便于以后的回顾。 剔除没有价值的事情之后，剩下的事情可以大致分为两类，需要做的事和想要做的事，一个是你的责任，一个是你的目标。 真正的效率，无关速度，而在于为真正重要的事情留出了多长时间，这便是子弹笔记的要义所在。 快速记录 记录的内容包括：笔记，任务和事件。也就是说子弹笔记中不仅包含你要做的事情，还包含了你生活的记录，这样便于后续反思回顾。 为什么用点表示任务呢，因为点可以轻松的转化为其他的标记。语句要简短明了，子弹语句。 可以通过*等特殊符号来标记，但是尽量少用以避免增加复杂度。 - 笔记 。事件 ▪ 任务 x 完成的任务 &gt; 迁移的任务 &lt; 计划中的任务 集子 为了归类以便管理，子弹笔记有四个集子： 索引：利用标题和页码定位内容 每日记录：用于快速记录每一天的所有想法 月度记录：本月时间安排和任务 未来记录：本月意外的任务和事件 月度记录可以记录每天的主要内容（日历页），也可以记录该月的目标（任务页） 未来记录的内容来自每日记录，需要每个月审视从而挪到月度记录中以便于实施落地。 任务迁移可以帮助我们停下来思考每个任务是不是有必要做以及优先级是什么，过滤掉无用的任务。 任务迁移主要是月底你准备好创建新的月度记录时进行。 行为指南 清单的作用不言而喻，重点在于如何管理自己的清单，本书给我最大的帮助是确定了一种比较好的标记和迁移方式，这个值得尝试一下。 对于清单是用app还是本子，我个人的看法是对于生活中的清单用app，因为没有固定的场所，更便于记录和查看；而对于工作，场所固定，我更建议使用本子，因为手抄写能能促进思考，能够更好的审视自己所做的事情。","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"004：睡眠革命：如何让你的睡眠更高效","date":"2019-01-12T03:04:43.000Z","path":"posts/读书笔记/004-睡眠革命：如何让你的睡眠更高效/","text":"内容概述 作者描述了生物钟的规律和睡眠类型，如何运用90分钟睡眠法提升睡眠效率，睡前热身和睡后的舒缓，如何处理日间休息，改造床铺和创建睡眠环境等睡眠修复的关键指标。然后距离说明如何利用R90修复睡眠问题。 文章剖析 人体由昼夜规律的生物钟和自我平衡的睡眠压力来调节睡眠。 对于生物钟来说，光线至关重要，我们可以通过模拟日出自然唤醒灯 清醒的时间越长，睡眠需求就积累的越多。 白天会分泌血清素，晚上会分泌褪黑素，而蓝光会影响褪黑素的分泌，所以晚上要注意不要玩电子设备。 我们在2-3点会进入一个质量最高的睡眠阶段。 90分钟睡眠法 8小时是每晚的人均睡眠时间，所以无需特别关注这个时长而给自己带来压力，我们的目的是休息好，而不是睡多久。我们通过90分钟时长的睡眠周期衡量睡眠，而不是睡了多少小时 睡眠分为打瞌睡，浅睡眠，深睡眠和快速眼动睡眠。 如果想提高睡眠修复的质量，那么设置固定时间的闹铃，正是我们能采取的最有效方式，不管什么时候睡，都固定时间起，这样行为能够成为习惯而被固化。 如果不困就上床或者没有准备好就上床，反倒容易睡不着，强制自己睡觉就是一种浪费，还不如利用这时间看书。 我们保证4-5个睡眠周期就行，不要连续3个晚上缺失睡眠周期。连续一周我们可以看看我们到底需要4个还是5个睡眠周期，但是正确每周保证4个晚上获得理想的睡眠时间。 一个晚上没有睡好没有什么问题，把睡眠放到一个更长的时间段中考虑，减少不必要的压力。 睡前的例行程序 你的睡前例行程序是指你为了确保你进入准备入睡的状态而进行的一系列工作。这些睡眠准备工作能够无缝的过渡到后面的睡眠周期。 关闭电子产品，可以用冥想和阅读替换 保持凉爽的环境，可以冲一个温水澡（不是热水澡） 保持光线从明亮到昏暗 整理生活环境，准备明天的内容，清空你的大脑 梳理今日的生活，以助于睡眠时大脑更好的处理 保证安全，比如门窗 睡前运动，比如瑜伽，散步，伸展 采用鼻子呼吸 睡后的例行程序 睡后的例行程序是为了确保所有花在睡前例行程序和随后的睡眠时间都没有白白浪费 拉开窗帘，保持光线充足 补充水分 回归电子产品 丰盛的早餐 断粮 适度的挑战脑力 偷懒假，如果确实缺乏睡眠，可以先在固定时间起床做完该做的事情，然后回去继续睡觉 日间休息 午后小睡，能量小睡，可控修复期（下午1-3点），不管是30分钟还是90分钟，都可以算作一周的睡眠周期。 晚间小睡（下午5-7点），最好不要虫偶古30分钟。 从长远看，日间小睡并不能替代夜间睡眠，因此R90方案给出的建议是：每周至少应该保证有4个晚上获得了理想的睡眠周期。 番茄工作法 接水不要接满，可以经常去加水 冥想 远离电子设备 行为指南 不要在意某一晚上的睡眠时间，而注重每周的睡眠周期总数，每周至少4晚保证4-5个睡眠周期，对于6点起床的我来说就是得10：30或者12：00睡觉 睡觉前一定做冥想，然后看书，觉得困了再上床睡觉，尽量不要玩手机，读书笔记什么那么就尽量放在第二天早晨做，而不是晚上，或者下班前做也行 中午休息30分钟就足够，晚上吃完饭后可以休息一下，这样不至于把精力所有最好得时间留给工作，做自己的事情时也需要保证有足够的精力 每天晚上睡觉确保屋子没有光线，购买定时台灯，保证每天早晨的通过光唤醒自己 如果不困就不要强迫自己睡觉，把我好这机会好好阅读，提升能力 固定的起床时间，不管晚上睡了多久，都相同的时间点起床，可以将早晨要完成的事情完成后再休息一下 晚上睡觉前要做好睡觉的准备，收拾收拾东西，写笔记做好明天的安排 早晨起来通过开合跳激活身体，然后喝水","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"【香帅的北大金融学课】第003周学习总结","date":"2019-01-09T06:38:48.000Z","path":"posts/香帅的北大金融学课/【香帅的北大金融学课】第003周学习总结/","text":"本周学习内容PPT =======点击下载PPT======= 比特币的未来在哪里 语句摘录 我们使用的这些货币，它们的真名叫做“法定货币”，也就是国家赋予某个银行（比如中央银行）的一种特许权力而发行的，它背后的关键是国家信用. 布雷顿森林会议上确定的美元的一统江湖地位，当时英国凯恩斯提出的是建立一个叫“银行券”的国际货币单位，用一定的权重包含各国的货币。 现代的货币是信用货币，货币价值的浮动完全取决于一个国家的实力和其他国家对于这个国家的信心。所以说没有国家信用加持的货币，即使可以完成计价、储藏、交换的功能，它也不能够成为通用的货币。 货币的发行，其背后的国家信用才是核心和关键。央银行通过拿到国家赋予的特定权力来进行货币发行的。 英王室把伦敦以及它周边地区银行券的发行权独家赋予给了英格兰银行，但是有一个条件，就是英格兰银行要为王室提供长期的、稳定的、低成本的战争融资。从这以后，英格兰银行发行的银行券就被正式地赋予了国家信用，成为了英国的法定货币。 这种国家赋予特定银行特许权力，垄断银行券发行的模式很快就显露了优势。一方面国家主导了法定货币的发行，它能够获得长期稳定的资金，国家的权力变得很大。另外一方面，政府可以通过货币的发行控制整个社会的信用规模，对经济进行调节和控制。很多人认为像英格兰银行垄断货币发行权这样一个金融创新，是英国在后来的长期战争中能够取得先机，成为全球霸主的关键因素之一。 划重点 现代货币的概念中，国家信用才是关键和核心，没有国家信用支持的货币很难成为世界的主流。 课后习题 大家都知道欧元现在是全球货币体系中的第二大货币，仅次于美元，欧元的起点很高，很多人都曾经对它寄予厚望，希望它能够打破美元的垄断地位。那么你看一下今天全球政治经济的大格局，然后再结合今天的课程，你觉得靠欧元来打破美元垄断地位的想法现实吗？为什么？ 欧元是多个国家的信用，如果想打破美元的垄断地位，则信用必须要高于美国，而多国联合本身就存在信任问题，很容易闹矛盾和分歧，就类似于战国时期一样，从英国脱欧也能看出一些端倪，而且美国一定会挑拨离间，所以欧元很难挑战美元，但是如果中国能够持续稳定发展，人民币倒是有可能，因为中国的经济体量够大。 课程原文 央行降准会影响你的钱包吗 语句摘录 国家通过银行体系，调控整个社会的信用规模和经济冷热。如果把经济体看作一个农田的话，银行体系就像一个巨型的水利工程。在这里面，央行就是那个巨大的水库，它发行的法定货币就是水库里的水。那商业银行是什么呢？它是中途大大小小的送水站，直接影响着社会上的信贷规模和经济冷热。在这个水利工程里面有两个巨大的闸门，一个叫存款准备金，一个叫基准利率。 一笔100美元的存款，按照10%的存款准备金率流通，最后可以让我们整个社会流通的钱达到1000美元。 基础货币（M0），广义货币（M2）这种词。在这个例子里，100美元就是基础货币，1000美元就是广义货币，央行发行的这个货币就叫基础货币。 银行放贷的意愿和个人企业现金的持有量会影响到信用扩张的机制 划重点 存款准备金制度是银行体系、货币信用扩张的一个重要环节 存款准备金就是银行需要留存下来应对储户提现的资金。这个比例一高，货币扩张的能力就弱；这个比率低，货币扩张的能力就强 央行可以通过调节存款准备金率来调节我们整个社会的信用规模、经济冷热 银行放贷的意愿和社会现金的持有量都会影响到我们这个货币信用扩张的效果 课后习题 刚才我们讲到，春节里大家的现金的持有量会大量地上升，然后导致我们整个社会货币扩张的规模缩小，但是现在的电子支付越来越在我们生活中占据主导地位，从2013年开始，微信红包、支付宝这样的移动支付工具，在我们生活中变得越来越重要。那你觉得，这些工具的出现会不会影响到我们整个社会货币扩张的机制呢？ 第三方支付的准备金与银行是不一样的，个人与企业手头的现金会介绍，但是能够加大资金的流通性，这个毋庸置疑，但是央行的调控能力会下降，而且央行的吸储能力也变差 课程原文 为什么说基准利率是经济冷热的调节器 语句摘录 存款准备金制度主要是控制了资金的量，而基准利率调整的是资金的价格，然后通过量、价同时控制的手段，整个社会的信用规模和经济冷热就能够被国家所控制了 基准利率就是一个市场上利率水平的风向标。各个金融机构，都根据这个标准来确定自己的贷款和存款利率。央行提高或者降低基准利率，就意味着提高或者降低整个社会的利率水平 加息控制经济过热是正确的，但是这么快速、猛烈的加息幅度就产生了负面后果。商业银行体系的杠杆效应可能将紧缩的效果放大了很多倍。1994年的经济硬着陆就是这样。 2004年美国下调基准利率到负利率，然后再加上布什政府还放宽了房地产抵押贷款的条件形成著名的次级贷款 90年代日本的房地产泡沫也是降息的产物，美、日、英、法、德几个国家签署了一个广场协议，内容就是说，要让美元贬值、让日元升值，影响出口，经济衰退，从而通过超低的贷款利率就刺激居民和企业的投资消费欲望，最后造成房地产泡沫。 划重点 现代经济最重要的就是信用扩张的功能，银行体系就是其中的关键角色。因为居民、企业机构都有投资的需求，需要从银行拿到贷款。而这种需求是和银行的利率水平密切相关的 央行可以通过调节基准利率的水平，调节整个社会的投资需求来控制经济的冷热。降息和加息，这是现代央行的最重要的武器 这个加息和降息的尺度其实非常难把握，过猛的加息可能会导致经济的突然崩盘，而过度的降息可能会导致经济泡沫 课后习题 大家都知道，2017年年底开始，全球好像进入了一个加息的周期，各个央行都宣布要加息。假设说，我们中国的央行现在也宣布要上调基准利率，也就是说要加息的话，你会赶紧把手里的股票全部清盘吗？或者说你本来打算要买房子和车子的话，然后会因为加息而决定不买了吗？ 看自己的投资策略，加息幅度和公司的基本面，而不会一概而论, 课程原文 学金融为什么要先了解宏观背景 语句摘录 世界上从来就不存在独立的微观金融现象，它的背后一定有某种宏观层面的逻辑或者推动力 我们中国市场是一个强政府指导下的逐步开放的金融市场，所以政府在这个市场的影响力是很深的 银行体系有一个叫“窗口指导”的制度，就是国家如果希望银行多放贷，或者少放贷，央行就打个电话给四大行的行长，进行窗口指导 国家政策听上去像是套话，但都是有内在乾坤的，信息量丰富得不得了 不知宏观者无以谋微观，不知未来者无以谋当下，不知世界者无以谋中国 划重点 1．首先，“微观金融现象”的背后一定有宏观层面的逻辑和推动力，其次，中国市场受政府政策影响大，不理解宏观，很难理解金融市场的规律和现象。所以我们会顺着宏观-中观-微观这个思路来进行学习，这样你可以“既见树木，又见森林” 2. 我们课程是阶段式的学习，类似金融分析师的整个学习逻辑，学完后你会在概念，框架，和实操三个不同层面理解和掌握金融知识 课后习题 很多人都可能听说过柳传志的故事。当时他在办公室里喝茶，读到《人民日报》，发现日报上第一次在头版头条出现了“私营经济”这种词，然后就果断地下海，创业，创立了联想企业。咱们中国在过去三十年里，很多成功的企业家都是敏锐地抓住了国家政策的转向，吻合了国家整个发展的大趋势，走向了成功之路。所以，我想请你回忆一下，你是不是有这种经历，在财经新闻、新闻联播，还有各种各样的媒体的报道中，曾经敏锐地嗅出过商业机会，还有投资机会，然后改变了你的人生？欢迎说出你的故事。 物联网，区块链 课程原文 本周问答：银行加息会不会影响你的投资 语句摘录 为什么说其他国家的经济复苏会导致美元贬值？ 出口加大，对美国形成贸易顺差，企业出口得到的美元，但是因为在本国消费不方便，最终又经过银行体系，所以造成本国货币升值，美元贬值。 为什么美元升值，黄金的价格就会下跌呢？ 美元仍然是国际货币，但是黄金就不再作为货币的发行基础了，就是说黄金这时候已经不再是一个世界货币的地位，而是一种投资品的存在了。你就可以想象，从此以后美元就成了世界的货币之“锚”，也就是它成为了一个价值尺度，可以衡量其他所有投资品的价值。那么，美元升值，就意味着这个尺子变长了，那么相对来说，其他的投资品就短了。 课程原文","tags":[{"name":"经济","slug":"经济","permalink":"http://ruanxinyu.github.io/tags/经济/"},{"name":"香帅的北大金融学课","slug":"香帅的北大金融学课","permalink":"http://ruanxinyu.github.io/tags/香帅的北大金融学课/"}]},{"title":"003：区块链-定义未来金融与经济新格局","date":"2019-01-08T22:47:55.000Z","path":"posts/读书笔记/003-区块链-定义未来金融与经济新格局/","text":"概述 本书从信任和互联网为起点讲述了区块链出现的必然。区块链的本质是一种去中心化的记账系统，而比特币则是这个系统上承载的“以数字形式存在”的货币，通过工作量证明来实现共识机制。区块链和互联网一样，能够减轻信息不对称问题，未来区块链协议也将如TCPIP协议一样成为基础协议并且具有分层结构。区块链将会在数字资产化，产业协同，互联网金融，共享经济，新媒体等方面都有新的机遇，比如说可以用于数字货币、众筹、清算审计、智能合约、版权和公证等。最后本文对底层的密码学、区块链、共识算法、侧链技术等做了介绍，并附有比特币和以太坊的白皮书。 内容剖析 文字作为人际交流的手段，承载的是信息；货币作为价值传输的载体，承载的信用。 从石币之岛可以看出，其背后是一套有信用记录以及信用记录的清算构成的体系，而当美元与黄金脱钩后，货币成为了记账货币，那么信用卡，支付宝，区块链等都有记账货币的特点。 去中心化记账如下两个难题，而区块链通过构造一个以竞争-记账-奖励为核心的经济系统，解决了去中心化记账的问题。 账本数据的存储必须是去中心化的 记账行为必须是去中心化的 只有在去中心化的结构下共识才是问题，而区块链的共识就是工作量证明。 去中心化和中心化并不是非此即彼的关系，而是相互依存结合的关系。 区块链由于价值的转移是通过脚本语言实现的，所以可以定义复杂的交易逻辑，从而实现智能合约，股权等更复杂的事情，这对于数字资产具有很大的意义 侧链实现链之间的价值转移。 区块链包括公有链，私有链和联盟链。 区块链和互联网都能一定程度的打破信息不对称的壁垒。区块链协议将会跟TCPIP协议一样，成为未来互联网的基础协议之一，并衍生出不同的层次。 区块链将带来挖矿，交易平台，钱包与支付，互联网金融，物联网，共享经济等方向带来机遇，区块链+是互联网+的升级版 区块链可以应用于众筹，，清算结算和审计，智能合约，版权与许可，公证与记录，保险行业，电子商务，医疗和政府等领域 行为指南 这本书用通俗的语言让你对区块链有一个简要的理解，包括底层技术和应用场景，也带出几个比价有用的资源： 比特币白皮书 以太坊白皮书 区块链大革命，魏然出品，很有深度，专栏文章都值得学习一下","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"我的能量词","date":"2019-01-07T23:30:29.000Z","path":"posts/成长记录/我的能量词/","text":"什么叫能量词 能量词是能够给与自己能量的语句，通过每天的重复抄写和朗读，从而达到改变自己潜意识，提升自己信心的目的。 能量词不需要一成不变，可以根据自身情况进行调整，但是当确定后一定要坚持足够长的时间，如果变化太频繁就很难进入潜意识。 我的能量词 我有能力管理自己的心智和生活，我要做自己的主人。 我能够做到积极主动，以终为始，要事第一，双赢思维，知彼解及，综合综效，不断更新。 我能够保持心态平和，不抱怨，微笑对待他人和自己。 我信守承诺，说到就一定做到，我必须完成制定的锻炼和读书目标，保持自律的生活，每天成长。 我清楚的知道我想要的结果是什么，我只做与目标一致的行为，我必须注重优先级，抓住一切机会去达到我的目标。 把控好全局，营造好环境，管理好精力，提升效率，踏踏实实做好今天该做的事情。 加油，通过积累，我一定会实现我的人生梦想，改变家族，成为一个心智成熟之人。","tags":[{"name":"个人成长","slug":"个人成长","permalink":"http://ruanxinyu.github.io/tags/个人成长/"}]},{"title":"我的2019年目标","date":"2019-01-07T23:30:29.000Z","path":"posts/成长记录/我的2019年目标/","text":"总体目标 运动：跑步350+公里；健身4000+分钟；冥想5000分钟 读书：阅读150+本书并输出读书笔记；整理并输出5+个得到专栏课程 修订记录 为什么会修订目标呢？ 答：修订的目的是为了更好的达到目标，只有在实践中不断调整才能更好的与自己融合，而且个人认知也在不断的升级，只要核心的目标不变，那么就可以不断的优化调整。 第1次修订：2019-02-03 当前已经坚持四周，发现一些问题，有必要对目标做一次调整，逐步优化： 跑步修订为每天一次，通过控制距离而不是频率来调节膝盖受伤的问题，避免选择困难，同时为了更好的利用跑步过程中的多巴胺 健身目标做更细致的分解，详细分析执行细节 冥想目标从3500分钟增加为5000分钟，同时补充执行细节 将确定的得到课程为改为5+个专题，不限制死课程内容，因为总是有新的课程出来。去除得到听书的目标，因为得到听书对我来说是泛读，暂不输出笔记，重点放在读书笔记上 得到课程处理模式采用整块时间集中输出，而不是安排到每一天 运动目标分解 跑步 目标： 跑步350+公里 意义： 提升身体素质，促进保持良好的心理状态 如何安排跑步的频率？ 如果平均每次跑4公里，需要跑88次，一个月至少需要跑9次，即至少每3天一次: 第一个月采用隔一天跑一次的策略，降低进入难度。后续每天跑一次，从而减少选择障碍，避免找借口。重点是每天跑步都可以调节自己的心态，这是一个正循环的开始。 允许某一天没有跑步，调整好心态，接受自己，然后继续坚持。重点在于积累，而不是一天的得与失。 如果膝盖受伤了怎么办？ 原则是先预防，后恢复： 要防止膝盖受伤，前期里程一定控制住，至少连续两个月限制在4公里以内，相信循序渐进，也相信积累的力量。后续每天跑，可以参杂着1公里进行动态调节，策略是通过距离而不是频次来调节 如果膝盖确实受伤了，首先，连续一周将距离降为1公里，然后加大跑前和跑后的拉伸力度，同时加强跑步的核心训练，观察效果。原则是该跑还是继续跑，不用纠结是健康重要还是跑步重要的问题，控制好策略健康就不会出问题，不要找借口。 是早晨跑还是晚上跑？ 早晨和晚上都可以跑，也就是说一天有两次机会。但是做一个小的调整，不以具体时间来区分当天，而是前一天的晚上和当天的早晨算做当天的跑步，因为这两个时间段对于我来说是连续的，更便于安排。那么这就意味着有的时候一天早晚会跑两次，有时一整天都没有跑。要接受这种情况。这种调整的好处是： 早晨的精力是最好的，这样宝贵的时间应该花在更多需要脑力的活动上，比如看书写笔记，晚上状态不好，恰好可以借跑步产生产生多巴胺 下班后精力和心态都消耗的差不多了，再加上加班，请朋友吃饭等各种事情，不确定性更大，如果早晨因为没有起来或者下雨没有跑，那么很容易造成无法完成当天的跑步任务 优先保证晚上跑步，可以反向的促进我更好的提前安排一天的工作项从而保证晚上的时间 晚上跑步可以更好的反思自己今天的所作所为 因为特殊原因，当天没有跑步怎么办？ 接受现实，调整心态，从现在重新做起出去跑，不要纠结于已经发生的事情，继续坚持才是最正确的选择。要接受不完美，相信积累的作用，从整体看，而不要陷入细节。 通过2组深蹲，每组30个；2组开合跳，每组150个来替代，这两个动作不受场地的限制，即使出差都能做，没有借口了吧，小样 如果晚上太晚了，去跑步的话影响睡觉怎么办？ 确认是否超过10:30，如果早于10:30，则坚持今天跑，否则明天再跑；当然如果明天早晨有雨，那么今晚多晚都得去跑，一次跑太晚不会对健康有多大影响，所以不用又开始纠结健康和跑步哪个更重要的问题。 跑到一半的时候不想跑了怎么办？ 如果是膝盖问题，允许跑一公里就停止，否则必须跑够2.5公里，这是底线，超过之后可以选择休息。 天气太冷怎么办？ 提前买适合天冷的服装，以避免天冷成为借口 出差怎么办？ 原则是跑步不能停。如果晚上下班早建议去一个附近的公园跑，边玩边跑；如果晚上下班晚或者是早晨，则在住的附近跑。 晚上吃饭太饱，不适合跑步怎么办？ 原则是是否已经饭后一小时。如果已经饭后一小时，并且没有超过10:30，则继续跑，否则明早跑。需要提前安排好每天的事物防止这种事情发生，比如吃七分饱，比如先吃饭再加班。 跑前不想热身，跑后不想拉伸怎么办？ 原则是跑前必须拉伸热身，跑后可以不拉伸，但是必须做两组靠墙小腿后侧拉伸 健身 目标： 健身4000+分钟 意义： 跑步更主要用于产生多巴胺保持积极的状态，而健身则是针对于自身的职业和身体状况做定向的加强和调整，主要包括跑步拉伸，腰部，腹部，颈部 如何选择keep中的运动？ 健身的目的是为了健康，所以必须放弃的项目有：瑜伽，俯卧撑，平板支撑。 聚焦于：基础拉伸，腰部，腹部，手臂，颈部，膝部。优先保证基础拉伸，腰部，腹部。 开合跳用于激活早起的身体，跑前热身用于防止跑步受伤，小飞燕用于腰部力量，卷腹用于腹部减脂和腹肌，弹力绳用于手臂力量。 如何安排健身频率？ 健身4000+分钟，意味着每个月400+分钟，每周100分钟，每天15分钟，一组最基础的运动组合（拉伸、开合跳、小飞燕和卷腹）也就12分钟，如果每天再加上跑前热身的8分钟，基本也就够了。所以每天一组基础训练是必须的，可以根据实际情况调整开合跳、小飞燕和卷腹的时长。 如何安排健身时间？ 早起一组运动包括：开合跳，小飞燕，卷腹，拉伸。控制在15分钟内搞定，快速激活身体，不要拖长战线，否则很容易做思想斗争浪费意志力。 中午一组开合跳，激活一下身体，否则饭后看书容易犯困 晚上弹力绳（暂时非必选） 开合跳，小飞燕，卷腹的演进路径是什么样的？ 开合跳每一个月一次调整，每次调整增加50个；小飞燕每两周一次调整，每次增加30秒；卷腹每2周调整一次，每次增加5个； 训练到一定程度后想更换训练项目怎么办？ 每个训练周期为4周，4周之后重新评估，不允许临时更换，否则总是在做无谓的犹豫，健身是个积累的过程，先好好积累。 早晨没有按点起床，时间来不及怎么办？ 开合跳，小飞燕和卷腹必须完成，其他的除非迟到，否则必须完成。运动优先级高于洗漱，高于早饭。如果仍旧来不及，中午不睡觉补回来。 晚上外出，遇到兴奋事情，和别人聊天等太晚，怎么办？ 调整好心态，安抚好别人，做好自己。如果早晨和中午没有完成，则不管多晚，必须完成，不用纠结于健康和睡觉，偶尔一次不会出健康问题。更重要的是要提前预知到这种情况，然后在早晨和中午先把运动搞定，而不是最后将自己置于困境。 出差没有瑜伽垫怎么办？ 开合跳，小飞燕，卷腹必须完成，因为可以不依赖于瑜伽垫。拉伸通过肩颈放松来替代。 冥想 目标： 冥想5000分钟 意义： 冥想是心态上的锻炼，观察自己，认识自己，以达到平和的心态。冥想可以很好的疏解压力，提升专注力 如何安排冥想频率？ 冥想5000分钟意味着每个月500分钟，每周125分钟，每天18分钟，每天至少2组 什么时候做冥想？ 早晨一组，晚上一组。晚上睡觉前是最好的冥想时间，早晨起床不要马上做，可以上班前做，否则会重新激起睡意，早晨的阅读和笔记效率会大打折扣。所有感觉情绪不佳或精力不足时均可以通过冥想恢复一下，典型的是晚上饭后。 如果早晨没早起，时间不够怎么办？ 优先保证开合跳，小飞燕，卷腹，因为这三个耗时很短，但是冥想的优先级比早饭和梳洗的优先级高。如果真没有时间冥想可以先不做，可以挪到中午或者傍晚。其实重点在于早起啊，怎么能允许早晨没起来呢？没起来会打乱很多事情，然后会耗费很大的精力来重新协调。事情都尽量在固定的时间点完成，这样才能让身体记住，成为习惯。 厌倦了同一个冥想课程怎么半？ 周期为两个月，两个月后可以重新评估。冥想的作用是什么，如果这点心态都搞不定，那还冥想个毛。 冥想容易睡着怎么办？ 绝对不允许躺着冥想，其次冥想过程中挺直腰背，另外，跟着节奏走，注意聆听。如果真坐着睡着了，那就接受，可以尝试睁着眼，仰着头。 别人用异样的眼光看待你的冥想怎么办？ 我知道我想要的是什么，我在做与我目标一致的行为，所以做好自己就行。别人也许没有体会过冥想的益处，所以大家看法都没有错，不要想着去改变别人。 读书目标分解 读书笔记 目标： 阅读150+本书并输出读书笔记 意义： 提升认知能力，建立多元思维模型，输出并提升个人品牌和影响力 如何安排读书时间？ 阅读以周为检查维度，即每周保证4本书的量。150本书，每个月15本，意味着每2天1本，还需要输出读书笔记，一本书泛读30分钟，精度每小时50页则平均一本书4-5小时，读书笔记2-3小时，意味着每天需要花费4个小时。如果要保证每天4小时，那么抗干扰能力会非常弱，容易引起情绪上的问题，而且每周还要预留时间在得到专题上，以周为维度可以更充分的利用周末的时间。 读书笔记尽量在早晨和中午写，中午午休时间压缩到15-20分钟，必须早起，晚上睡前也需要阅读。 精神状态不行，看不进去怎么办？ 冥想或运动调整心态之后继续，或者站着看，调整好心态，同时不要因为速度而影响心情 早晨起床后犯困怎么办？ 开合跳等激活身体的运动必须做，然后站着看书，如果确实因为睡太晚而提不起精神，那么就写读书笔记，或者洗个热水澡之后再看。 选择纸质的书还是电子版的？ 根据场景选择，在住处使用纸质书，在公司或者路上使用电子书，先不考虑墨水屏。外出时一定带一本纸质书 新发现一本特别想看的书怎么办？ 每周总结本周的进度时同时确定下周的阅读书单，选择6本书，3本纸质书3本电子书，如果期间发现新的好书，可以先购买，花最多30分钟进行泛读，但是不允许中途换书单。本周的书单已经确定，那就不要朝三暮四影响自己。 如何输出读书笔记？ 采取阶梯模型，前50篇不用在意输出质量，不用画思维导图，主要集中于内容的摘取，先输出积累经验，后续再重新评估制定策略。 如何提升效率？ 1. 提高阅读速度； 2. 训练金字塔思维能力； 3. 运用测试，刻意练习提取能力 如何追踪读书进度？ 每周统计进度，并对读书的书籍和笔记规整到表格，给自己一个直观的认知。 得到专题 目标： 整理并输出5+个得到专栏课程 意义： 体系化学习，提升专业能力 如何安排时间？ 每周安排一天时间，停止阅读内容，专门处理得到专题 得到专栏的优先级是什么？ 目前的优先级是：梁宁产品30讲，30天认知训练营2019。后续再重新评估优先级","tags":[{"name":"个人成长","slug":"个人成长","permalink":"http://ruanxinyu.github.io/tags/个人成长/"}]},{"title":"002：写作是最好的自我投资","date":"2018-12-26T04:35:37.000Z","path":"posts/读书笔记/002-写作是最好的自我投资/","text":"概述及导图 本书阐述了写作在互联网时代的红利，分析了大家不愿意动笔的原因与解决方式。结合屏读的特点该书阅读所需要的思维方式，然后逐步分析文章的标题，结构，行文，写故事等方面的技巧，最后结合职场行文、新媒体写作和爆款文来实例进一步说明前文的观点。 内容剖析 在未来社会，最重要的资产是影响力，而构成影响力的最好两种方式是演讲和写作。 写作是一种更大范围的公开表达。会表达的人是这个时代最大的红利收获者。工资代表你的过去，品牌代表你的未来。 写作可以消化知识，提升思维，建立品牌，是一个一举多得的事情。写作需要刻意练习，需要有大量的输入，保持对社会的敏感度。 写作要克服完美主义，先行动写起来，一次性写完，不要马上回头修改，保持一段时间再修改，根据问题列表来优化文章内容，可以先模仿后创新，建立里程碑，做好预期。 屏读的特点是：速度快，频次高，碎片化。读者越来越没有耐心，兴奋点越来越高，吃鸡游戏会火也有类似的原因。 写作需要有：用户思维、产品思维和社交思维。站在读者的角度思考他需要什么，阅读场景是什么，属于倾听逻辑，如何产生行动转化和分享冲动。 标题 好的标题的四个特点：引发共鸣，制造悬念，引发议论，颠覆认知。 如何写好标题呢：观察并分析，模仿并套用，重视市场的反馈 行文节奏 写作之难在于把网状的思考，用树状的结构，体现在线性展开的语句中。讲故事，设悬念，给代入，有反转。 讲故事，而不是讲道理，故事结尾通过金句。 设置悬念则需要设置锚点。 代入感首先制造一个读者熟悉的问题，吸引注意力，然后顺着对方的意愿解释原因，最后夹带自己的私货给出观点和对策。 写故事 写自己的故事是获取信任的捷径，可以把自己的成绩装入到你的成长故事。 情感真实，克制表达，相信市场的反馈。 逻辑框架 论据要充分，禁用模糊多义的语言，复杂的事情简单说，克制情绪。 两种方式可以提升逻辑性：金字塔原理和5W1H 职场文章 职场干货文的写作，是通过持续的专业输出来争夺职场话语权的方法。 选题，帮助读者解决什么问题 界定问题的边界，把握核心问题，一次解决一个问题，而不要泛泛而谈 SWOT方式研究分析，如何从深度，角度，广度和速度上分析该主题 问题或结论先行，起步阶段切入点要小 学会对标 采用金字塔模式进行输出 新媒体 新媒体不是一个行业，而是一种工具。竞争是高效率淘汰低效率的过程。比传播更重要的是沉淀用户。 万能框架：亮观点-&gt;说现象-&gt;作分析-&gt;下结论 写作问题列表 在写文章和修改文章时我们以问题进行驱动，可以尝试着通过如下的问题来对文章进行优化： 你想传达的内容是什么，要解决什么问题，受众是谁？ 你的表述是否简单精炼，是否可以进一步简洁？ 是否可以通过故事的方式讲述，是否可以营造画面感？ 这段文字是不是有必要存在，存在的目的是什么？ 文章的结构是什么？论据是否充分？ 文章标题有没有吸引力？ 结尾是否有金句？","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"001：如何阅读一本书","date":"2018-12-16T15:44:26.000Z","path":"posts/读书笔记/001-如何阅读一本书/","text":"概述及导图 本书阐述了阅读的目标，将阅读分为基础阅读、检视阅读、分析阅读和主题阅读4个递进层次，并详细介绍了不同阅读层次的目标、规则以及所需要关注的问题点，同时分析了阅读每种类型书籍所需要注意的不同点。 内容剖析 主动阅读，而不是被动的接受信息，主动的阅读就是让一本书向你既有的理解力做挑战，不要以为读得多就是读得好。 阅读的目标有三个：1.获得资讯， 2. 为了娱乐， 3. 求得理解。而学习指的是理解更多的事情，而不是记住更多的资讯。 阅读分为4分层次：基础阅读、检视阅读、分析阅读和主题阅读。这四个层次不是相互独立的，是相互递进的，高的层次包含低层次的特性。 我们都具有基础阅读的能力，但是从高中之后阅读能力就没有进一步培养，我们需要更进一步的成为真正有能力的阅读者。 检视阅读 检视阅读包含两种：1. 有系统的粗读和略读， 2. 粗浅的阅读。检视阅读我们要回答如下几个问题： 这是什么样一本书 整本书谈论的是什么 作者是借着怎样的整体框架来发展他的观点和陈述他对这个主题的理解的 有系统的粗读和略读可以通过如下方式完成，但是建议耗时不要超过15分钟： 先看书名页，有序就先看序 研究目录页 检阅一下索引，如果有的话 读一下出版者的介绍 挑选几个跟主题相关的篇章浏览（注意开头和结尾的摘要说明） 随便翻翻书的内容，念一两段，有时候连续读几页，但不要太多 粗浅的阅读有一个规则：头一次面对一本难读的书的时候，从头到尾先读一遍，碰到不懂的地方不要停下来查询和思索。 阅读速度是可以提升的，最简单的方式就是通过手指防止视觉的逗留和倒退。但是针对不同书籍的不同内容，阅读速度是不同的，而不是一味的求快。检视阅读是一种训练有素的快速阅读。 主动阅读 如何成为主动阅读的核心是：提出问题，在阅读的过程中尽可能找到答案 整体来说，这本书到底在谈些什么，核心主题和其从属的关键议题是什么 作者细部说了什么，怎么说的，找出主要的想法，声明和论点 这本书是否有道理，是全部有道理还是部分有道理 这本书跟你有什么关系 如果你知道作者在说什么，但是却说不出来，那么通常是你其实并不知道自己在想些什么。 做笔记是不可或缺的，可以采用三种做笔记的方式帮助思考： 结构笔记： 重点在于全书的架构，而不是内容 概念笔记： 关注于核心概念 辨证笔记： 针对不同场景进行辨证 分析阅读 第一阶段：找出一本书在谈些什么规则 依照书的种类与主题来分类 使用最简洁的文字说明整本书在谈论些什么 将主要部分按照顺序与关联性列举出来。将全书的大纲列举出来，并将各个部分的大纲也列出来 确定作者想要解决的问题 第二阶段：诠释一本书的内容规则 诠释作者的关键字，与他达成共识 由最重要的句子中，抓住作者的重要主旨 知道作者的论述是什么，从内容中找出相关的句子，再重新架构出来 确定作者已经解决了哪些问题，还有哪些是没有解决的，再判断哪些是作者知道他没解决的问题 第三阶段：像是沟通知识一样的评价一本书的规则 A. 智慧礼节的一般规则 除非你已经完成大纲框架，也能诠释本书了，否则不要轻易评判（在你说出“我读懂了”之前，不要说你同意，不同意或暂缓评论） 不要争强好胜，非辨到底不可 在说出评论之前，你要能证明自己区分得出真正的知识与个人观点的不同 B. 批评观点的特别标准 证明作者知识不足 证明作者知识错误 证明作者不合逻辑 证明作者的分析和理由不完整 第一阶段 规则1：确定是哪一种类型的书籍，种类与主题分类 规则2：使用最简短的语言叙述整本书的内容 规则3：列举重要章节，梳理整体框架（金字塔原理） 规则4：找出作者在问和想要解决的问题 可以分为实用性和理论性作品，而理论作品可以分为历史、科学和哲学。 理论性的作品是在教你这是什么，实用性的作品在教你如何去做你想要做的事情。让知识变得实用，就一定有操作规则，我们一定要想做些什么，应该怎么利用它。 如果一本理论的书所强调的内容超乎你日常、例行、正常生活的经验，那就是科学的书，否则就是一本哲学的书。可以不准确的说，科学是以实验为基础，而哲学家只是坐在椅子上的思考者。 我们可以通过金字塔原理为一本书拟大纲，而只有经过了这一步才能更好的总结出全书的重点摘要。 实用性问题： 有哪些结果可以选择？应该采取什么样的手段才能获得某种结果？要达到某个目的，应该采取哪种行动？以什么顺序？在这些条件下，什么事是对的，或者才会更好，而不是更糟？在什么样的条件下，这样做会比那样做好一些？ 理论性问题： 某件事存在吗？是什么样的事？发生的原因是什么？或是在什么样的情况下存在？或为什么有这件事的存在？这件事的目的是什么？造成的影响是什么？特性及特征是什么？与其他类似事件，或不相同事件的关联是什么？这件事是如何运行的？ 第二阶段 规则5：找出关键字，与作者达成共识 规则6：从重要的句子中抓出作者重要的主旨 规则7：找出论述，重新架构前因后果 规则8：确定作者已经解决了哪些问题，哪些没有解决，哪些无法解决 作者沟通的主要核心是他所下的肯定与否定的判断，以及他为什么这么做的理由。 一个叙述是从某一处开始，经过某处，再达到某处的，那就是思想的演变转移。 “用你自己的话来说”是测验你懂不懂一个句子主旨的最佳方法。同时看你能不能举一个自己所经历过的主旨所形容的经验，即举例。 找出论据的三点小建议： 要记住所有论述都包含了一些声明 要区别归纳法和演绎法两种论述的不同之处 找出作者认为哪些事情是假设，哪些是能证实的或者有根据的，以及哪些是不需要证明的自明之理 第三阶段 规则9：在你说出“我读懂了”之前，不要说你同意，不同意或暂缓评论 规则10：不要争强好胜，非辨到底不可 规则11：在说出评论之前，你要能证明自己区分得出真正的知识与个人观点的不同 必须能够评论，提出批评，才算真正完成了主动阅读。同意或者不同意作者的说法都需要花费心力来判断，评判之前需要有理论基础。 当读者不只是盲目的跟从作者的论点，还能和作者的论点针锋相对时，他最后才能提出同意或者反对的有意义的评论。 一个读得很广泛却不精的人，与其值得赞美，不如值得同情。 读者也可以是伟大的读者，因为他们精通自己所阅读的书，他们的程度就可以跟作者相匹敌，他们就有权称作权威人士 主题阅读 第一阶段：观察研究范围，主题阅读的准备阶段 设计一份实验性的书单 使用检视阅读浏览书目上所有的书，确定哪些跟你的主题相关，并就你的主题建立起清楚的概念 第二阶段：阅读所有第一阶段收集到的书 找到相关章节：在主题阅读中，你及你关心的主题才是基本的重点，而不是你阅读的书，你的目标是找出书中与你的主题相关的章节 带引作者与你达成共识：根据主题创造出一套中立的词汇，无论作者是否实际用刀这些词汇，所有的作者或者至少绝大部分的作者都可以用这套词汇来诠释 厘清问题：找出作者的关键句子，从中逐步了解作者的主旨，我们也得建立起一组不偏不倚的主旨，列出一些可以把我们的问题说的很明白的问题，然后让那些作者来回答这些问题 界定主要及次要的议题：将作者针对各个问题的不同意见整理陈列在各个议题旁，你要记住，各个作者之间或之中，不见得一定存在着某个议题，有时候，你需要针对一些不是作者主要关心范围的事情，吧他的观点解读，才能构出这种议题 分析讨论：这些问题仔细整理出来，并按照顺序排列，以突显主题。比较有共通的议题，要放在比较没有共通的议题之前，各个议题之间的关系也要清楚的界定出来 主题阅读与分析阅读最大的不同在于视角不同，分析阅读以作者的思路进行阅读，而主题阅读是以自己的问题为主导阅读 如何阅读实用型的书 任何实用性的书都不能解决该书所关心的实际问题，实际问题只能靠行动。因此读者一定要加上一点自己的想法，才能根据自己的状态相结合运用到实际状态中。 实用型的书一种是对规则的描述，一种是阐述形成规则的原理。理论性的原则会归纳出出色的形式规则。 在平路一本实用型的书时，所有的事都与结果及目标有关。我们需要问自己几个问题：1. 作者的目的是什么，2. 他建议用什么样的方法达到这个目的，3. 这与我有何干。 如果我们真的接受了作者的观点，那么我们没有理由不采取行动。 行为指南 阅读速度是需要提升的，但是需要注意在不同的场合使用不同的速度 阅读一本书之前话25分钟完成检视阅读 以问题来驱动阅读，以理解、复述和评论为目标","tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"http://ruanxinyu.github.io/tags/读书笔记/"}]},{"title":"博客操作说明","date":"2018-10-20T09:46:50.000Z","path":"posts/博客/博客操作说明/","text":"如何配置博客导航栏 编辑source/_data/menu.yml文件内容即可，目前仅支持两级菜单。 如何添加书签 编辑source/_data/bookmarks.yml文件内容即可。 如何向收集箱中添加内容 编辑source/pages/inbox/index.md文件内容即可。 如何决定文章哪些内容自动收录到速查表 在文章的元数据中添加questions: 2元数据，其中2表示2级标题，如果向收集123级标题则可以设置为questions: 123 如何添加项目 编辑source/_data/projects.json文件内容，然后在source/_data/menu.yml中添加对应的菜单项即可 如何通过Listary快速搜素博客内容 设置Listary的关键字，然后即可通过Listary实现快速搜索：","tags":[{"name":"博客","slug":"博客","permalink":"http://ruanxinyu.github.io/tags/博客/"}]},{"title":"【香帅的北大金融学课】第001周学习总结","date":"2018-10-08T05:06:01.000Z","path":"posts/香帅的北大金融学课/【香帅的北大金融学课】第001周学习总结/","text":"本周学习内容PPT =======点击下载PPT======= 一万美金赠品里的秘密 语句摘录 买一辆车，送一张面值１万美金的30年期的美国国债。按照90年代中期平均8％左右的国债利率算，折算到30年后，这个面值１万美金的债券只剩下994美金。 复利在金钱的升值和贬值上效果是类似的，通货膨胀会很大程度稀释我们的财富，我们需要防止自身财富的贬值。 货币的时间价值，在金融里，时间就是金钱。货币的时间价值在金融里边是可以度量，计算，和用来支付的。 财富数值的变化，其实是金融工具把我们拥有的相同时间（未来十年）进行了深度的加工，都化成了完完全全不一样的时间价值。 金融不仅是对时间做加工，也是对风险的加工，因为价值在未来存在不确定性，而这种不确定性衍生出很多金融产品。 你可以将“时间”看作一种原料，这些金融工具就干了一件什么事呢？它把这种时间维度里面的风险全部给曝露了出来，然后对这种原料进行加工，做成不同的产品。换一句话说，用金融术语来说，金融就是为时间定价，而我们这些购买金融产品，做出金融决策的人，就是购买了不同的未来价值。 金融技术就像我们建造的时光机器……它拓展了我们想象和计算未来的能力，然后塑造了一个关于可量化、可交易的时间维度，让我们人类越来越变成时间的生物。 划重点 时间是有价值的。 金融工具对我们的时间进行了深度的加工，将我们拥有的未来转化成了完全不一样的价值。 从这个角度上看，金融就是一个一个的时光机器，它帮助我们将时间转化成财富，不同的金融工具、金融决策会改变个体的命运。 课后习题 想一想，在过去的十年里面，你做过什么样的金融决策吗？再回想一下，这些金融决策在过去的十年里面，是不是改变了你的时间价值呢？ 父母10年前在银行存的钱，虽然存在一定的利息收入，但是因为利息太低，远远跟不上通货膨胀，所以造成财富贬值，每每想起来父母辛辛苦苦赚的钱就这样被稀释就很心疼他们。 课程原文 南北战争中的第二战场 语句摘录 资金的集聚，越是这些伟大的事物，越是要求大资金的快速集聚和有效配置，而这种功能，只有金融能够实现。 南北战争的胜负手居然是“债券发行”，北方买债券是一个“爱国+投资”的双赢举动：一方面你可以享受国债6%的利息，而且利息是免税的，另一方面，只要北方取得胜利，这个债券就会大涨价，你可以分享国家的胜利果实。南方为了筹集战争资金，他们在一年内印刷发行了17亿的钞票，这些钞票“哗”地涌到了南方的市场上，南方物价飞涨，整个南方的经济就迅速地崩溃了。 北方这到底是一个骗局还是一个双赢呢，为何银行家不相信这一套，但是普通大众却相信呢？感觉银行家与普通大众对风险的认识不一样，另外金额也不一样。 国债将国家与民众的利益相关联，但是印钞票却是直接剥夺，民众直观官爵没有任何好处，对政府的信任丢失 纽约繁荣的背后也是金融“资金集聚”的力量，采取分期发债的方式，可以分期得到资金，可以通过收益刺激投资者的热情。 也体现了目标的分解，不要完美主义，非得一口一个胖子 划重点 南北战争中，北方取胜的关键在于资金集聚能力，北方的债券发行功不可没； 2. 纽约的崛起得益于伊利运河，而伊利运河这种大工程是主要靠债券发行集聚的资金； 3. 银行、债券、股票，所有的金融工具都在帮助人类将散落的、点状的资金累积起来，投入到最需要资金的地方。个人、企业、战争、一个城市的兴衰，背后其实都是金融的力量，它帮助我们突破了时间和地域的限制，进行快速有效的资金积聚、从而实现了目标。 课后习题 试着从你身边的朋友里面，找出那个资金聚集能力最强的人，然后总结一下，他利用了哪些金融工具？他具有一些怎样的特征呢？ 膜拜单车等共享单车的押金就是聚集资金的方式，安居客等长租的租房贷款就是另外一种基金聚集的方式 课程原文 现代人如何抵御风险 语句摘录 古代社会主要依赖于家庭、宗族来实现风险共担，首先与血缘和地域。 金融是迄今人类社会能最有效实现跨区域、跨时间、大规模“风险分担”的一个机制: 1．保险能够帮助个体将风险转移、分散到社会群体中间，提高了我们人类的独立性和安全感； 1．股票的“利益共享，风险共担”的功能帮助荷兰开辟了强大的海上帝国； 1．风投和创投分担了创业创新的风险，拓展了人类经济活动的范围和能力。 课后习题 假设说你现在也想创业，打算开个公司，在融资方式上，你有两种选择，第一种是到处借钱或者拿抵押品到银行贷一笔钱出来，第二种是找几个志同道合的人组成一个合伙公司，去寻求风投和创投的帮助。这两种方法你愿意选哪一个？哪一个对你更加现实？这两种方法对你未来的生产、经营会产生什么样的影响？ 第一种是债权融资，期限短，金额小，还款时压力比较大；第二种时股权融资，没有还款压力。所以需要看创业的内容，所需的资金，规模，借债时长和盈利模式等，没有哪一种模式更好 课程原文 构建完整的金融世界观 语句摘录 金融的正面效果： 金融能帮我们加工时间，集聚资金和分散风险。这三种能力，被我们称为“金融三大定理”：时间 资金 风险。 金融的负面效果： 金融更容易造成“穷者越穷，富者越富”的马太效应，同时容易利用信息的不对称性来套利存在道德风险。 金融地图： 金融机构： 金融中介机构 银行 投资银行 基金 金融工具： 股票 债券 金融衍生产品 金融交易制度 投资者决策： 资产配置 证券选择 非理性决策的一系列内容 公司决策： 筹资 分红 股权激励 兼并收购压力 金融的监管 创新和危机： 监管 创新 危机 科技金融： 互联网金融 区块链 比特币 数字银行 运用金融思维，你不但应该在投资上做一个价值投资者，更要在人生上做一个价值投资者。 划重点 我们的金融世界观的框架包括两个维度，一方面要认识到金融的能力，另一方面也要认识到金融的破坏力； 2. 构建金融世界观是为了作出正确的金融决策，这就需要我们有扎实的金融基础知识作为支撑，我给出了一张全年的学习地图，你可以按照这张图循序渐进地构筑你的金融世界观大厦。 课后习题 2007—2008年的全球金融危机后，人们对于金融投机客们的痛恨到达顶点，所有的媒体和政客都对金融体系提出了严厉的批评。比如前法国总统萨科奇就说：“金融体系本质上是一个不负责任的，不道德的体系。”前英国首相布莱尔也说：“金融体系偏离了本质，而且它也无法回归本真了。” 结合对这周课程的理解，如果让你点评萨科奇和布莱尔的话，你会怎么说？ 金融是一个工具，没有好坏属性，关键在于如何使用。但是金融知识必须要学，可以怀着一颗不作恶的心，但是也要能知道别人如何思考和运作以保护自己，就像一个优秀的侦探一样。 课程原文 本周问答：不同风险偏好的人该如何投资 语句摘录 最重要的是要建立一个自己的知识框架和思维方式，掌握事情背后的一般性规律，然后因地制宜、因时制宜地来安排你的人生。社会环境在变化，但是人性其实没有变过。你要在理解人性的基础上理解这些宏观环境的变化，才能够把握未来的趋势。 金融是一个风险-收益决策衡量的框架性思维，一个人要具有这种思维能力，才能保证在大的人生决策上，作出对的选择。它是一门对未来做资产配置的学问，它的一切都是基于对未来的计算、预测和分析。 喜欢追涨杀跌，跟着亲戚群里的三手、四手、五手的消息去炒股，吃了不少亏，始终在被市场“割韭菜”。 有些人是风险爱好者，一个典型的判断标准就是：他们从不后悔自己做过什么事，只会为没做什么事后悔。相对而言，他们就可以做一些高风险、高收益的投资。 另外一种人，他们对风险很厌恶，这种人的投资策略就应该是保守一点，应该多选债券、多买指数基金，做保守型、不激进的投资。 课程原文","tags":[{"name":"经济","slug":"经济","permalink":"http://ruanxinyu.github.io/tags/经济/"},{"name":"香帅的北大金融学课","slug":"香帅的北大金融学课","permalink":"http://ruanxinyu.github.io/tags/香帅的北大金融学课/"}]},{"title":"【香帅的北大金融学课】第002周学习总结","date":"2018-10-08T05:06:01.000Z","path":"posts/香帅的北大金融学课/【香帅的北大金融学课】第002周学习总结/","text":"本周学习内容PPT =======点击下载PPT======= 王的信用：中央货币财政体系 语句摘录 欧洲的金融市场产生于一个“小国林立、分封而治”的大背景。而中国的金融市场，是从一个中央集权的帝国内部演化出来的。 秦始皇为统一市场，因而统一了货币制度。汉武帝穷兵黩武，通过国有经济筹集经费和加强集权控制。 **中华帝国的金融是围绕着中央财政，自上而下的一个货币经济体系，我们就可以直接把它称为“中央货币财政体系”。**这种制度在生产力低下的情况下能够起到强大的动员能力，但是因为完全依赖于国家，民间信用意识很难培养起来。 存在即合理，只是说以前合理的现在不一定合理，所以分析现状也要追溯历史，这样才能看得更清楚 中国现代的金融市场是古代的继承，都是自上而下，为中央财政目标而实施的“顶层设计”。 最初A股市场的设立，它设立的目标是替国有企业解困。 中央控制可以集中资金发展基础建设，但是造成民间信用脆弱，民间理财需求被压抑。 留言区摘选** 吴军对行业变革的两点建议：1. 目标要超前，方法和认识要彻底更新；2. 做法上要渐进，反对一切推倒重来 高储蓄意味着高投资 划重点 国家掌控大量的金融资源，经济生活国有化，便于国家“集中力量办大事”。 2. 这种制度的缺点是民间信用脆弱。民间投融资需求得不到满足，所以造成了中国金融市场的很多乱象。 课后习题 中国老百姓特别喜欢储蓄，自古就喜欢把银元存在缸里、埋在地下。爷爷奶奶们都喜欢把钱放在床下，塞进抽屉柜深处。你觉得这种现象是因为中国人特别抠门吗？再想想山西票号最后为什么会受到洋行挤压而衰落，这中间有什么联系吗？ 每个人都会衡量利益关系，既然选择压箱底，那就一定是没有更好的途径，在法律不健全的情况下，产权不明确，予之在君，夺值在君，贫之在君，富之在君，民众缺少民间和官方的金融机构信任感。反过来看，现在钱放在银行里的钱不断在贬值，银行和国家的信任不是也在不断的流失吗？ 课程原文 分权制衡：银行货币信用体系 语句摘录 中世纪，朝圣者需要一个异地托管财物的体系，因为当时小国林立无法建立跨国异地财务托管体系，因此圣殿骑士团承担起这个指责，扮演着“银行”的角色，而且扮演了一个欧洲金融启蒙者的角色。 因为小国林立，相互制约，造成统治阶层也不敢违约，所以才建立起全民信用关系网络。之后一系列的金融业务，都延续了圣殿骑士团的金融遗产，在这个基础上，欧洲就逐渐形成了以“银行为中心”的、“分权制衡”下的信用体系，我把它称为欧洲的“银行货币信用体系”。 美国初期13个殖民地相互制约，经过南北战争后统一了市场和货币，结合了中华帝国“集中”和欧洲大陆“分权”的优越性。 欧美信用社会的形成，是由于欧洲分权制衡的形态所决定的。 划重点 中世纪之后的“圣殿骑士团”，从事财务托管、货币兑换、储蓄理财业务，扮演着银行的角色，奠定了欧洲的金融基础。 2. 骑士团衰落后，意大利银行业、荷兰证券业、英法银行业等其他信用机构兴起，逐渐形成以银行为中心的，分权制衡下的信用体系。 3. 美国具有与欧洲相似的政治分权制衡的性质，延续了欧洲的金融传统，所以成为世界上最发达的金融市场。 课后习题 大家都知道，中国现在的互联网支付行业特别发达，支付宝、微信简直有横扫全球的趋势。但是我们都知道，互联网支付是依赖于金融体系的，也依赖于互联网的一个技术，为什么在一个互联网落后，金融也不发达的地方，反而“长”出了全球最牛的互联网支付体系呢？ 社会逐步走向中产和消费，理财需求被压抑，并且现在法律逐步健全，因而支付宝等弥补了民间的信用缺失，同时银行存在一定的跨地域问题，纸币交易麻烦，刷卡支付不健全，而移动互联的普及大大增加了支付的便利性。 课程原文 金融市场上的二道贩子们 语句摘录 “信息不对称”正是金融市场上最核心的特征，因为金融做的是信用的交易，换句话说，金融市场上交易的是很难看得见、摸得着的东西。 我们中国叫“券商”，国外叫“投资银行”。投资银行或者券商在降低信息不对称，撮合金融市场交易的过程中间发挥的巨大作用。 说得好听点叫降低信息不对称促进市场交易，说得不好听点就是利用信息不对称赚钱 没有金融中介机构，金融市场是没有办法运行的，在金融市场这么一个天生具有信息不对称的地方，高度中介化是必然的趋势。 划重点 信息不对称是金融市场最重要的特征，因为金融市场交易的是看不见、摸不着的“未来”，是虚拟经济，所以消除信息不对称的“中介机构”非常重要。 2. 市场上有很多很多的金融中介机构、信息评级机构，还有银行、投资银行，这一切都是金融中介机构，它是我们金融市场上最重要的组成部分，因为它们降低了市场上的信息不对称，维持了我们这个市场的运行。 课后习题 现在很多人在说互联网技术改变了金融本质，比如 P2P, 就是 peer to peer (个人到个人)的借贷方。由于有了互联网技术，未来金融市场上完全可以“去中介化”，你认同这个说法吗？为什么？ 信息不对称是客观事实，所以永远无法去中介化，只是说中介变为了互联网公司而已，而互联网公司到底能不能做好信息的核查就是一个问题，因此存在较高的金融风险，这也是国家限制的原因吧。支付宝闪贷也是有大家平时的消费信用做担保的。 中介可以提高社会的协作效率，术业有专攻。 课程原文 个人资产配置的生命周期 语句摘录 实物资产是对抗资产贬值一个特别好多途径。 你赚钱能力越来越强了，也意味着这个时候是你风险承受能力最强的时候。 如果你赚的钱都用来还贷和消费了，那么其实你并没有什么风险承受能力的，这也就是为什么很多房奴不敢冒险的原因。 划重点 在青年的时候，我们应该加大实物资产的配置。 在壮年的时候要加大风险资产的配置，进行资产的多元化配置。 在老年的时候，要加大安全资产的配置，同时加大流动性资产的配置。 课后习题 你在资产配置上曾经走过什么弯路，然后掉入过什么坑，做过什么傻事？ 最大的弯路就是入门太晚，就是工作后存钱太少，没有学习理财，在大学也没有想过怎么去赚钱 课程原文 深度解析阿里金融帝国 语句摘录 虽然阿里巴巴从搭建互联网起家，但其本质上做的还是营销服务（阿里铁军）。但是到了B2B这个市场，当客户企业成长到一定规模以后可能就不需要阿里巴巴的中介服务了。客户企业能够打造自己的网站（或者其他信息渠道），组建自己的营销团队。所以，阿里巴巴的 B2B 业务增长有限。 这个瓶颈点分析的还是到位的。 2003年阿里转型C2C，快速形成C2C生态系统淘宝；2004年支付宝的诞生成就了C2C的市场信任；2008年推出专注于服务第三方品牌及零售商的天猫；2009年成立阿里云；2011年从香港退市完成订餐，音乐，地图等数字媒体及娱乐业务的拓展；2014年在纽交所上市。但是阿里在O2O（美团），物流（京东），社交（微信）都还存在欠缺。 快速转型通过C2C的大流量建立起平台，然后反过来反哺2B。在初期国内电子商务基础设施基本为零，这是一个蓝海市场，另外移动互联的时代更具有促进作用。 对于电子商务，信任是个大问题，所国外有发达的信用卡体系，而国内没有，所以给了阿里一个机会。在假货横行的时代，天猫一能拉进企业用户，二能提升用户的信任。 支付宝由原来的第三方担保需求，演化出来了第三方托管需求，于是虚拟账户出生了，因此具有强大的融资能力，跟金融相关的产品就应运而生。从业务中生长出来，又在生活场景和用户痛点夹缝中，逐渐丰满。 团队要定期审视外部环境，然后做新的尝试，去创新，对于个人又何尝不是这样，我想起了《谁动了我的奶酪》里的四个小鼠。 课程原文 本周问答：如何投资A股市场更明智 语句摘录 美国电商没有带动美国移动支付浪潮是因为美国的支付体系和信用体系已经很完善，不需要新的支付工具，这也是有历史根源。 中国储蓄高，从投资角度看，高储蓄意味着高投资，现在财富积累变多，逐步进入中产+消费的时候，理财需求将会日益增长。 不如说财富贬值以及投资可能带来的高收入的诱惑造成理财需求的日益增长呢 课程原文","tags":[{"name":"经济","slug":"经济","permalink":"http://ruanxinyu.github.io/tags/经济/"},{"name":"香帅的北大金融学课","slug":"香帅的北大金融学课","permalink":"http://ruanxinyu.github.io/tags/香帅的北大金融学课/"}]},{"title":"AngularJS学习记录-1","date":"2018-10-07T03:50:16.000Z","path":"posts/技术文档/AngularJS学习记录-1/","text":"前言 AngularJS的学习地址为：https://angular.cns/guide/quickstart ng命令介绍 安装@angular/cli: npm install -g @angular/cli 创建工程： ng new angular-tour-of-heroes 开启调试： ng serve --open 创建组件： ng generate component xxx 创建服务： ng generate service xxx 创建路由：ng generate module xxx --flat --module=app 创建类：ng generate class hero 核心知识 架构 Angular 的基本构造块是 NgModule，它为组件提供了编译的上下文环境。Angular包含一个根模块，可以包含其他模块，模块的加载是懒加载的。 组件定义视图，同时使用服务。组件和服务都是简单的类，这些类使用装饰器来标出它们的类型，并提供元数据以告知 Angular 该如何使用它们。 模板会把 HTML 和 Angular 的标记（markup）组合起来，这些标记可以在 HTML 元素显示出来之前修改它们。 模板中的指令会提供程序逻辑，而绑定标记会把你应用中的数据和 DOM 连接在一起。包含事件绑定和属性绑定，并且支持双星绑定和管道等功能。 对于与特定视图无关并希望跨组件共享的数据或逻辑，可以创建服务类。 服务类的定义通常紧跟在 “@Injectable” 装饰器之后。该装饰器提供的元数据可以让你的服务作为依赖被注入到客户组件中。 Angular 的 Router 模块提供了一个服务，它可以让你定义在应用的各个不同状态和视图层次结构之间导航时要使用的路径。如果路由器认为当前的应用状态需要某些特定的功能，而定义此功能的模块尚未加载，路由器就会按需惰性加载此模块。 模块 NgModule 是一个带有 @NgModule 装饰器的类。@NgModule 装饰器是一个函数，它接受一个元数据对象，该对象的属性用来描述这个模块。其中最重要的属性如下。 declarations（可声明对象表） —— 那些属于本 NgModule 的组件、指令、管道。 exports（导出表） —— 那些能在其它模块的组件模板中使用的可声明对象的子集。 imports（导入表） —— 那些导出了本模块中的组件模板所需的类的其它模块。 providers —— 本模块向全局服务中贡献的那些服务的创建器。 这些服务能被本应用中的任何部分使用。（你也可以在组件级别指定服务提供商，这通常是首选方式。） bootstrap —— 应用的主视图，称为根组件。它是应用中所有其它视图的宿主。只有根模块才应该设置这个 bootstrap 属性。 12345678910import &#123; NgModule &#125; from '@angular/core';import &#123; BrowserModule &#125; from '@angular/platform-browser';@NgModule(&#123; imports: [ BrowserModule ], providers: [ Logger ], declarations: [ AppComponent ], exports: [ AppComponent ], bootstrap: [ AppComponent ]&#125;)export class AppModule &#123; &#125; 组件 组件通过constructor来提供依赖注入，常见的元数据如下： **selector：**是一个 CSS 选择器，它会告诉 Angular，一旦在模板 HTML 中找到了这个选择器对应的标签，就创建并插入该组件的一个实例。 **templateUrl：**该组件的 HTML 模板文件相对于这个组件文件的地址。 providers: 是当前组件所需的依赖注入提供商的一个数组 1234567@Component(&#123; selector: 'app-hero-list', templateUrl: './hero-list.component.html', providers: [ HeroService ]&#125;)export class HeroListComponent implements OnInit &#123;&#125; 指令：结构型指令和属性型指令。 服务与依赖注入 服务是一个广义的概念，它包括应用所需的任何值、函数或特性。狭义的服务是一个明确定义了用途的类。它应该做一些具体的事，并做好。要把一个类定义为服务，就要用 @Injectable 装饰器来提供元数据，以便让 Angular 可以把它作为依赖注入到组件中。通过构造函数进行注入 Angular 把组件和服务区分开，以提高模块性和复用性。 通过把组件中和视图有关的功能与其他类型的处理分离开，你可以让组件类更加精简、高效。 理想情况下，组件的工作只管用户体验，而不用顾及其它。 它应该提供用于数据绑定的属性和方法，以便作为视图（由模板渲染）和应用逻辑（通常包含一些模型的概念）的中介者。 组件不应该定义任何诸如从服务器获取数据、验证用户输入或直接往控制台中写日志等工作。 而要把这些任务委托给各种服务。通过把各种处理任务定义到可注入的服务类中，你可以让它被任何组件使用。 通过在不同的环境中注入同一种服务的不同提供商，你还可以让你的应用更具适应性。 默认情况下，Angular CLI 的 ng generate service 命令会在 @Injectable 装饰器中提供元数据，把它注册到根注入器中。本教程就用这种方法注册了 HeroService 的提供商 当你使用特定的 NgModule 注册提供商时，该服务的同一个实例将会对该 NgModule 中的所有组件可用。要想在这一层注册，请用 @NgModule 装饰器中的 providers 属性 当你在组件级注册提供商时，你会为该组件的每一个新实例提供该服务的一个新实例。 要在组件级注册，就要在 @Component 元数据的 providers 属性中注册服务提供商 组件与模板 显示数据 你可以在两种地方存放组件模板。 你可以使用 template 属性把它定义为内联的，或者把模板定义在一个独立的 HTML 文件中， 再通过 @Component 装饰器中的 templateUrl 属性， 在组件元数据中把它链接到组件。 默认情况下，Angular CLI 生成组件时会带有模板文件，你可以通过参数覆盖它：ng generate component hero -it 显示属性。 *ngFor 是 Angular 的“迭代”指令 *ngIf 指令会根据一个布尔条件来显示或移除一个元素 模板语法 JavaScript 中那些具有或可能引发副作用的表达式是被禁止的，包括： 赋值 (=, +=, -=, ...) new 运算符 使用 ; 或 , 的链式表达式 自增和自减运算符：++ 和-- 和 JavaScript 语 法的其它显著不同包括： 不支持位运算 | 和 &amp; 具有新的模板表达式运算符，比如 |、?. 和 !。 表达式中的上下文变量是由模板变量、指令的上下文变量（如果有）和组件的成员叠加而成的。 如果你要引用的变量名存在于一个以上的命名空间中，那么，模板变量是最优先的，其次是指令的上下文变量，最后是组件的成员。 模板表达式不能引用全局命名空间中的任何东西，比如 window 或 document。它们也不能调用 console.log 或 Math.max。 它们只能引用表达式上下文中的成员。 模板表达式能成就或毁掉一个应用。请遵循下列指南：没有可见的副作用,执行迅速,非常简单,幂等性 模板语句用来响应由绑定目标（如 HTML 元素、组件或指令）触发的事件。 模板语句将在事件绑定一节看到，它出现在 = 号右侧的引号中，就像这样：(event)=“statement”。 绑定方式： 属性绑定：[target]=&quot;expression&quot; 事件绑定：(target)=&quot;statement&quot; 双向绑定：[(target)]=&quot;expression&quot; css类绑定：[class.special]=&quot;isSpecial&quot; 样式绑定：[style.color]=&quot;isSpecial ? 'red' : 'green'&quot; 在多数情况下，插值表达式是更方便的备选项。 实际上，在渲染视图之前，Angular 把这些插值表达式翻译成相应的属性绑定。 在新版的 Angular 中不需要那么多指令。 使用更强大、更富有表现力的 Angular 绑定系统，其实可以达到同样的效果。 外部组件应该只能绑定到组件的公共（允许绑定） API 上，Angular 要求你显式声明那些 API。 它让你可以自己决定哪些属性是可以被外部组件绑定的。进行数据绑定的属性都带有 @Input() 和 @Output() 装饰器。 好东西: Angular 的安全导航操作符?. 是一种流畅而便利的方式，用来保护出现在属性路径中 null 和 undefined 值。 下例中，当 currentHero 为空时，保护视图渲染器，让它免于失败。 非空断言操作符! 类型转换函数 $any 生命钩子 执行顺序 组件交互 https://angular.cn/guide/component-interaction 通过输入型绑定把数据从父组件传到子组件 通过 setter 截听输入属性值的变化 通过ngOnChanges()来截听输入属性值的变化 父组件监听子组件的事件 父组件与子组件通过本地变量互动 父组件调用@ViewChild() 父组件和子组件通过服务来通讯 组件样式 使用 :host 伪类选择器，用来选择组件宿主元素中的元素 使用 :host-context() 伪类选择器。它也以类似 :host() 形式使用。它在当前组件宿主元素的祖先节点中查找 CSS 类， 直到文档的根节点为止 可以在组件的 HTML 模板中写 &lt;link&gt; 标签 可以利用标准的 CSS @import 规则来把其它 CSS 文件导入到 CSS 文件中。 如果使用 CLI 进行构建，那么你可以用 sass、less 或 stylus 来编写样式，并使用相应的扩展名（.scss、.less、.styl）把它们指定到 @Component.styleUrls 元数据中。 表单 用户输入 https://angular.cn/guide/user-input 绑定到用户输入事件&lt;button (click)=&quot;onClickMe()&quot;&gt;Click me!&lt;/button&gt; 通过 $event 对象取得用户输入&lt;input (keyup)=&quot;onKey($event)&quot;&gt; 从一个模板引用变量中获得用户输入,在标识符前加上井号 (#) 就能声明一个模板引用变量，&lt;input #box (keyup)=&quot;0&quot;&gt; &lt;p&gt;&lt;/p&gt; 按键事件过滤（通过 key.enter）: &lt;input #box (keyup.enter)=&quot;onEnter(box.value)&quot;&gt; &lt;p&gt;&lt;/p&gt;","tags":[{"name":"学习记录","slug":"学习记录","permalink":"http://ruanxinyu.github.io/tags/学习记录/"}]},{"title":"基于SpringBoot+Mybatis开发Restful接口实现数据表的增删改查功能","date":"2018-10-06T07:29:04.000Z","path":"posts/技术文档/基于SpringBoot+Mybatis开发Restful接口实现数据表的增删改查功能/","text":"基础环境说明 本教程使用Maven管理依赖，使用IDEA进行开发，在开始之前，请按照下面教程安装好JDK和Mysql: JDK的安装请参考： Mysql的安装请参考： 本教程的代码地址为：https://github.com/RuanXinyu/springcloud-demo/tree/master/productionservice 初始化数据库 首先创建一个数据库和一个用户，并分配相应的权限： 1234567-- 创建数据库create database mall;-- 创建用户并分配权限，8.0版本需要采用该方式create user malluser@'%' identified by 'mall@123';grant all privileges on mall.* to 'malluser'@'%' with grant option;flush privileges; 然后在mall数据库中创建一张表： 1234567CREATE TABLE `mall`.`t_production` ( `uuid` CHAR(32) NOT NULL, `name` VARCHAR(128) NOT NULL, `price` DECIMAL(12) NOT NULL, `description` VARCHAR(4094) NULL, `create_time` DATETIME NOT NULL, PRIMARY KEY (`uuid`)); 通过IDEA生成基础代码 选择Spring Initializr来创建工程： 指定maven的GAV参数，我们组件名称叫productionservice，同时选择jar包启动的方式： Spring组件我们仅选择Web下的Web，SQL下的MySQL和Mybatis: 最后生成的代码目录结构如下： 使用MybatisGenerator生成代码 pom.xml 首先在pom文件中增加mybatis-generator-maven-plugin插件，如下所示: 12345678910&lt;plugin&gt; &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt; &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt; &lt;version&gt;1.3.7&lt;/version&gt; &lt;configuration&gt; &lt;configurationFile&gt;$&#123;basedir&#125;/src/main/resources/generator/mybatis_generator.xml&lt;/configurationFile&gt; &lt;overwrite&gt;true&lt;/overwrite&gt; &lt;verbose&gt;true&lt;/verbose&gt; &lt;/configuration&gt;&lt;/plugin&gt; mybatis_generator.xml 在src/main/resources/目录下创建generator文件夹，并创建mybatis_generator.xml文件 写入如下的内容： 1234567891011121314151617181920212223242526272829303132333435363738&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;!DOCTYPE generatorConfiguration PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\" \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\"&gt;&lt;generatorConfiguration&gt; &lt;!-- 数据库驱动:选择你的本地硬盘上面的数据库驱动包--&gt; &lt;classPathEntry location=\"D:\\.m2\\mysql\\mysql-connector-java\\5.1.47\\mysql-connector-java-5.1.47.jar\"/&gt; &lt;context id=\"DB2Tables\" targetRuntime=\"MyBatis3\"&gt; &lt;commentGenerator&gt; &lt;property name=\"suppressDate\" value=\"true\"/&gt; &lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt; &lt;property name=\"suppressAllComments\" value=\"true\"/&gt; &lt;/commentGenerator&gt; &lt;!--数据库链接URL，用户名、密码 --&gt; &lt;jdbcConnection driverClass=\"com.mysql.jdbc.Driver\" connectionURL=\"jdbc:mysql://127.0.0.1/mall\" userId=\"malluser\" password=\"mall@123\"&gt; &lt;/jdbcConnection&gt; &lt;javaTypeResolver&gt; &lt;property name=\"forceBigDecimals\" value=\"false\"/&gt; &lt;/javaTypeResolver&gt; &lt;!-- 生成模型的包名和位置--&gt; &lt;javaModelGenerator targetPackage=\"com.ruan.productionservice.model\" targetProject=\"src/main/java\"&gt; &lt;property name=\"enableSubPackages\" value=\"true\"/&gt; &lt;property name=\"trimStrings\" value=\"true\"/&gt; &lt;/javaModelGenerator&gt; &lt;!-- 生成映射文件的包名和位置--&gt; &lt;sqlMapGenerator targetPackage=\"com.ruan.productionservice.mapper\" targetProject=\"src/main/resources\"&gt; &lt;property name=\"enableSubPackages\" value=\"true\"/&gt; &lt;/sqlMapGenerator&gt; &lt;!-- 生成DAO的包名和位置--&gt; &lt;javaClientGenerator type=\"XMLMAPPER\" targetPackage=\"com.ruan.productionservice.mapper\" targetProject=\"src/main/java\"&gt; &lt;property name=\"enableSubPackages\" value=\"true\"/&gt; &lt;/javaClientGenerator&gt; &lt;!-- 要生成的表 tableName是数据库中的表名或视图名 domainObjectName是实体类名--&gt; &lt;table tableName=\"t_production\" domainObjectName=\"Production\" enableCountByExample=\"false\" enableUpdateByExample=\"false\" enableDeleteByExample=\"false\" enableSelectByExample=\"false\" selectByExampleQueryId=\"false\"/&gt; &lt;/context&gt;&lt;/generatorConfiguration&gt; 做几点说明： &lt;classPathEntry location=&quot;D:\\.m2\\mysql\\mysql-connector-java\\5.1.47\\mysql-connector-java-5.1.47.jar&quot;/&gt;中的路径可以从maven的缓存目录中找到 &lt;jdbcConnection driverClass=&quot;com.mysql.jdbc.Driver&quot; connectionURL=&quot;jdbc:mysql://127.0.0.1/mall&quot; userId=&quot;malluser&quot; password=&quot;mall@123&quot;&gt;需要正确填写数据库的数据库名称，用户名，密码和表名称 targetPackage=要修改为对应的包路径 &lt;table tableName=&quot;t_production&quot; domainObjectName=&quot;Production&quot;需要正确填写和实体类名 mybatis-generator:generate 最后双击右侧maven窗口中的plugins-&gt;mybatis-generator:generate即可生成代码。 注意不要多次生成，否则xml中可能会生成重复的内容，从而造成启动报错，可以删除文件再生成 最终生成的代码结构如下： 添加查询数据列表接口 从MybatisGenerator生成的代码中可以看出已经生成了增删改查的接口，我们在此基础之上增加一个查询列表的接口ArrayList&lt;Production&gt; selectAll()。 ProductionMapper.xml 在文件中增加一个selectAll对应的查询语句： 12345&lt;select id=\"selectAll\" resultMap=\"BaseResultMap\"&gt; select &lt;include refid=\"Base_Column_List\" /&gt; from t_production&lt;/select&gt; 如下所示： ProductionMapper.java 在接口中增加ArrayList&lt;Production&gt; selectAll();接口声明 增加@Mapper注解 MybatisGenerator自动生成的接口ProductionMapper接口默认是没有注解的，需要我们手动增加@Mapper注解，否则启动时会报错。 注意： 每次重新生成代码后都需要重新手动修改 增加service层代码 在com.ruan.productionservice.service下创建ProductionService接口，在com.ruan.productionservice.service.impl下创建ProductionServiceImpl类实现ProductionService，如下所示： ProductionService.java 接口中声明5个接口函数： 1234567public interface ProductionService &#123; int delete(String uuid); int save(Production record); Production get(String uuid); int update(Production record); ArrayList&lt;Production&gt; list();&#125; ProductionServiceImpl.java 实现类ProductionServiceImpl需要加@Service注解， 在保存记录的接口中自动生成主键和创建时间 123456789101112131415161718192021222324252627282930313233@Servicepublic class ProductionServiceImpl implements ProductionService &#123; @Autowired ProductionMapper mapper; @Override public int delete(String uuid) &#123; return mapper.deleteByPrimaryKey(uuid); &#125; @Override public int save(Production production) &#123; production.setUuid(UUID.randomUUID().toString().replace(\"-\", \"\").toLowerCase()); production.setCreateTime(new Date()); return mapper.insert(production); &#125; @Override public int update(Production production) &#123; return mapper.updateByPrimaryKeySelective(production); &#125; @Override public Production get(String uuid) &#123; return mapper.selectByPrimaryKey(uuid); &#125; @Override public ArrayList&lt;Production&gt; list() &#123; return mapper.selectAll(); &#125;&#125; 增加controller层代码 ProductionController.java 在com.ruan.productionservice.controller下创建ProductionController类，在类上指定@RestController注解，然后实现5个Restful接口，代码如下： 12345678910111213141516171819202122232425262728293031323334353637@RestController@RequestMapping(value = \"/mall/production\")public class ProductionController &#123; @Autowired ProductionService productionService; @ResponseBody @RequestMapping(value = \"/save\", method = RequestMethod.POST) public int save(Production production)&#123; return productionService.save(production); &#125; @ResponseBody @RequestMapping(value = \"/update\", method = RequestMethod.POST) public int update(Production production)&#123; return productionService.update(production); &#125; @ResponseBody @RequestMapping(value = \"/delete/&#123;id&#125;\", method = RequestMethod.POST) public int delete(@PathVariable(\"id\") String id)&#123; return productionService.delete(id); &#125; @ResponseBody @RequestMapping(value = \"/get/&#123;id&#125;\", method = RequestMethod.GET) public Production get(@PathVariable(\"id\") String id)&#123; return productionService.get(id); &#125; @ResponseBody @RequestMapping(value = \"/list\", method = RequestMethod.GET) public ArrayList&lt;Production&gt; list()&#123; return productionService.list(); &#125;&#125; 配置application.properties application.properties中包含应用的配置信息，我们只需要配置JDBC的内容即可，如下所示： 1234spring.datasource.url=jdbc:mysql://localhost:3306/mallspring.datasource.driver-class-name=com.mysql.jdbc.Driverspring.datasource.username=malluserspring.datasource.password=mall@123 启动应用程序 在IDEA中进去到ProductionserviceApplication类中，然后就可以启动程序，如下所示： PostMan验证接口 启动后，我们通过PostMan进行接口的验证。 /mall/production/save 创建一条数据，返回1，表示插入数据库成功。 /mall/production/list 通过list接口可以看到插入的内容，并且可以看到对应数据的uuid，用来调用其他接口 /mall/production/update 通过上面获取到的uuid修改数据，如下，返回1表示数据库修改成功。 /mall/production/get/{id} 通过上面获取到的uuid获取数据详情，此时uuid是在网址中，发现price已经修改为35。 /mall/production/delete/{id} 最后通过delete接口删除数据 可能遇到的问题 启动时提示自动加载ProductionMapper失败 如果在启动过程中提示No qualifying bean of type 'com.ruan.productionservice.mapper.ProductionMapper' available: expected at least 1 bean which qualifies as autowire candidate.，则说明ProductionMapper没有添加@Mapper注解，该文件是Mybatis Generator自动生成的，需要手动添加该注解。 启动时提示Result Maps错误 启动报错提示java.lang.IllegalArgumentException: Result Maps collection already contains value for com.ruan.productionservice.mapper.ProductionMapper.BaseResultMap，是因为多次使用Mybatis Generator生成代码，造成ProductionMapper.xml文件中存在重复的内容，删除掉该文件重新生成即可。","tags":[{"name":"Java","slug":"Java","permalink":"http://ruanxinyu.github.io/tags/Java/"}]},{"title":"Mysql常见问题操作指导","date":"2018-10-06T01:39:34.000Z","path":"posts/技术文档/Mysql常见问题操作指导/","text":"快速查询目录 启动 windows如何启动mysql 执行net start mysql80（需要用管理员权限启动，否则会报拒绝访问错误），或者通过如下方式： windows下mysq的数据和配置文件存放位置 默认是在C:\\ProgramData\\MySQL\\目录下 windows启动mysql报拒绝访问错误 使用管理员权限启动即可，net start mysql80 windows下mysql的日志位置 在C:\\ProgramData\\MySQL\\MySQL Server 8.0\\Data\\下，可以通过C:\\ProgramData\\MySQL\\MySQL Server 8.0\\my.ini看到具体的文件名称： windows下mysql启动失败 查看mysql的错误日志发现如下内容TCP/IP, --shared-memory, or --named-pipe should be configured on NT OS。 有两种解决方式，一种是取消注释enable-named-pipe， 二是取消注释shared-memory。这两个参数在my.ini的位置是在一起的，如下所示： 权限 如何添加用户权限 老版本 授权格式：grant 权限 on 数据库.* to 用户名@登录主机 identified by &quot;密码&quot;; 12grant all privileges on mall.* to 'malluser'@'%' identified by 'mall@123';flush privileges; ** 8.0版本: ** 创建账户和赋予权限分开，如果采用上面的方式会提示Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'IDENTIFIED BY 'mall@1234'',，因此需要采用下面的方式： 创建账户: create user '用户名'@'访问主机' identified by '密码'; 赋予权限: grant 权限列表 on 数据库 to '用户名'@'访问主机';（修改权限时在后面加with grant option） 123create user malluser@'%' identified by 'mall@123';grant all privileges on mall.* to 'malluser'@'%' with grant option;flush privileges; 忘记root的密码 首先，编辑sudo vim /etc/mysql/my.cnf，在[mysqld]下添加skip-grant-tables，然后重启sudo systemctl restart mysql.service，然后就可以通过mysql -u root进入到mysql的控制台。 执行mysql命令进入到mysql的控制台，执行如下命令修改密码： mysql 5.7.9版本之前 123use mysql;update user set Password = password ( 'new-password' ) where User = 'root';flush privileges; mysql 5.7.9版本之后 1234use mysql;update user set authentication_string='' where user='root';flush privileges;ALTER user 'root'@'localhost' IDENTIFIED BY 'root@123'; 最后，删除skip-grant-tables配置并重启mysql即可完成密码的修改。 修改权限提示–skip-grant-tables下不能执行该操作 提示The MySQL server is running with the --skip-grant-tables option so it cannot execute this statement，在执行之前执行一下flush privileges;即可。","tags":[{"name":"飞行手册","slug":"飞行手册","permalink":"http://ruanxinyu.github.io/tags/飞行手册/"}]},{"title":"Ubuntu常见问题操作指导","date":"2018-10-04T13:27:53.000Z","path":"posts/技术文档/Ubuntu常见问题操作指导/","text":"如何重启网卡 重启网卡可以使用ip，ifconfig和service命令，如下所示，推荐使用ip命令。 12345678910# 推荐使用ip命令sudo ip link set enp0s3 downsudo ip link set enp0s3 up# 使用ifconfig命令sudo ifconfig enp0s3 downsudo ifconfig enp0s3 up# 使用service命令，但是不支持最新版的Ubuntusudo service network restart 如何临时添加-修改-删除IP地址 可以使用ip和ifconfig命令，如下所示，推荐使用ip命令。 12345678# 推荐使用ip命令sudo ip address add 192.168.1.135/32 dev enp0s3 # 添加sudo ip address change 192.168.1.135/24 dev enp0s3 # 修改sudo ip address del 192.168.1.135/24 dev enp0s3 # 删除# 使用ifconfig命令sudo ifconfig eth0 192.168.1.135 netmask 255.255.255.0 如何设置静态IP地址和DNS 由于Ubuntu从17.10开始改用netplan方式管理，因此在不同版本设置方式不一样。 Ubuntu 17.10版本前，编辑sudo vim /etc/network/interfaces文件，添加如下的内容，然后重启网卡即可。 123456auto enp0s3iface enp0s3 inet staticaddress 192.168.1.132netmask 255.255.255.0gateway 192.168.1.1dns-nameserver 192.168.1.1 ** Ubuntu 17.10版本后**，编辑netplan方式的配置文件sudo vim /etc/netplan/50-cloud-init.yaml，设置如下内容，然后执行sudo netplan apply即可立即生效。 12345678910network: ethernets: enp0s3: # 配置的网卡名称 dhcp4: no # dhcp4关闭 dhcp6: no # dhcp6关闭 addresses: [192.168.1.132/24] # 设置本机IP及掩码 gateway4: 192.168.1.1 # 设置网关 nameservers: addresses: [192.168.1.1] # 设置DNS version: 2 如何查看和设置DNS 修改/etc/resolv.conf文件是无效的，该文件每次重启会被自动覆盖 如果是修改单个网卡的DNS请参见：如何设置静态IP地址和DNS 如果是设置全局DNS，请编辑sudo vim /etc/systemd/resolved.conf，然后重启systemd-resolved服务sudo systemctl restart systemd-resolved.service即可。 查看当前正在使用的DNS可以使用sudo systemd-resolve --status","tags":[{"name":"飞行手册","slug":"飞行手册","permalink":"http://ruanxinyu.github.io/tags/飞行手册/"}]},{"title":"Ubuntu下Mysql的安装与验证","date":"2018-10-04T13:21:18.000Z","path":"posts/技术文档/Ubuntu下Mysql的安装与验证/","text":"apt方式安装 Ubuntu 18.04.1版本下，如果直接使用sudo apt-get install mysql-server安装的是5.9版本，我们要安装最新的8.0版本。 首先进去到https://dev.mysql.com/downloads/repo/apt/页面，下载deb包 点击下载按钮后，我们也可以页面中获取下载地址，然后通过wget下载： 通过wget下载后通过执行dpkg命令安装deb包，并且在弹出的框中我们选择8.0版本： 12wget https://dev.mysql.com/get/mysql-apt-config_0.8.10-1_all.debsudo dpkg -i mysql-apt-config_0.8.10-1_all.deb # 在弹出的框中我们选择8.0版本 由于安装过程中需要使用到libmecab2包，所以也需要提前安装好，否则会提示Depends: mysql-community-server (= 8.0.12-1ubuntu18.04) but it is not going to be installed。 12wget http://security.ubuntu.com/ubuntu/pool/universe/m/mecab/libmecab2_0.996-5_amd64.debsudo dpkg -i libmecab2_0.996-5_amd64.deb 安装好libmecab2后就可以安装mysql-server了。 12sudo apt-get updatesudo apt-get install mysql-server 安装过程中会提示用户选择密码的加密方式，由于Mysql 8.0开始支持更加安全的基于SHA256的加密方式，但是老的驱动是不支持该加密方式，所以如果已经有其他程序使用该Mysql，需要保持兼容，则选择兼容模式，否则推荐使用最一种模式。 启动与开机启动 安装完成后mysql自动已经起来，可以通过systemctl命令启动，停止和查看mysql，并且加入到开机启动。 1234sudo systemctl stop mysql.servicesudo systemctl start mysql.servicesudo systemctl status mysql.servicesudo systemctl enable mysql.service mysql的相关目录及文件位置说明： 用户配置文件位置：/etc/mysql/my.cnf pid文件位置：/var/run/mysqld/mysqld.pid socket文件位置：/var/run/mysqld/mysqld.sock 数据目录： /var/lib/mysql 错误日志文件： /var/log/mysql/error.log 在控制台执行mysql -u root -p，输入密码就可以进入","tags":[{"name":"环境搭建","slug":"环境搭建","permalink":"http://ruanxinyu.github.io/tags/环境搭建/"}]},{"title":"Git常见问题操作指导","date":"2018-10-04T05:15:35.000Z","path":"posts/技术文档/Git常见问题操作指导/","text":"图形化客户端强烈推荐：SmartGit， 本文是基于Git飞行规则上做的修改与补充。 快速查询目录 为了清楚的表述，这篇文档里的所有例子使用了自定义的bash 提示，以便指示当前分支和是否有暂存的变化(changes)。分支名用小括号括起来，分支名后面跟的*表示暂存的变化(changes)。 编辑提交(editting commits) 刚才提交了什么 如果你用 git commit -a 提交了一次变化(changes)，而你又不确定到底这次提交了哪些内容。 你就可以用下面的命令显示当前HEAD上的最近一次的提交(commit): 1(master)$ git show 或者 1$ git log -n1 -p 提交信息写错了 如果你的提交信息(commit message)写错了且这次提交(commit)还没有推(push), 你可以通过下面的方法来修改提交信息(commit message): 1$ git commit --amend 这会打开你的默认编辑器, 在这里你可以编辑信息. 另一方面, 你也可以用一条命令一次完成: 1$ git commit --amend -m 'xxxxxxx' 如果你已经推(push)了这次提交(commit), 你可以修改这次提交(commit)然后强推(force push), 但是不推荐这么做。 提交里的用户名和邮箱不对 如果这只是单个提交(commit)，修改它： 1$ git commit --amend --author \"New Authorname &lt;authoremail@mydomain.com&gt;\" 如果你需要修改所有历史, 参考 'git filter-branch’的指南页. 想从一个提交里移除一个文件 通过下面的方法，从一个提交(commit)里移除一个文件: 123$ git checkout HEAD^ myfile$ git add -A$ git commit --amend 这将非常有用，当你有一个开放的补丁(open patch)，你往上面提交了一个不必要的文件，你需要强推(force push)去更新这个远程补丁。 想删除最后一次提交 如果你需要删除推了的提交(pushed commits)，你可以使用下面的方法。可是，这会不可逆的改变你的历史，也会搞乱那些已经从该仓库拉取(pulled)了的人的历史。简而言之，如果你不是很确定，千万不要这么做。 12$ git reset HEAD^ --hard$ git push -f [remote] [branch] 如果你还没有推到远程, 把Git重置(reset)到你最后一次提交前的状态就可以了(同时保存暂存的变化): 1(my-branch*)$ git reset --soft HEAD@&#123;1&#125; 这只能在没有推送之前有用. 如果你已经推了, 唯一安全能做的是 git revert SHAofBadCommit， 那会创建一个新的提交(commit)用于撤消前一个提交的所有变化(changes)； 或者, 如果你推的这个分支是rebase-safe的 (例如： 其它开发者不会从这个分支拉), 只需要使用 git push -f； 更多, 请参考 the above section。 删除任意提交 同样的警告：不到万不得已的时候不要这么做. 12$ git rebase --onto SHA1_OF_BAD_COMMIT^ SHA1_OF_BAD_COMMIT$ git push -f [remote] [branch] 或者做一个 交互式rebase 删除那些你想要删除的提交(commit)里所对应的行。 尝试推一个修正后的提交到远程，但是报错： 1234567To https://github.com/yourusername/repo.git! [rejected] mybranch -&gt; mybranch (non-fast-forward)error: failed to push some refs to 'https://github.com/tanay1337/webmaker.org.git'hint: Updates were rejected because the tip of your current branch is behindhint: its remote counterpart. Integrate the remote changes (e.g.hint: 'git pull ...') before pushing again.hint: See the 'Note about fast-forwards' in 'git push --help' for details. 注意, rebasing(见下面)和修正(amending)会用一个新的提交(commit)代替旧的, 所以如果之前你已经往远程仓库上推过一次修正前的提交(commit)，那你现在就必须强推(force push) (-f)。 注意 – 总是 确保你指明一个分支! 1(my-branch)$ git push origin mybranch -f 一般来说, 要避免强推. 最好是创建和推(push)一个新的提交(commit)，而不是强推一个修正后的提交。后者会使那些与该分支或该分支的子分支工作的开发者，在源历史中产生冲突。 意外的做了一次硬重置，想找回内容 如果你意外的做了 git reset --hard, 你通常能找回你的提交(commit), 因为Git对每件事都会有日志，且都会保存几天。 1(master)$ git reflog 你将会看到一个你过去提交(commit)的列表, 和一个重置的提交。 选择你想要回到的提交(commit)的SHA，再重置一次: 1(master)$ git reset --hard SHA1234 这样就完成了。 暂存(Staging) 需要把暂存的内容添加到上一次的提交 1(my-branch*)$ git commit --amend 想要暂存一个新文件的一部分，而不是这个文件的全部 一般来说, 如果你想暂存一个文件的一部分, 你可这样做: 1$ git add --patch filename.x -p 简写。这会打开交互模式， 你将能够用 s 选项来分隔提交(commit)； 然而, 如果这个文件是新的, 会没有这个选择， 添加一个新文件时, 这样做: 1$ git add -N filename.x 然后, 你需要用 e 选项来手动选择需要添加的行，执行 git diff --cached 将会显示哪些行暂存了哪些行只是保存在本地了。 想把在一个文件里的变化加到两个提交里 git add 会把整个文件加入到一个提交. git add -p 允许交互式的选择你想要提交的部分. 想把暂存的内容变成未暂存，把未暂存的内容暂存起来 这个有点困难， 我能想到的最好的方法是先stash未暂存的内容， 然后重置(reset)，再pop第一步stashed的内容, 最后再add它们。 1234$ git stash -k$ git reset --hard$ git stash pop$ git add -A 未暂存(Unstaged)的内容 想把未暂存的内容移动到一个新分支 1$ git checkout -b my-branch 想把未暂存的内容移动到另一个已存在的分支 123$ git stash$ git checkout my-branch$ git stash pop 想丢弃本地未提交的变化 如果你只是想重置源(origin)和你本地(local)之间的一些提交(commit)，你可以： 12345678# one commit(my-branch)$ git reset --hard HEAD^# two commits(my-branch)$ git reset --hard HEAD^^# four commits(my-branch)$ git reset --hard HEAD~4# or(master)$ git checkout -f 重置某个特殊的文件, 你可以用文件名做为参数: 1$ git reset filename 想丢弃某些未暂存的内容 如果你想丢弃工作拷贝中的一部分内容，而不是全部。 签出(checkout)不需要的内容，保留需要的。 12$ git checkout -p# Answer y to all of the snippets you want to drop 另外一个方法是使用 stash， Stash所有要保留下的内容, 重置工作拷贝, 重新应用保留的部分。 1234$ git stash -p# Select all of the snippets you want to save$ git reset --hard$ git stash pop 或者, stash 你不需要的部分, 然后stash drop。 123$ git stash -p# Select all of the snippets you don't want to save$ git stash drop 分支(Branches) 从错误的分支拉取了内容，或把内容拉取到了错误的分支 这是另外一种使用 git reflog 情况，找到在这次错误拉(pull) 之前HEAD的指向。 123(master)$ git reflogab7555f HEAD@&#123;0&#125;: pull origin wrong-branch: Fast-forwardc5bc55a HEAD@&#123;1&#125;: checkout: checkout message goes here 重置分支到你所需的提交(desired commit): 1$ git reset --hard c5bc55a 完成。 想扔掉本地的提交，以便我的分支与远程的保持一致 先确认你没有推(push)你的内容到远程。 git status 会显示你领先(ahead)源(origin)多少个提交: 12345(my-branch)$ git status# On branch my-branch# Your branch is ahead of 'origin/my-branch' by 2 commits.# (use \"git push\" to publish your local commits)# 一种方法是: 1(master)$ git reset --hard origin/my-branch 需要提交到一个新分支，但错误的提交到了master 在master下创建一个新分支，不切换到新分支,仍在master下: 1(master)$ git branch my-branch 把master分支重置到前一个提交: 1(master)$ git reset --hard HEAD^ HEAD^ 是 HEAD^1 的简写，你可以通过指定要设置的HEAD来进一步重置。 或者, 如果你不想使用 HEAD^, 找到你想重置到的提交(commit)的hash(git log 能够完成)， 然后重置到这个hash。 使用git push 同步内容到远程。 例如, master分支想重置到的提交的hash为a13b85e: 12(master)$ git reset --hard a13b85eHEAD is now at a13b85e 签出(checkout)刚才新建的分支继续工作: 1(master)$ git checkout my-branch 想保留来自另外一个ref-ish的整个文件 假设你正在做一个原型方案(原文为working spike (see note)), 有成百的内容，每个都工作得很好。现在, 你提交到了一个分支，保存工作内容: 1(solution)$ git add -A &amp;&amp; git commit -m \"Adding all changes from this spike into one big commit.\" 当你想要把它放到一个分支里 (可能是feature, 或者 develop), 你关心是保持整个文件的完整，你想要一个大的提交分隔成比较小。 假设你有: 分支 solution, 拥有原型方案， 领先 develop 分支。 分支 develop, 在这里你应用原型方案的一些内容。 我去可以通过把内容拿到你的分支里，来解决这个问题: 1(develop)$ git checkout solution -- file1.txt 这会把这个文件内容从分支 solution 拿到分支 develop 里来: 123456# On branch develop# Your branch is up-to-date with 'origin/develop'.# Changes to be committed:# (use \"git reset HEAD &lt;file&gt;...\" to unstage)## modified: file1.txt 然后, 正常提交。 Note: Spike solutions are made to analyze or solve the problem. These solutions are used for estimation and discarded once everyone gets clear visualization of the problem. ~ Wikipedia. 把几个提交提交到了同一个分支，而这些提交应该分布在不同的分支里 假设你有一个master分支， 执行git log, 你看到你做过两次提交: 12345678910111213141516171819(master)$ git logcommit e3851e817c451cc36f2e6f3049db528415e3c114Author: Alex Lee &lt;alexlee@example.com&gt;Date: Tue Jul 22 15:39:27 2014 -0400 Bug #21 - Added CSRF protectioncommit 5ea51731d150f7ddc4a365437931cd8be3bf3131Author: Alex Lee &lt;alexlee@example.com&gt;Date: Tue Jul 22 15:39:12 2014 -0400 Bug #14 - Fixed spacing on titlecommit a13b85e984171c6e2a1729bb061994525f626d14Author: Aki Rose &lt;akirose@example.com&gt;Date: Tue Jul 21 01:12:48 2014 -0400 First commit 让我们用提交hash(commit hash)标记bug (e3851e8 for #21, 5ea5173 for #14). 首先, 我们把master分支重置到正确的提交(a13b85e): 12(master)$ git reset --hard a13b85eHEAD is now at a13b85e 现在, 我们对 bug #21 创建一个新的分支: 12(master)$ git checkout -b 21(21)$ 接着, 我们用 cherry-pick 把对bug #21的提交放入当前分支。 这意味着我们将应用(apply)这个提交(commit)，仅仅这一个提交(commit)，直接在HEAD上面。 1(21)$ git cherry-pick e3851e8 这时候, 这里可能会产生冲突， 参见交互式 rebasing 章 冲突节 解决冲突. 再者， 我们为bug #14 创建一个新的分支, 也基于master分支 123(21)$ git checkout master(master)$ git checkout -b 14(14)$ 最后, 为 bug #14 执行 cherry-pick: 1(14)$ git cherry-pick 5ea5173 想删除上游分支被删除了的本地分支 一旦你在github 上面合并(merge)了一个pull request, 你就可以删除你fork里被合并的分支。 如果你不准备继续在这个分支里工作, 删除这个分支的本地拷贝会更干净，使你不会陷入工作分支和一堆陈旧分支的混乱之中。 1$ git fetch -p 不小心删除了我的分支 如果你定期推送到远程, 多数情况下应该是安全的，但有些时候还是可能删除了还没有推到远程的分支。 让我们先创建一个分支和一个新的文件: 12345(master)$ git checkout -b my-branch(my-branch)$ git branch(my-branch)$ touch foo.txt(my-branch)$ lsREADME.md foo.txt 添加文件并做一次提交 123456789101112131415161718(my-branch)$ git add .(my-branch)$ git commit -m 'foo.txt added'(my-branch)$ foo.txt added 1 files changed, 1 insertions(+) create mode 100644 foo.txt(my-branch)$ git logcommit 4e3cd85a670ced7cc17a2b5d8d3d809ac88d5012Author: siemiatj &lt;siemiatj@example.com&gt;Date: Wed Jul 30 00:34:10 2014 +0200 foo.txt addedcommit 69204cdf0acbab201619d95ad8295928e7f411d5Author: Kate Hudson &lt;katehudson@example.com&gt;Date: Tue Jul 29 13:14:46 2014 -0400 Fixes #6: Force pushing after amending commits 现在我们切回到主(master)分支，‘不小心的’删除my-branch分支 1234567(my-branch)$ git checkout masterSwitched to branch 'master'Your branch is up-to-date with 'origin/master'.(master)$ git branch -D my-branchDeleted branch my-branch (was 4e3cd85).(master)$ echo oh noes, deleted my branch!oh noes, deleted my branch! 在这时候你应该想起了reflog, 一个升级版的日志，它存储了仓库(repo)里面所有动作的历史。 1234(master)$ git reflog69204cd HEAD@&#123;0&#125;: checkout: moving from my-branch to master4e3cd85 HEAD@&#123;1&#125;: commit: foo.txt added69204cd HEAD@&#123;2&#125;: checkout: moving from master to my-branch 正如你所见，我们有一个来自删除分支的提交hash(commit hash)，接下来看看是否能恢复删除了的分支。 123456(master)$ git checkout -b my-branch-helpSwitched to a new branch 'my-branch-help'(my-branch-help)$ git reset --hard 4e3cd85HEAD is now at 4e3cd85 foo.txt added(my-branch-help)$ lsREADME.md foo.txt 看! 我们把删除的文件找回来了。 Git的 reflog 在rebasing出错的时候也是同样有用的。 想删除一个分支 删除一个远程分支: 1(master)$ git push origin --delete my-branch 你也可以: 1(master)$ git push origin :my-branch 删除一个本地分支: 1(master)$ git branch -D my-branch 想从别人正在工作的远程分支签出一个分支 首先, 从远程拉取(fetch) 所有分支: 1(master)$ git fetch --all 假设你想要从远程的daves分支签出到本地的daves 123(master)$ git checkout --track origin/davesBranch daves set up to track remote branch daves from origin.Switched to a new branch 'daves' (--track 是 git checkout -b [branch] [remotename]/[branch] 的简写) 这样就得到了一个daves分支的本地拷贝, 任何推过(pushed)的更新，远程都能看到. Rebasing 和合并(Merging) 想撤销rebase/merge 你可以合并(merge)或rebase了一个错误的分支, 或者完成不了一个进行中的rebase/merge。 Git 在进行危险操作的时候会把原始的HEAD保存在一个叫ORIG_HEAD的变量里, 所以要把分支恢复到rebase/merge前的状态是很容易的。 1(my-branch)$ git reset --hard ORIG_HEAD 已经rebase过, 但是我不想强推 不幸的是，如果你想把这些变化(changes)反应到远程分支上，你就必须得强推(force push)。 是因你快进(Fast forward)了提交，改变了Git历史, 远程分支不会接受变化(changes)，除非强推(force push)。这就是许多人使用 merge 工作流, 而不是 rebasing 工作流的主要原因之一， 开发者的强推(force push)会使大的团队陷入麻烦。使用时需要注意，一种安全使用 rebase 的方法是，不要把你的变化(changes)反映到远程分支上, 而是按下面的做: 1234(master)$ git checkout my-branch(my-branch)$ git rebase -i master(my-branch)$ git checkout master(master)$ git merge --ff-only my-branch 更多, 参见 this SO thread. 需要组合几个提交 假设你的工作分支将会做对于 master 的pull-request。 一般情况下你不关心提交(commit)的时间戳，只想组合 所有 提交(commit) 到一个单独的里面, 然后重置(reset)重提交(recommit)。 确保主(master)分支是最新的和你的变化都已经提交了, 然后: 12(my-branch)$ git reset --soft master(my-branch)$ git commit -am \"New awesome feature\" 如果你想要更多的控制, 想要保留时间戳, 你需要做交互式rebase (interactive rebase): 1(my-branch)$ git rebase -i master 如果没有相对的其它分支， 你将不得不相对自己的HEAD 进行 rebase。 例如：你想组合最近的两次提交(commit), 你将相对于HEAD~2 进行rebase， 组合最近3次提交(commit), 相对于HEAD~3, 等等。 1(master)$ git rebase -i HEAD~2 在你执行了交互式 rebase的命令(interactive rebase command)后, 你将在你的编辑器里看到类似下面的内容: 12345678910111213141516171819202122pick a9c8a1d Some refactoringpick 01b2fd8 New awesome featurepick b729ad5 fixuppick e3851e8 another fix# Rebase 8074d12..b729ad5 onto 8074d12## Commands:# p, pick = use commit# r, reword = use commit, but edit the commit message# e, edit = use commit, but stop for amending# s, squash = use commit, but meld into previous commit# f, fixup = like \"squash\", but discard this commit's log message# x, exec = run command (the rest of the line) using shell## These lines can be re-ordered; they are executed from top to bottom.## If you remove a line here THAT COMMIT WILL BE LOST.## However, if you remove everything, the rebase will be aborted.## Note that empty commits are commented out 所有以 # 开头的行都是注释, 不会影响 rebase. 然后，你可以用任何上面命令列表的命令替换 pick, 你也可以通过删除对应的行来删除一个提交(commit)。 例如, 如果你想 单独保留最旧(first)的提交(commit),组合所有剩下的到第二个里面, 你就应该编辑第二个提交(commit)后面的每个提交(commit) 前的单词为 f: 1234pick a9c8a1d Some refactoringpick 01b2fd8 New awesome featuref b729ad5 fixupf e3851e8 another fix 如果你想组合这些提交(commit) 并重命名这个提交(commit), 你应该在第二个提交(commit)旁边添加一个r，或者更简单的用s 替代 f: 1234pick a9c8a1d Some refactoringpick 01b2fd8 New awesome features b729ad5 fixups e3851e8 another fix 你可以在接下来弹出的文本提示框里重命名提交(commit)。 12345678910Newer, awesomer features# Please enter the commit message for your changes. Lines starting# with '#' will be ignored, and an empty message aborts the commit.# rebase in progress; onto 8074d12# You are currently editing a commit while rebasing branch 'master' on '8074d12'.## Changes to be committed:# modified: README.md# 如果成功了, 你应该看到类似下面的内容: 1(master)$ Successfully rebased and updated refs/heads/master. 安全合并策略 --no-commit 执行合并(merge)但不自动提交, 给用户在做提交前检查和修改的机会。 no-ff 会为特性分支(feature branch)的存在过留下证据, 保持项目历史一致。 1(master)$ git merge --no-ff --no-commit my-branch 需要将一个分支合并成一个提交 1(master)$ git merge --squash my-branch 只想组合未推的提交 有时候，在将数据推向上游之前，你有几个正在进行的工作提交(commit)。这时候不希望把已经推(push)过的组合进来，因为其他人可能已经有提交(commit)引用它们了。 1(master)$ git rebase -i @&#123;u&#125; 这会产生一次交互式的rebase(interactive rebase), 只会列出没有推(push)的提交(commit)， 在这个列表时进行reorder/fix/squash 都是安全的。 检查是否分支上的所有提交都合并过了 检查一个分支上的所有提交(commit)是否都已经合并(merge)到了其它分支, 你应该在这些分支的head(或任何 commits)之间做一次diff: 1(master)$ git log --graph --left-right --cherry-pick --oneline HEAD...feature/120-on-scroll 这会告诉你在一个分支里有而另一个分支没有的所有提交(commit), 和分支之间不共享的提交(commit)的列表。 另一个做法可以是: 1(master)$ git log master ^feature/120-on-scroll --no-merges 交互式rebase可能出现的问题 这个rebase编辑屏幕出现’noop’ 如果你看到的是这样: 1noop 这意味着你rebase的分支和当前分支在同一个提交(commit)上, 或者 领先(ahead) 当前分支。 你可以尝试: 检查确保主(master)分支没有问题 rebase HEAD~2 或者更早 有冲突的情况 如果你不能成功的完成rebase, 你可能必须要解决冲突。 首先执行 git status 找出哪些文件有冲突: 1234567(my-branch)$ git statusOn branch my-branchChanges not staged for commit: (use \"git add &lt;file&gt;...\" to update what will be committed) (use \"git checkout -- &lt;file&gt;...\" to discard changes in working directory)truemodified: README.md 在这个例子里面, README.md 有冲突。 打开这个文件找到类似下面的内容: 12345&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEADsome code=========some code&gt;&gt;&gt;&gt;&gt;&gt;&gt; new-commit 你需要解决新提交的代码(示例里, 从中间==线到new-commit的地方)与HEAD 之间不一样的地方. 有时候这些合并非常复杂，你应该使用可视化的差异编辑器(visual diff editor): 1(master*)$ git mergetool -t opendiff 在你解决完所有冲突和测试过后, git add 变化了的(changed)文件, 然后用git rebase --continue 继续rebase。 12(my-branch)$ git add README.md(my-branch)$ git rebase --continue 如果在解决完所有的冲突过后，得到了与提交前一样的结果, 可以执行git rebase --skip。 任何时候你想结束整个rebase 过程，回来rebase前的分支状态, 你可以做: 1(my-branch)$ git rebase --abort 杂项(Miscellaneous Objects) 克隆所有子模块 1$ git clone --recursive git://github.com/foo/bar.git 如果已经克隆了: 1$ git submodule update --init --recursive 删除标签 12$ git tag -d &lt;tag_name&gt;$ git push &lt;remote&gt; :refs/tags/&lt;tag_name&gt; 恢复已删除标签 如果你想恢复一个已删除标签(tag), 可以按照下面的步骤: 首先, 需要找到无法访问的标签(unreachable tag): 1$ git fsck --unreachable | grep tag 记下这个标签(tag)的hash，然后用Git的 update-ref: 1$ git update-ref refs/tags/&lt;tag_name&gt; &lt;hash&gt; 这时你的标签(tag)应该已经恢复了。 已删除补丁 如果某人在 GitHub 上给你发了一个pull request, 但是然后他删除了他自己的原始 fork, 你将没法克隆他们的提交(commit)或使用 git am。在这种情况下, 最好手动的查看他们的提交(commit)，并把它们拷贝到一个本地新分支，然后做提交。 做完提交后, 再修改作者，参见变更作者。 然后, 应用变化, 再发起一个新的pull request。 跟踪文件(Tracking Files) 只想改变一个文件名字的大小写，而不修改内容 1(master)$ git mv --force myfile MyFile 想从Git删除一个文件，但保留该文件 1(master)$ git rm --cached log.txt 配置(Configuration) 想给一些Git命令添加别名 在 OS X 和 Linux 下, 你的 Git的配置文件储存在 部分添加了一些快捷别名(和一些我容易拼写错误的)，如下:12345678910111213141516171819202122```vim[alias] a = add amend = commit --amend c = commit ca = commit --amend ci = commit -a co = checkout d = diff dc = diff --changed ds = diff --staged f = fetch loll = log --graph --decorate --pretty=oneline --abbrev-commit m = merge one = log --pretty=oneline outstanding = rebase -i @&#123;u&#125; s = status unpushed = log @&#123;u&#125; wc = whatchanged wip = rebase -i @&#123;u&#125; zap = fetch -p 想缓存一个仓库的用户名和密码 你可能有一个仓库需要授权，这时你可以缓存用户名和密码，而不用每次推/拉(push/pull)的时候都输入，Credential helper能帮你。 12$ git config --global credential.helper cache# Set git to use the credential memory cache 12$ git config --global credential.helper 'cache --timeout=3600'# Set the cache to timeout after 1 hour (setting is in seconds) 不知道我做错了些什么 你把事情搞砸了：你 重置(reset) 了一些东西, 或者你合并了错误的分支, 亦或你强推了后找不到你自己的提交(commit)了。有些时候, 你一直都做得很好, 但你想回到以前的某个状态。 这就是 git reflog 的目的， reflog 记录对分支顶端(the tip of a branch)的任何改变, 即使那个顶端没有被任何分支或标签引用。基本上, 每次HEAD的改变, 一条新的记录就会增加到reflog。遗憾的是，这只对本地分支起作用，且它只跟踪动作 (例如，不会跟踪一个没有被记录的文件的任何改变)。 1234(master)$ git reflog0a2e358 HEAD@&#123;0&#125;: reset: moving to HEAD~20254ea7 HEAD@&#123;1&#125;: checkout: moving from 2.2 to masterc10f740 HEAD@&#123;2&#125;: checkout: moving from master to 2.2 上面的reflog展示了从master分支签出(checkout)到2.2 分支，然后再签回。 那里，还有一个硬重置(hard reset)到一个较旧的提交。最新的动作出现在最上面以 HEAD@{0}标识. 如果事实证明你不小心回移(move back)了提交(commit), reflog 会包含你不小心回移前master上指向的提交(0254ea7)。 1$ git reset --hard 0254ea7 然后使用git reset就可以把master改回到之前的commit，这提供了一个在历史被意外更改情况下的安全网。 (摘自). 其它资源(Other Resources) 书(Books) Pro Git - Scott Chacon’s excellent git book Git Internals - Scott Chacon’s other excellent git book 教程(Tutorials) Learn Git branching 一个基于网页的交互式 branching/merging/rebasing 教程 Getting solid at Git rebase vs. merge git-workflow - Aaron Meurer的怎么使用Git为开源仓库贡献 GitHub as a workflow - 使用GitHub做为工作流的趣事, 尤其是空PRs 脚本和工具(Scripts and Tools) firstaidgit.io 一个可搜索的最常被问到的Git的问题 git-extra-commands - 一堆有用的额外的Git脚本 git-extras - GIT 工具集 – repo summary, repl, changelog population, author commit percentages and more git-fire - git-fire 是一个 Git 插件，用于帮助在紧急情况下添加所有当前文件, 做提交(committing), 和推(push)到一个新分支(阻止合并冲突)。 git-tips - Git小提示 git-town - 通用，高级Git工作流支持！ http://www.git-town.com GUI客户端(GUI Clients) GitKraken - 豪华的Git客户端 Windows, Mac &amp; Linux git-cola - 另外一个Git客户端 Windows &amp; OS X GitUp - 一个新的Git客户端，在处理Git的复杂性上有自己的特点 gitx-dev - 图形化的Git客户端 OS X Source Tree - 免费的图形化Git客户端 Windows &amp; OS X Tower - 图形化Git客户端 OS X(付费) SmartGit - 推荐，对个人用户免费","tags":[{"name":"飞行手册","slug":"飞行手册","permalink":"http://ruanxinyu.github.io/tags/飞行手册/"}]},{"title":"Ubuntu下Mysql+Keepalived双主热备高可用环境的搭建","date":"2018-10-04T04:50:27.000Z","path":"posts/技术文档/Ubuntu下Mysql-Keepalived双主热备高可用环境的搭建/","text":"Mysql复制模式及原理 Mysql内建的复制功能是构建大型，高性能应用程序的基础。Mysql将数据库的更改写入到二进制日志文件，而复制功能就是基于该日志完成的。Mysql的二进制日志格式也有三种：STATEMENT，ROW，MIXED。对应的是Mysql的三种复制模式. 复制原理 master服务器将数据的改变记录二进制binlog日志，当master上的数据发生改变时，则将其改变写入二进制日志中；salve服务器会在一定时间间隔内对master二进制日志进行探测其是否发生改变，如果发生改变，则开始一个I/OThread请求master二进制事件，同时主节点为每个I/O线程启动一个dump线程，用于向其发送二进制事件，并保存至从节点本地的中继日志中，从节点将启动SQL线程从中继日志中读取二进制日志，在本地重放，使得其数据和主节点的保持一致，最后I/OThread和SQLThread将进入睡眠状态，等待下一次被唤醒。过程如下： 注意几点： master将操作语句记录到binlog日志中，然后授予slave远程连接的权限（master一定要开启binlog二进制日志功能；通常为了数据安全考虑，slave也开启binlog功能）。 slave开启两个线程：IO线程和SQL线程。其中：IO线程负责读取master的binlog内容到中继日志relay log里；SQL线程负责从relay log日志里读出binlog内容，并更新到slave的数据库里，这样就能保证slave数据和master数据保持一致了。 Mysql复制至少需要两个Mysql的服务，当然Mysql服务可以分布在不同的服务器上，也可以在一台服务器上启动多个服务。 Mysql复制最好确保master和slave服务器上的Mysql版本相同（如果不能满足版本一致，那么要保证master主节点的版本低于slave从节点的版本） master和slave两节点间时间需同步 主服务写入日志和从数据库回访日志都是串行的 注意：所有对表的操作都需要在主服务器上操作，否则会造成数据冲突 基于SQL语句的复制(SBR) 基于SQL语句的复制(statement-based replication, SBR)的优点有： 产生的binlog文件较小，比较节省空间 binlog既可以用来复制，也可以用于实时的还原 主从版本可以不一样，从服务器版本可以比主服务器版本高。 缺点有： 不是所有的UPDATE语句都能被复制，尤其是包含不确定操作的时候。 调用具有不确定因素的 UDF 时复制也可能出问题，比如LOAD_FILE()，UUID()，USER()，FOUND_ROWS()，SYSDATE() INSERT ... SELECT 会产生比 RBR 更多的行级锁 基于行的复制(RBR) 基于行的复制(row-based replication, RBR)的优点有： 任何情况都可以被复制，这对复制来说是最安全可靠的 多数情况下，从服务器上的表如果有主键的话，复制就会快了很多 执行 INSERT，UPDATE，DELETE 语句时锁更少 从服务器上采用多线程来执行复制成为可能 缺点有： binlog 文件太大 复杂的回滚时 binlog 中会包含大量的数据 主服务器上执行 UPDATE 语句时，所有发生变化的记录都会写到 binlog 中，而 SBR 只会写一次，这会导致频繁发生 binlog 的并发写问题 UDF 产生的大 BLOB 值会导致复制变慢 无法从 binlog 中看到都复制了写什么语句，无法进行审计 混合模式复制(MBR) 混合模式复制(mixed-based replication, MBR) 解决的问题 Mysql支持主从复制模式和主主复制模式，能够解决以下的问题： 数据分布 (Data distribution ) 负载平衡(load balancing) 数据备份(Backups) ，保证数据安全 高可用性和容错行(High availability and failover) 实现读写分离，缓解数据库压力 基础环境说明 本次教程搭建的架构图如下所示，通过Mysql的主从同步实现数据的同步，通过KeepAlived实现Mysql的故障时的自动切换，其中为192.168.1.132和192.168.1.133，VIP为192.168.1.134。 使用的Ubuntu是18.04.1版本： 使用的Mysql是8.0.12版本： 使用的KeepAlived是2.0.7版本： Mysql的主从同步设置 用户配置文件位置：/etc/mysql/my.cnf pid文件位置：/var/run/mysqld/mysqld.pid socket文件位置：/var/run/mysqld/mysqld.sock 数据目录： /var/lib/mysql 错误日志文件： /var/log/mysql/error.log 配置my.cnf文件 Mysql_01(192.168.1.132)编辑sudo vim /etc/mysql/my.cnf文件，添加如下内容： 12345[mysqld]log-bin=mysql-binrelay_log=mysql-relay-binserver-id=1log_slave_updates=1 Mysql_02(192.168.1.133)编辑sudo vim /etc/mysql/my.cnf文件，添加如下内容： 12345[mysqld]log-bin=mysql-binrelay_log=mysql-relay-binserver-id=2log_slave_updates=1 上述配置mysql的二进制日志的名称为mysql-bin，采用的是相对目录，具体绝对目录可以通过执行show variables like 'log_%';得到，如下所示 如上述配置指定了relay_log的值，否则mysql会自动根据主机的hostname命名，如果修改hostname的话可能就会出问题，在error.log中也可以看到对应的警告： 创建复制用户 Mysql_01(192.168.1.132)中执行mysql -u root -p进入到mysql的控制台执行如下语句： 123CREATE USER 'repl'@'192.168.1.133' IDENTIFIED BY 'mysql';GRANT REPLICATION SLAVE ON *.* TO 'repl'@'192.168.1.133';FLUSH PRIVILEGES; Mysql_02(192.168.1.133)中执行mysql -u root -p进入到mysql的控制台执行如下语句： 123CREATE USER 'repl'@'192.168.1.132' IDENTIFIED BY 'mysql';GRANT REPLICATION SLAVE ON *.* TO 'repl'@'192.168.1.132';FLUSH PRIVILEGES; 执行CHANGE MASTER TO语句 Mysql_01(192.168.1.132)中执行mysql -u root -p进入到mysql的控制台执行如下语句： 123456CHANGE MASTER TO MASTER_HOST='192.168.1.133', MASTER_USER='repl', MASTER_PASSWORD='mysql', MASTER_LOG_FILE='mysql-bin.000001', MASTER_LOG_POS=0; Mysql_02(192.168.1.133)中执执行mysql -u root -p进入到mysql的控制台执行如下语句： 123456CHANGE MASTER TO MASTER_HOST='192.168.1.132', MASTER_USER='repl', MASTER_PASSWORD='mysql', MASTER_LOG_FILE='mysql-bin.000001', MASTER_LOG_POS=0; MASTER_LOG_FILE用来指定初始复制时的mysql1中的binlog文件， MASTER_LOG_POS用来指定初始复制时binlog文件的位置 重启并查看同步状态 sudo systemctl restart mysql.service重启mysql mysql -u root -p进入到mysql的控制台执行start slave; 通过show slave status\\G;查看启动状态，如果出现下面的内容则表示成功 KeepAlived的配置 Keepalived的安装请参考：。配置文件主要有如下几点变化： 两台机器的state都设置为BACKUP，同时nopreempt配置，可以防止切换到从库后，主keepalived恢复后自动切换回主库 virtual_ipaddress改为192.168.1.134 vrrp_script中的命令改为netstat -na | grep LISTEN | grep 3306 || killall keepalived **特别说明: ** 此处仅仅简单的通过检查33060端口来判断mysql是否正常。你可以可以根据自己的需求，将该脚本设计的更复杂一些。比如根据数据库的插入、删除等是否可用、主从线程是否开启等进行细分。提高检测的精准度。 Mysql_01(192.168.1.132)中KeepAlived的配置如下： 1234567891011121314151617181920vrrp_script chk_service_ok &#123; script \"netstat -na | grep LISTEN | grep 3306 || killall keepalived\" interval 2&#125;vrrp_instance VI_1 &#123; interface enp0s3 state BACKUP # 通过下面的priority来区分MASTER和BACKUP，也只有如此，底下的nopreempt才有效 virtual_router_id 51 priority 100 nopreempt # 防止切换到从库后，主keepalived恢复后自动切换回主库 virtual_ipaddress &#123; 192.168.1.134/24 &#125; track_script &#123; chk_service_ok &#125;&#125; Mysql_02(192.168.1.133)中KeepAlived的配置如下： 1234567891011121314151617181920vrrp_script chk_service_ok &#123; script \"netstat -na | grep LISTEN | grep 3306 || killall keepalived\" interval 2&#125;vrrp_instance VI_1 &#123; interface enp0s3 state BACKUP # 通过下面的priority来区分MASTER和BACKUP，也只有如此，底下的nopreempt才有效 virtual_router_id 51 priority 80 nopreempt # 防止切换到从库后，主keepalived恢复后自动切换回主库 virtual_ipaddress &#123; 192.168.1.134/24 &#125; track_script &#123; chk_service_ok &#125;&#125; 配置完毕之后执行sudo systemctl restart keepalived重新启动keepalived。 功能验证 正常情况下的验证 首先，通过ip a可以看到VIP在Mysql_01(192.168.1.132)上： 在Mysql_01(192.168.1.132)上执行mysql -u root -p进入到mysql的控制台， 创建数据库create database database_01;; 在Mysql_02(192.168.1.133)上执行mysql -u root -p进入到mysql的控制台， 创建数据库create database database_02;; 然后分别在两台机器上执行show databases；，可以看到两台mysql中都包含database_01和database_02，说明mysql的主主同步生效。 异常恢复下的验证 Mysql_01(192.168.1.132)上执行sudo systemctl stop mysql.service停止mysql以模拟故障，此时可以看到VIP(192.168.1.134)已经漂移到mysql_02上，我们ssh连接VIP并往数据库中创建一个数据库create database database_vip;，可以看到是可以正常创建的，说明keepalived已经能保证mysql的高可用。 此时我们重新启动Mysql_01(192.168.1.132)以模拟故障恢复，此时发现VIP还在mysql_02上，同时Mysql_01的数据库中也已经存在database_vip数据库。说明故障恢复后数据仍旧能够正常同步。 常见操作说明 彻底解除主从复制关系 stop slave reset slave; 或直接删除master.info和relay-log.info这两个文件 修改my.cnf删除主从相关配置参数 让slave不随MySQL自动启动 修改my.cnf, 在[mysqld]中增加skip-slave-start选项 数据备份的快速恢复 执行如下命令备份，可以保留 file 和 position 的信息，在新搭建一个slave的时候，还原完数据库， file 和 position 的信息也随之更新，接着再start slave 就可以很迅速的完成增量同步： 1mysqldump --master-data --single-transaction --user=username --password=password dbname&gt; dumpfilename 如何限制复制哪些数据库 在执行grant授权的时候就限定数据库 在主服务器上限定binlog_do_db = 数据库名 主服务器上不限定数据库，在从服务器上限定replicate-do-db = 数据库名 修改log-bin和relay_log后重启报错 先执行reset slave，然后执行start slave即可。 日志出现[Warning] IP address 'xxxx' could not be resolved: Name or service not known mysql默认会反向解析DNS，对于访问者Mysql不会判断是hosts还是ip都会进行dns反向解析，我们可以通过在my.cnf中添加skip-name-resolve禁用dns反查即可。 主备同步报：Fatal error: The slave I/O thread stops because master and slave have equal MySQL server UUIDs 是因为数据目录下的/var/lib/mysql/auto.cnf文件是一样导致的，我们可以删除备机上的该文件，然后重启mysql","tags":[{"name":"环境搭建","slug":"环境搭建","permalink":"http://ruanxinyu.github.io/tags/环境搭建/"}]},{"title":"TypeScript学习记录-1","date":"2018-10-04T02:08:09.000Z","path":"posts/技术文档/TypeScript学习记录-1/","text":"安装和编译 使用npm进行安装： 1npm install -g typescript 使用tsc可以将ts文件编译为js文件： 1tsc greeter.ts 变量类型 官方文档地址为：http://www.typescriptlang.org/docs/handbook/basic-types.html。基本的数据类型及使用如下所示： 1234567891011121314151617181920212223242526// booleanlet isDone: boolean = false;// numberlet decimal: number = 6;let hex: number = 0xf00d;let binary: number = 0b1010;let octal: number = 0o744;// 字符串即字符串中的变量引用let fullName: string = `Bob Bobbington`;let age: number = 37;let sentence: string = `Hello, my name is $&#123; fullName &#125;.I'll be $&#123; age + 1 &#125; years old next month.`;// 数组let list: number[] = [1, 2, 3];let list: Array&lt;number&gt; = [1, 2, 3];// 元组let x: [string, number] = [\"hello\", 10];// 枚举enum Color &#123;Red = 1, Green, Blue&#125;let c: Color = Color.Green; 还有其他的类型包括：any, void, null, undifined, never, object。 变量声明 变量的声明有3个关键字var, let, const。 定义要尽可能使用let，而不是var const是针对不可以重新复制的变量 object的声明与json的定义方式是一样的 默认值 123function keepWholeObject(wholeObject: &#123; a: string, b?: number &#125;) &#123; let &#123; a, b = 1001 &#125; = wholeObject;&#125; 函数声明 1234type C = &#123; a: string, b?: number &#125;function f(&#123; a, b &#125;: C): void &#123; // ...&#125; 123456function f(&#123; a, b = 0 &#125; = &#123; a: \"\" &#125;): void &#123; // ...&#125;f(&#123; a: \"yes\" &#125;); // ok, default b = 0f(); // ok, default to &#123; a: \"\" &#125;, which then defaults b = 0f(&#123;&#125;); // error, 'a' is required if you supply an argument Spread 12345678// 数组let first = [1, 2];let second = [3, 4];let bothPlus = [0, ...first, ...second, 5];// 对象let defaults = &#123; food: \"spicy\", price: \"$$\", ambiance: \"noisy\" &#125;;let search = &#123; ...defaults, food: \"rich\" &#125;; 接口 通过interface定义接口，只要校验传进来的参数是否包含接口中的变量，则认为传进来的参数与接口是兼容的。可以通过?来指定是否是函数的可选参数，通过readonly来指定参数是只读的。 1234567891011121314151617181920interface SquareConfig &#123; color?: string; width?: number; readonly height?: number;&#125;function createSquare(config: SquareConfig): &#123; color: string; area: number &#125; &#123; let newSquare = &#123;color: \"white\", area: 100&#125;; if (config.clor) &#123; // Error: Property 'clor' does not exist on type 'SquareConfig' newSquare.color = config.clor; &#125; if (config.width) &#123; newSquare.area = config.width * config.width; &#125; return newSquare;&#125;let mySquare = createSquare(&#123;color: \"black\"&#125;);Readonly properties 接口中也是可以定义函数的。 接口可以通过extends来继承 类 通过class定义类，通过implements实现接口 通过constructor来定义构造函数 支持getter/setter方法 支持static关键字 支持abstract关键字 函数 多参数支持 12345function buildName(firstName: string, ...restOfName: string[]) &#123; return firstName + \" \" + restOfName.join(\" \");&#125;let employeeName = buildName(\"Joseph\", \"Samuel\", \"Lucas\", \"MacKinzie\"); this和箭头函数 Arrow functions capture the this where the function is created rather than where it is invoked. 所以在定义函数的时候尽量使用箭头函数，如果使用this的时候提示是any类型，可以显性的传入this变量 12345678910111213141516171819202122232425262728interface Card &#123; suit: string; card: number;&#125;interface Deck &#123; suits: string[]; cards: number[]; createCardPicker(this: Deck): () =&gt; Card;&#125;let deck: Deck = &#123; suits: [\"hearts\", \"spades\", \"clubs\", \"diamonds\"], cards: Array(52), // 显性的传入this createCardPicker: function(this: Deck) &#123; // 是哟弄个箭头函数 return () =&gt; &#123; let pickedCard = Math.floor(Math.random() * 52); let pickedSuit = Math.floor(pickedCard / 13); return &#123;suit: this.suits[pickedSuit], card: pickedCard % 13&#125;; &#125; &#125;&#125;let cardPicker = deck.createCardPicker();let pickedCard = cardPicker();alert(\"card: \" + pickedCard.card + \" of \" + pickedCard.suit); 泛型 函数 12345function identity&lt;T&gt;(arg: T): T &#123; return arg;&#125;let myIdentity: &#123;&lt;T&gt;(arg: T): T&#125; = identity; // 类 123456class GenericNumber&lt;T&gt; &#123; zeroValue: T; add: (x: T, y: T) =&gt; T;&#125;let myGenericNumber = new GenericNumber&lt;number&gt;(); 类继承 12345678interface Lengthwise &#123; length: number;&#125;function loggingIdentity&lt;T extends Lengthwise&gt;(arg: T): T &#123; console.log(arg.length); // Now we know it has a .length property, so no more error return arg;&#125;","tags":[{"name":"学习记录","slug":"学习记录","permalink":"http://ruanxinyu.github.io/tags/学习记录/"}]},{"title":"Jenkins的安装与使用","date":"2018-10-03T09:01:53.000Z","path":"posts/技术文档/Jenkins的安装与使用/","text":"Jenkins的介绍 官方地址为：https://jenkins.io/。Jenkins是一个开源软件项目，是基于Java开发的一种持续集成工具，用于监控持续重复的工作，旨在提供一个开放易用的软件平台，使软件的持续集成变成可能。 Jenkins的安装 在启动之前需要先安装java环境，具体可以参考教程：。该教程使用的Ubuntu版本是18.04.1版本，Ubuntu的安装教程参考。 具体的安装文档可以参考：https://jenkins.io/doc/book/installing/。 文档中直接通过sudo apt-get install jenkins的方式安装会报错，不兼容最新版本的Ubuntu系统，因此下文采用直接下载软件包安装的过程。 首先下载http://mirrors.jenkins.io/war-stable/latest/jenkins.war软件包，然后执行java -jar jenkins.war即可启动Jenkins。默认情况下Jenkins会监听8080端口，我们可以通过如下命令修改端口号java -jar jenkins.war --httpPort=9090。 访问http://192.168.1.108:8080/，可以看到如下的页面，提示输入密码，可以从界面中找到密码所在的文件路径，或者从启动日志中也可以看到。 修改Jenkins的主目录 从Jenkins的启动日志中可以看出Jenkins默认的主目录为$user.home/.jenkins，我们在此将其主目录更改至/usr/local/jenkins/.jenkins，只需要导出环境JENKINS_HOME环境变量export JENKINS_HOME=/usr/local/jenkins/.jenkins，然后启动Jenkins即可，或者通过-D指定java -DJENKINS_HOME=/usr/local/jenkins/.jenkins -jar /usr/local/jenkins/jenkins.war --httpPort=8080 开机启动 编辑sudo vim /etc/rc.local, 在最下面添加sudo java -DJENKINS_HOME=/usr/local/jenkins/.jenkins -jar /usr/local/jenkins/jenkins.war --httpPort=8080 &amp;语句即可。 如下方式采用systemd的方式添加到系统服务启动报Job for jenkins.service failed because a timeout was exceeded错误，尚未调通。","tags":[{"name":"环境搭建","slug":"环境搭建","permalink":"http://ruanxinyu.github.io/tags/环境搭建/"}]},{"title":"SonatypeNexus的安装与使用","date":"2018-10-02T10:21:06.000Z","path":"posts/技术文档/SonatypeNexus的安装与使用/","text":"SonatypeNexus的介绍 Sonatype Nexus可以用来作为Maven/Java, npm, NuGet, RubyGems, Docker, P2, OBR, APT and YUM等的代理仓和私有仓库，同时还与Eclipse, IntelliJ, Hudson, Jenkins, Puppet, Chef, Docker等工具有很好的集成。那么我们在开发中可以用SonatypeNexus做什么呢？ 代理并缓存Maven/npm/docker等中央仓，提升下载速度 作为Maven/npm/docker等的私有仓库，上传私有组件 作为编译构建仓库，用于分享或者部署到环境 SonatypeNexus的安装 在启动之前需要先安装java环境，具体可以参考教程：。另外Nexus对内存要求比较大，请至少保持2G以上的内存。 Linux下源码安装的脚本可以点击此处下载： nexus_install.sh，下面对安装过程做一下说明。 SonatypeNexus的下载地址为： https://help.sonatype.com/repomanager3/download/download-archives—repository-manager-3 Linux通过如下命令下载并解压： 123wget http://download.sonatype.com/nexus/3/nexus-3.13.0-01-unix.tar.gzsudo tar -zxvf nexus-3.13.0-01-unix.tar.gz -C /usr/local/nexussudo chown -R $(whoami):$(whoami) /usr/local/nexus Windows点击http://download.sonatype.com/nexus/3/nexus-3.13.0-01-win64.zip下载后解压到本地磁盘 解压后，有nexus-3.13.0-01和sonatype-work两个目录： nexus-3.13.0-01是软件目录，升级SonatypeNexus版本是只需要替换这个目录即可 sonatype-work是数据目录，所有配置信息，软件包都在这个目录 SonatypeNexus的启动 进入到Nexus的安装目录nexus-3.13.0-01/bin/nexus, Linux执行./nexus start即可启动。查看启动日志在tail -100f sonatype-work/nexus3/log/nexus.log，当日志中出现如下的字样时表示nexus已经启动成功。 Windows下执行nexus.exe /run即可启动。 默认情况下，Nexus监听的端口号为8081，我们通过浏览器访问就可以看到Nexus的页面，默认的用户名为admin，密码为admin123。 系统服务与开机启动 我们还是采用systemd的方式添加到系统服务，执行如下命令： 12345678910111213141516171819202122(cat &lt;&lt;EOF[Unit]Description=Sonatyp Nexus DaemonAfter=network.targetWants=network-online.target[Service]Type=forkingLimitNOFILE=65536ExecStart=/usr/local/nexus/nexus-3.13.0-01/bin/nexus startExecStop=/usr/local/nexus/nexus-3.13.0-01/bin/nexus stopUser=$(whoami)Restart=on-abort[Install]WantedBy=multi-user.targetEOF) &gt; nexus.servicesudo cp -a nexus.service /lib/systemd/system/nexus.servicesudo ln -s /lib/systemd/system/nexus.service /etc/systemd/system/multi-user.target.wants/nexus.service 然后启动并添加为开机启动： 12sudo systemctl start nexussudo systemctl enable nexus Nexus启动不起来的可能原因: 没有安装java，可以通过java -version进行测试 当前用户没有nexus所在目录的权限，可以在执行用户下执行sudo chown -R $(whoami):$(whoami) /usr/local/nexus SonatypeNexus的配置 配置最大文件句柄数 在Nexus的界面中可以看到提示System Requirement: max file descriptors [4096] likely too low, increase to at least [65536].，点击进去可以看到具体的设置方式，如果采用上文中的systemd的方式启动nexus，则不存在这个问题，因为我们已经在nexus.service中设置最大文件句柄数LimitNOFILE=65536。 **注意：**设置完该参数后需要重新启动进程才可以生效。","tags":[{"name":"环境搭建","slug":"环境搭建","permalink":"http://ruanxinyu.github.io/tags/环境搭建/"}]},{"title":"Ubuntu下Nginx的安装与配置","date":"2018-10-02T06:19:56.000Z","path":"posts/技术文档/Ubuntu下Nginx的安装与配置/","text":"Nginx的简介 官方网址：http://nginx.org/。 Nginx可以作为http服务器、反向代理服务器、邮件服务器和负载均衡服务器等功能，具有性能高、扩展灵活等特点，能够快速的响应静态网页的请求，支持FastCGI/SSL/Virtual Host/URL Rwrite/Gzip/HTTP Basic Auth等功能，并且支持丰富的第三方扩展功能。 Nginx的安装 该教程使用的Ubuntu版本是18.04.1版本，Ubuntu的安装教程参考。Nginx可以直接通过apt-get安装，也可以通过源码编译安装。 apt-get安装 Ubuntu下执行sudo apt-get install nginx命令即可安装。 通过which nginx可以看到Nginx是安装在/usr/sbin/nginx下，配置文件在/etc/nginx/目录下。 源码编译安装 源码安装的脚本可以点击此处下载： nginx_install.sh，下面对安装过程做一下说明。 首先安装编译工具和openssl，下载Nginx源码并解压，然后执行源码编译三件套（./configure &amp;&amp; make &amp;&amp; make install），我们安装的目录为/usr/local/nginx： 123456789sudo apt-get install build-essential libssl-dev # 安装编译工具和openssl依赖sudo apt-get install zlib1g-devsudo apt-get install libpcre3 libpcre3-devwget http://nginx.org/download/nginx-1.15.4.tar.gz # 下载源码tar -zxvf nginx-1.15.4.tar.gz # 解压源码cd nginx-1.15.4/./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_v2_module --with-http_gzip_static_module --with-http_sub_module --with-pcre --with-http_ssl_module # 配置nginx的安装参数，可以根据自己的需要进行调整make # 编译源码sudo make install # 安装到安装目录，需要使用root权限 Nginx的启动和关闭 Nginx的启动直接使用/usr/local/nginx/sbin/nginx, 在源码安装下使用的配置文件是/usr/local/nginx/conf/nginx.conf，通过/usr/local/nginx/sbin/nginx -s reload命令重新加载, 可以通过/usr/local/nginx/sbin/nginx -s stop停止进程 Nginx的开机启动 方式1：rc.local 编辑sudo vim /etc/rc.local, 在最下面添加sudo /usr/local/nginx/sbin/nginx语句即可。 方式2：systemctl 我们还是采用systemd的方式添加到系统服务，执行如下命令： 12345678910111213141516171819202122(cat &lt;&lt;EOF[Unit]Description=Nginx DaemonAfter=syslog.target network-online.targetWants=network-online.targetConditionFileNotEmpty=/usr/local/nginx/conf/nginx.conf[Service]Type=forkingKillMode=processExecStart=/usr/local/nginx/sbin/nginxExecStop=/usr/local/nginx/sbin/nginx -s stopExecReload=/usr/local/nginx/sbin/nginx -s reload[Install]WantedBy=multi-user.targetEOF) &gt; nginx.servicesudo cp -a nginx.service /lib/systemd/system/nginx.servicesudo ln -s /lib/systemd/system/nginx.service /etc/systemd/system/multi-user.target.wants/nginx.service 启动Nginx进程，并设置为开机启动，通过sudo systemctl status nginx查看状态： 123sudo systemctl start nginxsudo systemctl status nginxsudo systemctl enable nginx Nginx的配置 Nginx功能强大，配置无法简单描述，因此，下文仅以一个最简单的静态文件服务器为例进行说明验证，更多的应用场景将会在其他的文章中进行说明。 配置文件是/usr/local/nginx/conf/nginx.conf，源码安装后默认的配置文件就已经提供了静态文件服务器的配置，我们增加autoindex on;参数以便后续更加方便的验证功能，如下所示： 12345678910111213141516171819202122232425262728worker_processes 1;events &#123; worker_connections 1024;&#125;http &#123; include mime.types; default_type application/octet-stream; sendfile on; keepalive_timeout 65; server &#123; listen 80; server_name localhost; location / &#123; root html; # 设置静态文件服务的本地目录为html目录 autoindex on; # 增加该参数以便自动生成文件目录 index index.html index.htm; # 默认访问文件夹下的index.html &#125; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root html; &#125; &#125;&#125; 通过上面的配置可以看出，配置文件包含全局的配置、events和http等几部分，其中http表示定义了一个HTTP服务器，其中包含一个server监听本地机器的80端口，server中的location用来定义网址路由，通过root用来定义静态文件服务的本地目录，此处指定的是nginx安装目录下的html目录/usr/local/nginx/html/. Nginx的验证 采用nginx的默认配置启动nginx，此时通过浏览器访问80端口即可以看到如下的页面，即/usr/local/nginx/html/index.html的内容。 我们在/usr/local/nginx/html/下创建一些文件夹和文件cd /usr/local/nginx/html/ &amp;&amp; sudo mkdir -p aa/aa aa/bb aa/cc aa/dd &amp;&amp; sudo touch aa/a.txt，可以通过浏览器看到对应的文件： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849worker_processes 1;events &#123; worker_connections 1024;&#125;upstream app_ha&#123; server 192.168.68.43:8080; server 192.168.68.45:8080 ;&#125;http &#123; include mime.types; default_type application/octet-stream; sendfile on; keepalive_timeout 65; access_log logs/quancha.access.log main; error_log logs/quancha.error.log; server &#123; listen 80; server_name localhost; location / &#123; proxy_pass http://app_ha; #在这里设置一个代理，和upstream的名字一样 #以下是一些反向代理的配置可删除 proxy_redirect off; # 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; client_max_body_size 10m; #允许客户端请求的最大单文件字节数 client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数 proxy_connect_timeout 300; #nginx跟后端服务器连接超时时间(代理连接超时) proxy_send_timeout 300; #后端服务器数据回传时间(代理发送超时) proxy_read_timeout 300; #连接成功后，后端服务器响应时间(代理接收超时) proxy_buffer_size 4k; #设置代理服务器（nginx）保存用户头信息的缓冲区大小 proxy_buffers 4 32k; #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置 proxy_busy_buffers_size 64k; #高负荷下缓冲大小（proxy_buffers*2） proxy_temp_file_write_size 64k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传 &#125; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root html; &#125; &#125;&#125;","tags":[{"name":"环境搭建","slug":"环境搭建","permalink":"http://ruanxinyu.github.io/tags/环境搭建/"}]},{"title":"阿里ACA认证学习记录","date":"2018-09-28T07:23:31.000Z","path":"posts/技术文档/阿里ACA认证学习记录/","text":"大数据概述 大数据，指无法在可承受的时间范围内用常规软件工具进行捕捉，管理和处理的数据集合，是需要新处理模式才能具有更强的决策力，洞察发现力和流程优化能力的海量，高增长率和多样化的信息资产。 大数据的主要特征：4V 数据分析流程 Hadoop生态圈 阿里云大数据体系 数加的定位 统一的大数据计算平台 分析型数据库 分析型数据库的介绍 OLAP，OLTP，维度和度量，下钻，下图中时间，地区和产品就是维度，而销量和金额就是度量 MPP（大规模并行处理， Massive Parallel Processing） 分析型数据库：高并发在线分析（Realtime OLAP），与关系型数据库的区别是分析型数据库没有事务，是专门用于分析的，支持sql语句，但是跟关系型数据库没有什么关系 分析型数据库的基本概念 表组 表组的特点 维表的特点，以空间换时间 事实表的特点 数据类型 多值列，不满足3范式，性能明显优于join 分析型数据库的基本操作 DMS在表组中新建表 MaxCompute MaxCompute的介绍 大数据计算服务 对象 分区 分区表 分区举例 其他概念， 执行sql都是task，是异步的 数据类型 阿里小贷 大数据架构 MaxCompute的架构介绍 客户端 逻辑层 计算层 数据上传 数据下载 参数 分隔符 DDL的介绍 创建表 表的生命周期，比如用来保持最近7天的数据 快捷建表 分区操作 修改表属性 视图操作 DML的介绍 查询操作 更新数据 多路输出 表关联 MapJoin MapJoin举例 分支表达式 内置函数 数学运算函数-1 数学运算函数-2 字符串处理函数 日期类型处理函数 窗口函数 聚合函数 其他函数 其他使用方式 自定义函数 UDF开发流程 MapReduce介绍 MR框架 Graph 如何使用合适的方式 授权 授权 添加用户授权 角色管理 DataIDE DataIDE介绍 产品概述 开发流程-1 开发流程-2 应用场景 DataIDE基本概念 概念 角色 多环境 数据集成 数据集成支持两种开发模式 向导模式：选择来源 一键生成数据表 向导模式：选择目标 向导模式：字段映射 脚本模式： 数据开发 脚本开发 提供参数配置 执行脚本之前会提示费用情况 任务：节点任务 支持调度，依赖管理，版本管理和参数配置 工作流任务 支持编排 数据管理 数据表的信息在数据管理服务 数据表的创建支持DDL和图像化两个模式 运维中心 介绍 任务管理 项目管理 QuickBI报表 QuickBI的介绍 产品概述 产品架构 角色定位 常见应用步骤 QuickBI的数据管理 数据源管理 数据集管理 首页 新建数据源 表格分析 图表与门户-常见图标 图表 门户 DataV数据大屏 产品介绍 产品概述 特性1：多重场景模板 特性2：丰富开放的图表库 特性3：支持多种数据源 特性4：零门槛图形化界面设计 特性5，支持数据交互分析 特性6：支持适配与发布方式 DataV大屏介绍 展示类大屏 展示类大屏示例 分析类大屏 分析类大屏示例 监控类大屏 监控类大屏示例 可视化大屏设计原则 大屏样例1 大屏样例2 DataV演示 添加数据 视频和样例 创建大屏-1 创建大屏-2","tags":[{"name":"学习记录","slug":"学习记录","permalink":"http://ruanxinyu.github.io/tags/学习记录/"}]},{"title":"Ubuntu下搭建HAProxy+KeepAlived高可用集群","date":"2018-09-28T02:48:23.000Z","path":"posts/技术文档/Ubuntu下搭建HAProxy-KeepAlived高可用集群/","text":"环境说明 本次教程搭建的架构图如下所示，通过KeepAlived实现HAProxy的高可用，通过HAProxy实现后端服务器App01和App02的高可用和负载均衡。HAPrxoy有两台，分别为192.168.1.102和192.168.1.103，VIP为192.168.1.104，通过8081端口访问App01的两台机器，通过8082端口访问App02的两台机器。 本教程使用Ubuntu 18.04.01系统，同时需要安装KeepAlived和HAProxy，相关的教程请参考： HAProxy的配置 两台HAProxy的配置是相同的，通过8081端口访问App01的两台机器，通过8082端口访问App02的两台机器。为了简化配置过程，还是采用最简化的配置，如下所示： 12345678910111213141516171819202122232425262728293031global daemon # 配置为后台启动defaults mode http timeout connect 30s # 连接超时 timeout client 30s # 客户端超时 timeout server 30s # 服务器超时###########################################################frontend app01 bind *:8081 # 绑定端口 default_backend app01_backend # 默认的backend的名称backend app01_backend server web1 192.168.1.106:80 # 设置后端服务器 server web1 192.168.1.108:80 # 设置后端服务器###########################################################frontend app02 bind *:8082 # 绑定端口 default_backend app02_backend # 默认的backend的名称backend app02_backend server web1 192.168.1.107:80 # 设置后端服务器 server web1 192.168.1.109:80 # 设置后端服务器###########################################################listen stats bind *:8083 # 设置监控组的名称 stats refresh 30s # 统计页面自动刷新时间 stats uri /stats # 统计页面url KeepAlived的配置 KeepAlived与HAProxy是在相同机器上，IP地址分别为主机haproxy_vm01（192.168.1.102）和备机haproxy_vm02（192.168.1.103）， VIP为192.168.1.104。因为KeepAlived是主备的，因此两台机器的配置是不一样的。 主机haproxy_vm01（192.168.1.102）的配置如下： 12345678910111213141516171819vrrp_script chk_service_ok &#123; script \"killall -0 haproxy\" interval 2&#125;vrrp_instance VI_1 &#123; interface enp0s3 state MASTER virtual_router_id 51 priority 100 virtual_ipaddress &#123; 192.168.1.104/25 &#125; track_script &#123; chk_service_ok &#125;&#125; 备机haproxy_vm02（192.168.1.103）的配置如下，相对于haproxy_vm01，只修改state和priority: 12345678910111213141516171819vrrp_script chk_service_ok &#123; script \"killall -0 haproxy\" interval 2&#125;vrrp_instance VI_1 &#123; interface enp0s3 state BACKUP virtual_router_id 51 priority 80 virtual_ipaddress &#123; 192.168.1.104/25 &#125; track_script &#123; chk_service_ok &#125;&#125; 通过上述配置可以看到，检查haproxy是否可用使用的是killall -0 haproxy命令来判断haproxy的进程是否存在。 App服务的配置 我们后台采用apache，首先在每一台后台机器安装apache，我们使用Apache服务器来模拟HAProxy后端的服务器，sudo apt-get install apache2。 为了区分App01和App02，我们做如下操作： 在App01的两台机器执行sudo sh -c 'echo &quot;This is apache server 01&quot; &gt; /var/www/html/index.html' 在App02的两台机器执行sudo sh -c 'echo &quot;This is apache server 02&quot; &gt; /var/www/html/index.html' 高可用功能验证 分别重新启动KeepAlived（sudo systemctl restart keepalived）和HAProxy（sudo systemctl restart haproxy）, 在HAProxy的两台机器上通过ip a命令，可以看到VIP（192.168.1.104）在haproxy_vm01（192.168.1.102）上. 通过VIP访问8081和8082端口，可以发现能够正常访问到后台的服务器，如下所示，此时我们关闭haproxy_vm01（192.168.1.102）上的HAproxy进程sudo killall haproxy，通过ip a可以看到VIP已经漂移到haproxy_vm02（192.168.1.103）上，但是通过VIP访问8081和8082端口，业务仍旧是正常的，说明HAProxy是高可用的。 我们关闭App01_vm01（192.168.1.106)，然后通过VIP访问8081端口，依旧可以正常访问，说明HAProxy已经保证后端App的高可用。","tags":[{"name":"环境搭建","slug":"环境搭建","permalink":"http://ruanxinyu.github.io/tags/环境搭建/"}]},{"title":"Ubuntu下HAProxy的安装与配置","date":"2018-09-24T23:07:50.000Z","path":"posts/技术文档/Ubuntu下HAProxy的安装与配置/","text":"HAProxy的简介 HAProxy是一款提供高可用性、负载均衡以及基于TCP（第四层）和HTTP（第七层）应用的代理软件，支持虚拟主机，它是免费、快速并且可靠的一种解决方案。 HAProxy实现了一种事件驱动、单一进程模型，此模型支持非常大的并发连接数，特别适用于那些负载特大的web站点，完全可以支持数以万计的并发连接，根据官方文档，haproxy可以跑满10Gbps。并且它的运行模式使得它可以很简单安全的整合进您当前的架构中，同时可以保护你的web服务器不被暴露到网络上。 HAProxy支持全透明代理，可以用客户端IP地址或者任何其他地址来连接后端服务器，同时提供连接拒绝功能，可以有效的限制攻击蠕虫。 HAProxy的安装 该教程使用的Ubuntu版本是18.04.1版本，Ubuntu的安装教程参考。HAProxy可以直接通过apt-get安装，也可以通过源码编译安装。 apt-get安装 Ubuntu下执行sudo apt-get install haproxy命令即可安装。 通过which haproxy可以看到haproxy是安装在/usr/sbin/haproxy下，HAProxy的配置文件路径为：/etc/haproxy/haproxy.cfg 使用sudo haproxy -f /etc/haproxy/haproxy.cfg即可启动HAProxy。 源码编译安装 源码安装的脚本可以点击此处下载： haproxy_install.sh，下面对安装过程做一下说明。 一般源码安装目录为/usr/local/haproxy，在源码目录中的README文件有安装说明，下面罗列出几点内容： 在执行make命令之前是不需要执行./configure命令的，因此执行的参数都在make命令中指定 我们操作系统为Ubuntu 18.04.1，不涉及嵌入式编译，因此使用TARGET=linux26 ARCH=x86_64参数 PCRE(Perl Compatible Regular Expressions)的速度是其他的2-10倍，因此添加USE_PCRE=1选项，但是前提需要安装libpcre3 libpcre3-dev 为支持HTTPS协议，我们需要添加USE_OPENSSL=1选项，但是前提需要安装libssl-dev 为支持HTTP的压缩功能，我们需要添加USE_ZLIB=1，但是前提需要安装zlib1g-dev 为了保证安装目录为/usr/local/haproxy，我们需要在make install命令中指定PREFIX参数 1234567891011sudo apt-get install build-essential libssl-dev # 安装编译工具和openssl依赖sudo apt-get install zlib1g-devsudo apt-get install libpcre3 libpcre3-devwget https://www.haproxy.org/download/1.8/src/haproxy-1.8.8.tar.gz # 下载源码tar -zxvf haproxy-1.8.8.tar.gz # 解压源码cd haproxy-1.8.8/make TARGET=linux26 ARCH=x86_64 USE_PCRE=1 USE_OPENSSL=1 USE_ZLIB=1 # 编译源码，从README中可以看出如何编译sudo make install PREFIX=/usr/local/haproxy # 安装到安装目录，需要使用root权限sudo mkdir -p /etc/haproxysudo cp -a examples/transparent_proxy.cfg /etc/haproxy/haproxy.cfg 启动HAProxy: sudo /usr/local/haproxy/sbin/haproxy -f /etc/haproxy/haproxy.cfg 可能遇到的问题 提示make is not found 源码安装需要安装编译器将源码转换为二进制可执行文件，因此执行sudo apt-get install build-essential安装编译器即可 启动时提示parsing [/etc/haproxy/haproxy.cfg:12] : unknown keyword 'ca-base' in 'global' section 编译haproxy时没有使能openssl的支持，安装libssl-dev并在编译时指定USE_OPENSSL=1选项即可 开机启动 方式1：rc.local 编辑sudo vim /etc/rc.local, 在最下面添加sudo /usr/local/haproxy/sbin/haproxy -f /etc/haproxy/haproxy.cfg语句即可。 方式2：systemctl 我们还是采用systemd的方式添加到系统服务，执行如下命令： 123456789101112131415161718192021(cat &lt;&lt;EOF[Unit]Description=HAproxy DaemonAfter=syslog.target network-online.targetWants=network-online.targetConditionFileNotEmpty=/etc/haproxy/haproxy.cfg[Service]Type=forkingKillMode=processExecStart=/usr/local/haproxy/sbin/haproxy -f /etc/haproxy/haproxy.cfgExecReload=/bin/kill -HUP $MAINPID[Install]WantedBy=multi-user.targetEOF) &gt; haproxy.servicesudo cp -a haproxy.service /lib/systemd/system/haproxy.servicesudo ln -s /lib/systemd/system/haproxy.service /etc/systemd/system/multi-user.target.wants/haproxy.service 启动haproxy进程，并设置为开机启动，通过sudo systemctl status haproxy查看状态： 123sudo systemctl start haproxy # 注意： 如果配置文件不正确的话HPAProxy是启动不起来的sudo systemctl status haproxysudo systemctl enable haproxy HAProxy的配置 下面我们以一个最简单的用例说明如何配置HAProxy，架构图如下，192.168.1.102上安装有HAProxy, 8081端口转向192.168.1.106服务器，8082端口转向192.168.1.107服务器。因为HAProxy是提供有统计功能的，因此打开该功能，并监听在8083端口。 配置HAProxy 编辑sudo vim /etc/haproxy/haproxy.cfg文件，写入如下的内容： 1234567891011121314151617181920212223242526272829global daemon # 配置为后台启动defaults mode http timeout connect 30s # 连接超时 timeout client 30s # 客户端超时 timeout server 30s # 服务器超时###########################################################frontend app01 bind *:8081 # 绑定端口 default_backend app01_backend # 默认的backend的名称backend app01_backend server web1 192.168.1.106:80 # 设置后端服务器###########################################################frontend app02 bind *:8082 # 绑定端口 default_backend app02_backend # 默认的backend的名称backend app02_backend server web1 192.168.1.107:80 # 设置后端服务器###########################################################listen stats bind *:8083 # 设置监控组的名称 stats refresh 30s # 统计页面自动刷新时间 stats uri /stats # 统计页面url 然后执行sudo /usr/local/haproxy/sbin/haproxy -f /etc/haproxy/haproxy.cfg启动HAProxy，通过sudo netstat -lntp | grep haproxy，可以看出HAProxy已经监听配置文件中的三个端口： 可能遇到的问题 启动时提示unknown keyword，如下所示： 从错误信息中可以看出keyword前都多了好多空格，说明我们的配置文件没有正确的使用tab键 启动HAProxy后配置文件没有生效 因为之前启动的HAProxy进程没有关闭，可以执行sudo killall haproxy关闭进程。 搭建Apache服务器 我们使用Apache服务器来模拟HAProxy后端的服务器，首先分别在192.168.1.106和192.168.1.107两台机器上执行sudo apt-get install apache2，完成后Apache会自动启动并监听80端口，此时在浏览器中访问对应机器，既可以看到Apache2的首页，默认使用的首页文件路径为/var/www/html/index.html。 为了对两台机器做一下区分，我们做如下操作： 在192.168.1.106执行sudo sh -c 'echo &quot;This is apache server 01&quot; &gt; /var/www/html/index.html' 在192.168.1.107执行sudo sh -c 'echo &quot;This is apache server 02&quot; &gt; /var/www/html/index.html' 此时分别访问http://192.168.1.106/和http://192.168.1.107/可以看到下面的界面： HAProxy的验证 此时访问HAProxy（192.168.1.102）的8081和8082可以看到分别访问到后端的192.168.1.106和192.168.1.107的80端口，如下所示，说明HAProxy的功能已经生效。 访问HAProxy的8083端口：http://192.168.1.102:8083/stats，可以看到HAProxy自带的的统计数据页面，如下所示： HAProxy详细配置说明（高级） 对于初级使用者可以不必详细掌握所有的配置，只需要在使用的时候能查到即可，因此将说明放置在此处，参数说明来源于https://www.linuxidc.com/Linux/2012-07/65350.htm 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149####################全局配置信息###############################参数是进程级的，通常和操作系统（OS）相关#########global maxconn 20480 #默认最大连接数 log 127.0.0.1 local3 #[err warning info debug] chroot /var/haproxy #chroot运行的路径 uid 99 #所属运行的用户uid gid 99 #所属运行的用户组 daemon #以后台形式运行haproxy nbproc 1 #进程数量(可以设置多个进程提高性能) pidfile /var/run/haproxy.pid #haproxy的pid存放路径,启动进程的用户必须有权限访问此文件 ulimit-n 65535 #ulimit的数量限制#####################默认的全局设置########################这些参数可以被利用配置到frontend，backend，listen组件##defaults log global mode http #所处理的类别 (#7层 http;4层tcp ) maxconn 20480 #最大连接数 option httplog #日志类别http日志格式 option httpclose #每次请求完毕后主动关闭http通道 option dontlognull #不记录健康检查的日志信息 option forwardfor #如果后端服务器需要获得客户端真实ip需要配置的参数，可以从Http Header中获得客户端ip option redispatch #serverId对应的服务器挂掉后,强制定向到其他健康的服务器 option abortonclose #当服务器负载很高的时候，自动结束掉当前队列处理比较久的连接 stats refresh 30 #统计页面刷新间隔 retries 3 #3次连接失败就认为服务不可用，也可以通过后面设置 balance roundrobin #默认的负载均衡的方式,轮询方式 # balance source #默认的负载均衡的方式,类似nginx的ip_hash # balance leastconn #默认的负载均衡的方式,最小连接 contimeout 5000 #连接超时 clitimeout 50000 #客户端超时 srvtimeout 50000 #服务器超时 timeout check 2000 #心跳检测超时####################监控页面的设置#######################listen admin_status #Frontend和Backend的组合体,监控组的名称，按需自定义名称 bind 0.0.0.0:65532 #监听端口 mode http #http的7层模式 log 127.0.0.1 local3 err #错误日志记录 stats refresh 5s #每隔5秒自动刷新监控页面 stats uri /admin?stats #监控页面的url stats realm itnihao\\ itnihao #监控页面的提示信息 stats auth admin:admin #监控页面的用户和密码admin,可以设置多个用户名 stats auth admin1:admin1 #监控页面的用户和密码admin1 stats hide-version #隐藏统计页面上的HAproxy版本信息 stats admin if TRUE #手工启用/禁用,后端服务器(haproxy-1.4.9以后版本) rrorfile 403 /etc/haproxy/errorfiles/403.http rrorfile 500 /etc/haproxy/errorfiles/500.http rrorfile 502 /etc/haproxy/errorfiles/502.http rrorfile 503 /etc/haproxy/errorfiles/503.http rrorfile 504 /etc/haproxy/errorfiles/504.http#################HAProxy的日志记录内容设置################### capture request header Host len 40 capture request header Content-Length len 10 capture request header Referer len 200 capture response header Server len 40 capture response header Content-Length len 10 capture response header Cache-Control len 8#######################网站监测listen配置################################此用法主要是监控haproxy后端服务器的监控状态############listen site_status bind 0.0.0.0:1081 #监听端口 mode http #http的7层模式 log 127.0.0.1 local3 err #[err warning info debug] monitor-uri /site_status #网站健康检测URL，用来检测HAProxy管理的网站是否可以用，正常返回200，不正常返回503 acl site_dead nbsrv(server_web) lt 2 #定义网站down时的策略当挂在负载均衡上的指定backend的中有效机器数小于1台时返回true acl site_dead nbsrv(server_blog) lt 2 acl site_dead nbsrv(server_bbs) lt 2 monitor fail if site_dead #当满足策略的时候返回503，网上文档说的是500，实际测试为503 monitor-net 192.168.16.2/32 #来自192.168.16.2的日志信息不会被记录和转发 monitor-net 192.168.16.3/32########frontend配置#################注意，frontend配置里面可以定义多个acl进行匹配操作########frontend http_80_in bind 0.0.0.0:80 #监听端口，即haproxy提供web服务的端口，和lvs的vip端口类似 mode http #http的7层模式 log global #应用全局的日志配置 option httplog #启用http的log option httpclose #每次请求完毕后主动关闭http通道，HA-Proxy不支持keep-alive模式 option forwardfor #如果后端服务器需要获得客户端的真实IP需要配置次参数，将可以从Http Header中获得客户端IP ########acl策略配置############# acl itnihao_web hdr_reg(host) -i ^(www.itnihao.cn|ww1.itnihao.cn)$ #如果请求的域名满足正则表达式中的2个域名返回true -i是忽略大小写 acl itnihao_blog hdr_dom(host) -i blog.itnihao.cn #如果请求的域名满足www.itnihao.cn返回true -i是忽略大小写 #acl itnihao hdr(host) -i itnihao.cn #如果请求的域名满足itnihao.cn返回true -i是忽略大小写 #acl file_req url_sub -i killall= #在请求url中包含killall=，则此控制策略返回true,否则为false #acl dir_req url_dir -i allow #在请求url中存在allow作为部分地址路径，则此控制策略返回true,否则返回false #acl missing_cl hdr_cnt(Content-length) eq 0 #当请求的header中Content-length等于0时返回true########acl策略匹配相应############# #block if missing_cl #当请求中header中Content-length等于0阻止请求返回403 #block if !file_req || dir_req #block表示阻止请求，返回403错误，当前表示如果不满足策略file_req，或者满足策略dir_req，则阻止请求 use_backend server_web if itnihao_web #当满足itnihao_web的策略时使用server_web的backend use_backend server_blog if itnihao_blog #当满足itnihao_blog的策略时使用server_blog的backend #redirect prefix http://blog.itniaho.cn code 301 if itnihao #当访问itnihao.cn的时候，用http的301挑转到http://192.168.16.3 default_backend server_bbs #以上都不满足的时候使用默认server_bbs的backend##########backend的设置###############下面我将设置三组服务器 server_web，server_blog，server_bbs##################backend server_web####################backend server_web mode http #http的7层模式 balance roundrobin #负载均衡的方式，roundrobin平均方式 cookie SERVERID #允许插入serverid到cookie中，serverid后面可以定义 option httpchk GET /index.html #心跳检测的文件 server web1 192.168.16.2:80 cookie web1 check inter 1500 rise 3 fall 3 weight 1 #服务器定义，cookie 1表示serverid为web1，check inter 1500是检测心跳频率rise 3是3次正确认为服务器可用， #fall 3是3次失败认为服务器不可用，weight代表权重 server web2 192.168.16.3:80 cookie web2 check inter 1500 rise 3 fall 3 weight 2 #服务器定义，cookie 1表示serverid为web2，check inter 1500是检测心跳频率rise 3是3次正确认为服务器可用， #fall 3是3次失败认为服务器不可用，weight代表权重###################backend server_blog######################backend server_blog mode http #http的7层模式 balance roundrobin #负载均衡的方式，roundrobin平均方式 cookie SERVERID #允许插入serverid到cookie中，serverid后面可以定义 option httpchk GET /index.html #心跳检测的文件 server blog1 192.168.16.2:80 cookie blog1 check inter 1500 rise 3 fall 3 weight 1 #服务器定义，cookie 1表示serverid为blog1，check inter 1500是检测心跳频率rise 3是3次正确认为服务器可用，fall 3是3次失败认为服务器不可用，weight代表权重 server blog2 192.168.16.3:80 cookie blog2 check inter 1500 rise 3 fall 3 weight 2 #服务器定义，cookie 1表示serverid为blog2，check inter 1500是检测心跳频率rise 3是3次正确认为服务器可用，fall 3是3次失败认为服务器不可用，weight代表权重##################backend server_bbs########################backend server_bbs mode http #http的7层模式 balance roundrobin #负载均衡的方式，roundrobin平均方式 cookie SERVERID #允许插入serverid到cookie中，serverid后面可以定义 option httpchk GET /index.html #心跳检测的文件 server bbs1 192.168.16.2:80 cookie bbs1 check inter 1500 rise 3 fall 3 weight 1 #服务器定义，cookie 1表示serverid为bbs1，check inter 1500是检测心跳频率rise 3是3次正确认为服务器可用，fall 3是3次失败认为服务器不可用，weight代表权重 server bbs2 192.168.16.3:80 cookie bbs2 check inter 1500 rise 3 fall 3 weight 2 #服务器定义，cookie 1表示serverid为bbs2，check inter 1500是检测心跳频率rise 3是3次正确认为服务器可用，fall 3是3次失败认为服务器不可用，weight代表权重","tags":[{"name":"环境搭建","slug":"环境搭建","permalink":"http://ruanxinyu.github.io/tags/环境搭建/"}]},{"title":"Linux初始化init系统：Sysvinit、Upstart和Systemd","date":"2018-09-22T07:04:38.000Z","path":"posts/技术文档/Linux初始化init系统/","text":"init系统介绍 Linux操作系统的启动首先从BIOS开始，接下来进入bootloader，由bootloader载入内核，进行内核初始化。内核初始化的最后一步就是启动pid为1的init进程。init以守护进程方式存在，是系统的第一个进程,，是所有其他进程的祖先。 Init系统能够定义、管理和控制 init进程的行为。它负责组织和运行许多独立的或相关的始化工作(因此被称为init系统)，从而让计算机系统进入某种用户预订的运行模式。 Linux初始化init系统包括：Sysvinit、Upstart和Systemd，它们在Ubuntu系统下的演化如下： Ubuntu 6.10及以前版本使用Sysvinit。 Ubuntu 14.10及以前版本使用Upstart，通过与Sysvinit并存。 Ubuntu 15.04开始默认使用Systemd，不能与Sysvinit或Upstart并存 Sysvinit介绍 Sysvinit就是System V风格的init系统，顾名思义，它源于System V系列UNIX。 运行级别 Sysvinit用术语runlevel来定义&quot;预订的运行模式&quot;，默认的运行模式定义在/etc/inittab文件的initdefault项。如果没有默认的运行模式，那么用户将进入系统控制台，手动决定进入何种运行模式。 Sysvinit中运行模式描述了系统各种预订的运行模式。通常会有8种运行模式，即运行模式0-6和S。其中0表示关机，1表示单用户模式，3为命令行模式，5为GUI模式，6表示重启，1和S等往往用于系统故障之后的排错和恢复。可以看出每一种运行模式所作的初始化工作是不一样的。 Sysvinit执行顺序 /etc/rc.d/rc.sysinit /etc/rc.d/rc 和/etc/rc.d/rcX.d/ (X 代表运行级别 0-6) /etc/rc.d/rc.local X Display Manager（可选） 首先，运行rc.sysinit以便执行一些重要的系统初始化任务。 然后，Sysvinit开始运行/etc/rc.d/rc脚本。根据不同的runlevel，rc脚本将执行/etc/rc.d/rcX.d(X就是runlevel)目录下的所有启动脚本。当所有的初始化脚本执行完毕。该目录下有多个脚本，为了保证系统正常关闭，脚本是要按照顺序执行的在该目录下所有以K开头的脚本都将在关闭系统时调用，字母K之后的数字定义了它们的执行顺序。 然后，Sysvinit运行/etc/rc.d/rc.local脚本。rc.local是Linux 留给用户进行个性化设置的地方。 Sysvinit优缺点 Sysvinit的优点： 是概念简单，开发人员只需要编写启动和停止脚本，概念非常清楚 确定的执行顺序，脚本严格按照启动数字的大小顺序执行，一个执行完毕再执行下一个，这非常有益于错误排查 Sysvinit的缺点： 串行地执行脚本导致Sysvinit运行效率较慢 对动态设备加载等Linux新特性支持不友好 Upstart介绍 开发UpStart的缘由 当Linux内核进入2.6时代时，系统支持热插拔功能，一旦新外设连接到系统，内核便可以自动实时地发现它们，并初始化这些设备，进而使用它们。这为便携式设备用户提供了很大的灵活性。 Sysvinit启动时必须一次性把所有可能用到的服务都启动起来，即使该设备没有连接，因此会造成浪费，比如为了管理打印任务，系统需要启动CUPS等服务。 UpStart基于事件机制，比如U盘插入USB接口后，udev得到内核通知，发现该设备，这就是一个新的事件。UpStart在感知到该事件之后触发相应的等待任务，比如处理/etc/fstab 中存在的挂载点。采用这种事件驱动的模式，upstart 完美地解决了即插即用设备带来的新问题。 UpStart相对于Sysvinit具有如下的优势： 更快地启动系统 当新硬件被发现时动态启动服务 硬件被拔除时动态停止服务 UpStart的原理 Upstart的基本概念和设计清晰明确。UpStart主要的概念是job和event。Job就是一个工作单元，用来完成一件工作，比如启动一个后台服务，或者运行一个配置命令。每个Job都等待一个或多个事件，一旦事件发生，upstart就触发该 job 完成相应的工作。 Job包括包括TaskJob，SeriveJob和AbstractJob。其中SeriveJob代表后台服务进程，一旦开始运行就成为一个后台进程，由init进程管理。 事件是个非常抽象的概念，下面我罗列出一些常见的事件，希望可以帮助您进一步了解事件的含义： 系统上电启动，init 进程会发送&quot;start&quot;事件 根文件系统可写时，相应 job 会发送文件系统就绪的事件 一个块设备被发现并初始化完成，发送相应的事件 某个文件系统被挂载，发送相应的事件 类似 atd 和 cron，可以在某个时间点，或者周期的时间点发送事件 另外一个 job 开始或结束时，发送相应的事件 一个磁盘文件被修改时，可以发出相应的事件 一个网络设备被发现时，可以发出相应的事件 缺省路由被添加或删除时，可以发出相应的事件 系统初始化的过程是在工作和事件的相互协作下完成的，可以大致描述如下: 系统初始化时，init 进程开始运行，init 进程自身会发出不同的事件，这些最初的事件会触发一些工作运行。每个工作运行过程中会释放不同的事件，这些事件又将触发新的工作运行。如此反复，直到整个系统正常运行起来。 UpStart是兼容SysvInit的runlevel的，通过触发执行/etc/init/rc.conf来执行/etc/rc$.d/目录下的所有脚本。 Systemd介绍 Systemd提供了和Sysvinit以及LSBinitscripts兼容的特性。系统中已经存在的服务和进程无需修改。这降低了系统向systemd 迁移的成本，使得Systemd替换现有初始化系统成为可能。 Systemd的启动速度更快，提供了比UpStart更激进的并行启动能力，采用了socket/D-Bus Activation等技术启动服务，提供按需启动的能力，只有在某个服务被真正请求的时候才启动它，当该服务结束，systemd 可以关闭它，等待下次需要时再次启动它。 Systemd还提供如下等特性: 和init比起来引导过程简化了很多 Systemd支持并发引导过程从而可以更快启动 通过控制组来追踪进程，而不是PID 优化了处理引导过程和服务之间依赖的方式 支持系统快照和恢复 监控已启动的服务；也支持重启已崩溃服务 包含了systemd-login模块用于控制用户登录 支持加载和卸载组件 低内存使用痕迹以及任务调度能力 记录事件的Journald模块和记录系统日志的syslogd模块 Systemd的单元概念 系统初始化需要执行的任务非常多。每一个任务都被Systemd 抽象为一个配置单元，即unit。当前单元类型如下： service：代表一个后台服务进程，比如 mysqld。这是最常用的一类。 socket：此类配置单元封装系统和互联网中的一个 套接字 。当下，systemd 支持流式、数据报和连续包的 AF_INET、AF_INET6、AF_UNIX socket 。每一个套接字配置单元都有一个相应的服务配置单元 。相应的服务在第一个&quot;连接&quot;进入套接字时就会启动(例如：nscd.socket 在有新连接后便启动 nscd.service)。 device：此类配置单元封装一个存在于 Linux 设备树中的设备。每一个使用 udev 规则标记的设备都将会在 systemd 中作为一个设备配置单元出现。 mount：此类配置单元封装文件系统结构层次中的一个挂载点。Systemd 将对这个挂载点进行监控和管理。比如可以在启动时自动将其挂载；可以在某些条件下自动卸载。Systemd 会将/etc/fstab 中的条目都转换为挂载点，并在开机时处理。 automount：此类配置单元封装系统结构层次中的一个自挂载点。每一个自挂载配置单元对应一个挂载配置单元 ，当该自动挂载点被访问时，systemd 执行挂载点中定义的挂载行为。 swap: 和挂载配置单元类似，交换配置单元用来管理交换分区。用户可以用交换配置单元来定义系统中的交换分区，可以让这些交换分区在启动时被激活。 target：此类配置单元为其他配置单元进行逻辑分组。它们本身实际上并不做什么，只是引用其他配置单元而已。这样便可以对配置单元做一个统一的控制。这样就可以实现大家都已经非常熟悉的运行级别概念。比如想让系统进入图形化模式，需要运行许多服务和配置命令，这些操作都由一个个的配置单元表示，将所有这些配置单元组合为一个目标(target)，就表示需要将这些配置单元全部执行一遍以便进入目标所代表的系统运行状态。 (例如：multi-user.target 相当于在传统使用 SysV 的系统中运行级别 5) timer：定时器配置单元用来定时触发用户定义的操作，这类配置单元取代了 atd、crond 等传统的定时服务。 snapshot：与 target 配置单元相似，快照是一组配置单元。它保存了系统当前的运行状态。 Systemd的Target和运行级别 systemd使用目标（target）替代了运行级别的概念，提供了更大的灵活性，如您可以继承一个已有的目标，并添加其它服务，来创建自己的目标。通过target文件夹的命令也可以看出对应的runlevel： Sysvinit运行级别 Systemd目标 备注 0 poweroff.target 关闭系统 1,s rescue.target 单用户模式 2,4 multi-user.target 多用户，非图形化 3 multi-user.target 多用户，非图形化 5 graphical.target 多用户，图形化 6 reboot.target 重启 使用C/C++开发新的系统服务 使用C/C++开发新的系统服务可能需要关注如下的内容： 后台服务进程代码不需要执行两次派生来实现后台精灵进程，只需要实现服务本身的主循环即可。 不要调用 setsid()，交给 systemd 处理 不再需要维护 pid 文件。 Systemd 提供了日志功能，服务进程只需要输出到 stderr 即可，无需使用 syslog。 处理信号 SIGTERM，这个信号的唯一正确作用就是停止当前服务，不要做其他的事情。 SIGHUP 信号的作用是重启服务。 需要套接字的服务，不要自己创建套接字，让 systemd 传入套接字。 使用 sd_notify()函数通知 systemd 服务自己的状态改变。一般地，当服务初始化结束，进入服务就绪状态时，可以调用它。 Unit文件的编写 服务配置单元文件以.service为文件名后缀，默认时存放在/lib/systemd/system/目录下，然后链接到/etc/systemd/system/对应的目录下。下面以sshd的为例/etc/system/system/sshd.service： 123456789101112[Unit]Description=OpenSSH server daemon[Service]EnvironmentFile=/etc/sysconfig/sshd #设置环境变量ExecStartPre=/usr/sbin/sshd-keygenExecStart=/usrsbin/sshd –D $OPTIONSExecReload=/bin/kill –HUP $MAINPIDKillMode=processRestart=on-failureRestartSec=42s[Install]WantedBy=multi-user.target #系统以该形式运行时，服务方可启动 文件分为三个小节，其中[Unit]段和[Install]段是所有Unit文件通用的，用于配置服务的描述、依赖和随系统启动方式，而[Service]断则是服务类型的Unit文件（后缀为.service)特有的，用于定义服务的具体管理和操作方法。 在/etc/systemd/system 目录下还可以看到诸如*.wants 的目录，放在该目录下的配置单元文件等同于在[Unit]小节中的 wants关键字，即本单元启动时，还需要启动这些单元。比如您可以简单地把您自己写的 foo.service 文件放入 multi-user.target.wants 目录下，这样每次都会被默认启动了。 [Unit]参数 Description： 一段描述这个Unit文件的文字，通常只是简短的一句话。 Documentation：指定服务的文档，可以是一个或多个文档的URL路径。 Requires：依赖的其他Unit列表，列在其中的Unit模块会在这个服务启动的同时被启动。 Wants：与Requires相似，但只是在被配置的这个Unit启动时，触发启动列出的每个Unit模块，而不去考虑这些模块启动时候是否成功。 After：与Requires相似，但是在后面列出的所有模块启动完成以后，才会启动当前的服务。与Requires不同的是，After不会因为依赖程序在运行过程中停止运行，导致当前服务也停止。 Before：与After相反，在启动指定的任意一个模块之前，都会首先确保当前服务已经运行。 BindsTo：与Requires非常相似，但是一种更强的关联。启动这个服务时会同时启动列出的所有模块，当有模块启动失败时终止当前服务。反之，只要列出的模块全部启动以后，就会自动启动当前服务。并且，这些模块中有任意一个出现意外结束或重启，这个服务会跟着终止或重启。 PartOf：这是一个BindsTo作用的子集，仅在列出的任何模块失败或重启时，终止或重启当前服务，而不会随列出模块的启动而启动。 OnFailure：当这个模块启动失败时，就自动启动列出的每个模块。 Conflicts：与这个模块有冲突的模块，如果列出的模块中有已经在运行的，则会将已启动的冲突模块停止，并启动当前模块；反过来，冲突模块启动时会把当前模块停止。 上面的这些配置，除了Description外，其他都可以被添加多次。比如After参数，可以使用多个After参数，也可以在一行内使用空格分割，写多个依赖模块。 [install]参数 WantedBy：和前面Wants作用相似，但此处表示当前模块被依赖。 RequiredBy：和前面的Requires作用相似，但此处表示当前模块被依赖。 Also：当这个服务被enable/disable时，将自动enable/disable后面列出的每个模块。 [service]参数 服务生命周期控制相关的参数 Type：服务的类型，常用的有simple（默认类型）和forking，默认的simple类型可以适用于绝大多数场景，因此一般可以忽略者这个参数的配置。对于服务进程启动后通过fork系统调用创建子进程，然后关闭应用程序本身进程的情况，则应该将Type的值设置为forking；否则Systemd将不会跟踪子进程的行为，而认为服务已经退出。 RemainAfterExit：指为true或false（也可以写yes或no），默认为false。当配置为true时，Systemd只会负责启动服务进程，之后即便服务进程退出了，Systemd也仍然会认为这个服务还在运行中。这个配置主要是提供给一些并非常驻内存，而是启动注册后立即退出，然后等待消息按需启动的特殊类型服务使用的。 ExecStart：这个参数是几乎每个“.service”文件都会有的，指定服务启动的主要命令，在每个配置文件中只能使用一次. ExecStartPre：指定在启动执行ExecStart命令前的准备工作，在同一个配置文件中可以有多个，所有命令会按照文件中书写的顺序依次被执行。 ExecStartPost：指定在启动执行ExecStart命令后的收尾工作，在同一个配置文件中也可有多个。 TimeoutSec：快速设置TimeoutStartSec和TimeoutStopSec参数成指定值。（另外，关于默认时间设定都在systemd配置文件中的DefaultTimeoutStartSec、DefaultTimeoutStopSec和DefaultRestartSec字段进行配置，如果这些字段缺省，DefaultTimeoutStartSec和DefaultTimeoutStopSec的默认指为90s，DefaultRestartSec默认为100ms） TimeoutStartSec：启动服务时的等待秒数，如果超出这个时间服务仍然没有执行完所有的启动命令，则Systemd会认为服务自动失败。这一配置对于使用Docker容器托管的应用十分重要。由于Docker第一次运行时可能会需要从网络上下载服务的镜像文件，因此造成比较严重的延时，容易被Systemd误判断为启动失败而杀死。通常，对于这种服务，需要将TimeoutStartSec设置为0，关闭超时检测。 ExecStop：停止服务所需要执行的主要命令，在每个配置文件中只能够有一个。 ExecStopPost：指定在ExecStop命令执行后的收尾工作，在同一配置文件中可以有多个。 TimeoutStopSec：停止服务时的等待秒数，如果超过这个时间服务仍然没有停止，Systemd会使用SIGKILL信号强行干掉服务进程。 Restart：这个值用于指定在什么情况下需要重启服务进程。常用的值有：no、no-success、on-failure、on-abnormal、on-abort和always。默认值为no，即不会自动重启服务。这些不同的值分别表示在哪些情况下，服务会重新启动。 RestartSec：如果服务需要被重启，这个参数的值为服务被重启前的等待秒数。默认为100ms。 ExecReload：重新加载服务所需执行的主要命令。 服务上下文配置相关的参数 Environment：为服务添加环境变量，格式直接为Environment=“foo=bar”（看了一下Systemd的手册，这个参数所接受的格式有些奇葩，建议是直接“foo=bar”，取的时候使用${foo}进行获取） EnvironmentFile：指定加载一个包含服务所需的环境变量列表的文件，文件中的每一行都是一个环境变量的定义。顺便提一下，建议使用的时候将=换成=-，如EnvironmentFile=-/etc/my.env，和=的区别是，使用=-时，假如/etc/my.env文件不在也不会报错。 Nice：服务的进程优先级，指越小优先级越高，默认为0，。其中-20为最高优先级，19为最低优先级。 WorkingDirectory：指定当前服务的工作目录。 RootDirectory：指定当前服务进程的根目录（/目录）。如果配置了这个参数，服务将无法访问指定目录外的任何文件。 User：指定运行服务的用户，会影响服务对本地文件系统的访问权限。 Group：指定运行服务的用户组，会影响服务对本地文件系统的访问权限。 MountFlags：这个值其实是服务的Mount Namespace的配置，会影响服务进程上下文中挂载点的信息，即服务是否会继承主机上已有的挂载点，以及如果服务运行时执行了挂载或卸载设备的操作，是否会真实地在主机上产生效果。可选值为shared、slave和private，具体作用如下表所示： LimitCPU/LimitSTACK/LimitNOFILE/LimitNPROC等：限定服务可用的系统资源量，CPU、程序堆栈、文件句柄数量、子进程数量等 Systemd命令行工具的使用 systemd 的主要命令行工具是systemctl，可以替换service、chkconfig以及telinit命令的使用。 Systemd命令和sysvinit命令的对照表 Sysvinit命令 Systemd命令 备注 service foo start systemctl start foo.service 用来启动一个服务 (并不会重启现有的) service foo stop systemctl stop foo.service 用来停止一个服务 (并不会重启现有的) service foo restart systemctl restart foo.service 用来停止并启动一个服务 service foo reload systemctl reload foo.service 当支持时，重新装载配置文件而不中断等待操作 service foo condrestart systemctl condrestart foo.service 如果服务正在运行那么重启它 service foo status systemctl status foo.service 汇报服务是否正在运行 ls /etc/rc.d/init.d/ systemctl list-unit-files --type=service 用来列出可以启动或停止的服务列表 chkconfig foo on systemctl enable foo.service 在下次启动时或满足其他触发条件时设置服务为启用 chkconfig foo off systemctl disable foo.service 在下次启动时或满足其他触发条件时设置服务为禁用 chkconfig foo systemctl is-enabled foo.service 用来检查一个服务在当前环境下被配置为启用还是禁用 chkconfig –list systemctl list-unit-files --type=service 输出在各个运行级别下服务的启用和禁用情况 chkconfig foo –list ls /etc/systemd/system/*.wants/foo.service 用来列出该服务在哪些运行级别下启用和禁用 chkconfig foo –add systemctl daemon-reload 当您创建新服务文件或者变更设置时使用 telinit 3 systemctl isolate multi-user.target (OR systemctl isolate runlevel3.target OR telinit 3) 改变至多用户运行级别 systemd电源管理命令 命令 操作 systemctl reboot 重启机器 systemctl poweroff 关机 systemctl suspend 待机 systemctl hibernate 休眠 systemctl hybrid-sleep 混合休眠模式（同时休眠到硬盘并待机）","tags":[{"name":"Linux","slug":"Linux","permalink":"http://ruanxinyu.github.io/tags/Linux/"}]},{"title":"Ubuntu下KeepAlived的安装与配置","date":"2018-09-18T12:42:46.000Z","path":"posts/技术文档/Ubuntu下KeepAlived的安装与配置/","text":"KeepAlived介绍 Keepalived是一个基于VRRP协议来实现的服务高可用方案，可以利用其来避免IP单点故障，一般与其它负载均衡技术（如lvs、haproxy、nginx）一起工作来达到集群的高可用。 健康检查和失败切换是keepalived的两大核心功能。 keepalived的健康检查支持tcp三次握手、icmp请求、http请求、udp和echo请求等方式对负载均衡器后面的实际的服务器)进行保活，具体采用哪种检查方式可以根据自己的业务需要进行选择； 失败切换主要是应用于配置了主备模式的负载均衡器， 由VRRP(虚拟路由冗余协议）协议实现，对外提供一个VIP（虚拟IP），VIP在其中master机器上，当该机器出现故障时，VIP会自动漂移到slave的机器上，从而保证对外的功能是正常的。如果mastr机器功能正常之后，会自动加入到服务器集群中，无需人工干预，只需要人工做修复故障的服务器。 VRRP协议介绍 VRRP（虚拟路由协议，virtual redundant routing protocol)是为消除网络设备单点故障而设计的主备模式的协议，使得在发生故障时，可以在不影响内外数据通信，不修改内部网络的网络参数的情况下切换设备。 VRRP协议通过配置虚拟路由ID(VRID)来将两台或多台设备虚拟成一个虚拟设备，对外提供一个或多个虚拟IP(VIP)和虚拟的MAC地址（VMC），通过该VIP和VMC对外提供服务，可以保证在设备切换时网络参数不变。所以当VIP在哪一台设备上，则该设备为master节点对外提供服务，其他的节点为backup节点不实际对外提供服务。 VRRP协议通过心跳算法自动选举哪个节点为master节点，默认使用多播数据来传输VRRP数据。通过配置文件可以指定每个设备的优先级，所以在初始状态时，优先级最大的为master节点。VRRP运行时只有MASTER路由器定时发送VRRP通告信息，表示master工作正常，backup只接收VRRP数据，不发送数据，如果一定时间内没有接收到master的通告信息，各backup将宣告自己成为master，发送通告信息，重新进行master选举状态。 KeepAlived的安装 该教程使用的Ubuntu版本是18.04.1版本，Ubuntu的安装教程参考。KeepAlived可以直接通过apt-get安装，也可以通过源码编译安装。 apt-get安装 Ubuntu下执行sudo apt-get install keepalived命令即可安装。 通过which keepalived可以看到KeepAlived是安装在/usr/sbin/keepalived下。 使用sudo service keepalived start即可启动KeepAlived。 源码编译安装 源码安装的脚本可以点击此处下载： keepalived_install.sh，下面对安装过程做一下说明。 首先安装编译工具和openssl，下载KeepAlived源码并解压，然后执行源码编译三件套（./configure &amp;&amp; make &amp;&amp; make install），我们安装的目录为/usr/local/keepalived： 1234567sudo apt-get install build-essential libssl-dev # 安装编译工具和openssl依赖wget http://www.keepalived.org/software/keepalived-2.0.7.tar.gz # 下载源码tar -zxvf keepalived-2.0.7.tar.gz # 解压源码cd keepalived-2.0.7/./configure --prefix=/usr/local/keepalived # 配置keepalived的安装目录make # 编译源码sudo make install # 安装到安装目录，需要使用root权限 可能遇到的问题 执行./configure时提示g++ is not found 源码安装需要安装编译器将源码转换为二进制可执行文件，因此执行sudo apt-get install build-essential安装编译器即可 执行./configure时提示OpenSSL is not properly installed on your system 你的系统没有安装openssl，执行sudo apt-get install libssl-dev即可 守护进程和开机启动 由于Ubunt 18.04.1默认使用Systemd作为init程序，因此设置守护进程也采用该方式，了解详细请参考 首先，创建相关文件的链接： 1234sudo mkdir -p /etc/keepalivedsudo ln -s /usr/local/keepalived/sbin/keepalived /usr/sbin/sudo ln -s /usr/local/keepalived/etc/keepalived/keepalived.conf /etc/keepalived/keepalived.confsudo ln -s /usr/local/keepalived/etc/sysconfig/keepalived /etc/default/keepalived 我们还是采用systemd的方式添加到系统服务，执行如下命令： 123456789101112131415161718192021222324(cat &lt;&lt;EOF[Unit]Description=Keepalive Daemon (LVS and VRRP)After=syslog.target network-online.targetWants=network-online.target# Only start if there is a configuration fileConditionFileNotEmpty=/etc/keepalived/keepalived.conf[Service]Type=forkingKillMode=process# Read configuration variable file if it is presentEnvironmentFile=-/etc/default/keepalivedExecStart=/usr/sbin/keepalived $KEEPALIVED_OPTIONSExecReload=/bin/kill -HUP $MAINPID[Install]WantedBy=multi-user.targetEOF) &gt; keepalived.servicesudo cp -a keepalived.service /lib/systemd/system/keepalived.servicesudo ln -s /lib/systemd/system/keepalived.service /etc/systemd/system/multi-user.target.wants/keepalived.service 启动keepalived进程，并设置为开机启动，通过sudo systemctl status keepalived查看状态： 123sudo systemctl start keepalivedsudo systemctl status keepalivedsudo systemctl enable keepalived KeepAlive的配置 keepalived.conf 在keepalived的安装目录/usr/local/keepalived/etc/keepalived/samples/有很多样例配置，每一种配置对应的都是一种使用场景，后续会做详细说明，因此在此处不做过多的分析。 此处使用最简单的配置入门，假设我们以/tmp/目录下是否存在service_ok这个文件来判断服务是否可用。可参考样例/usr/local/keepalived/etc/keepalived/samples/keepalived.conf.vrrp.localcheck 12345678910111213141516171819vrrp_script chk_service_ok &#123; script \"ls /tmp/service_ok\" # 检查文件是否存在 interval 2 # 每两秒钟检查一次&#125;vrrp_instance VI_1 &#123; interface enp0s3 # 指定网卡 state MASTER # 角色，主机为MASTER，备机为BACKUP virtual_router_id 51 # 虚拟路由Id，相同的ID表示在相同的组 priority 100 # 优先级，MASTER的优先级要比BACKUP的大 virtual_ipaddress &#123; # 虚拟IP地址，即VIP 192.168.42.23/25 &#125; track_script &#123; # 设置vrrp检查脚本的名称 chk_service_ok &#125;&#125; KeepAlived的验证 我们使用两台虚拟机，IP地址分别为主机vm01（192.168.42.21）和备机vm02（192.168.42.22）， VIP为192.168.42.23。安装好KeepAlived后, 编辑配置文件sudo vim /etc/keepalived/keepalived.conf 主机vm01（192.168.42.21）的配置如下： 12345678910111213141516171819vrrp_script chk_service_ok &#123; script \"ls /tmp/service_ok\" interval 2&#125;vrrp_instance VI_1 &#123; interface enp0s3 state MASTER virtual_router_id 51 priority 100 virtual_ipaddress &#123; 192.168.42.23/25 &#125; track_script &#123; chk_service_ok &#125;&#125; 备机vm02（192.168.42.22）的配置如下，相对于vm01，只修改state和priority: 12345678910111213141516171819vrrp_script chk_service_ok &#123; script \"ls /tmp/service_ok\" interval 2&#125;vrrp_instance VI_1 &#123; interface enp0s3 state BACKUP virtual_router_id 51 priority 80 virtual_ipaddress &#123; 192.168.42.23/25 &#125; track_script &#123; chk_service_ok &#125;&#125; 首先，我们在两台机器上都创建一个system_ok文件，表示机器是OK的，touch /tmp/service_ok。然后执行sudo systemctl restart keepalived重新启动两台机器的keepalived。 分别在两台机器上执行ip a查看机器的网络信息，可以发现VIP（192.168.42.23）已经在主机vm01上，我们通过ssh ruan@192.168.42.23登陆到的也是主机vm01。 我们删除主机vm01上的/tmp/service_ok文件，然后重新执行ip a，发现VIP（192.168.42.23）已经漂移到备机vm02上，此时我们通过ssh ruan@192.168.42.23登陆则是备机vm02。即当主机故障时，业务可以自动切换至备机。 我们重新创建主机vm01上的/tmp/service_ok文件，，然后重新执行ip a，发现VIP（192.168.42.23）已经重新漂移到备机vm01上，此时我们通过ssh ruan@192.168.42.23登陆重新回到主机vm01。即当主机恢复时，可以自动将该主机加入到服务器群提供服务。","tags":[{"name":"环境搭建","slug":"环境搭建","permalink":"http://ruanxinyu.github.io/tags/环境搭建/"}]},{"title":"VirtualBox安装Ubuntu教程","date":"2018-09-16T11:59:38.000Z","path":"posts/技术文档/VirtualBox安装Ubuntu教程/","text":"基础准备工作 本教程使用的VirtualBox版本为5.2.18，Ubuntu版本为server 18.04.1。 首先，下载Ubuntu Server镜像，本文以ubuntu-18.04.1为例，可以从华为开源镜像站提供加速下载，地址为： http://mirrors.huaweicloud.com/repository/ubuntu-releases/18.04.1/ubuntu-18.04.1-live-server-amd64.iso 下载并安装VirtualBox，下载地址为: https://download.virtualbox.org/virtualbox/5.2.18/VirtualBox-5.2.18-124319-Win.exe 创建虚拟机 打开VirtualBox，点击新建, 输入名称，比如叫做UbuntuTemplate，之所以叫这个名称是因为如果后续需要多个Ubuntu虚拟机的话，可以直接复制该虚拟机，这样每次都可以有一个全新的虚拟机。操作系统版本选择Ubuntu(64bit), 点击下一步，内存选择512M或者1024M都可以，因为我们下载的镜像是没有桌面的，因此对内存要求没有那么大。 选择现在创建虚拟磁盘，当然，如果也可以使用已经存在的磁盘，下一步，磁盘类型我更愿意用VMDK(虚拟机磁盘)，因此该磁盘VMWare也是可以使用的，磁盘大小选择动态分配大小。 此处有两个地方需要注意一下： 选择磁盘的保存位置默认为虚拟机名称，这个时候是保存在用户目录下的，也就是C盘，因此最好是自己选择路径保存到其他目录，以免占用过多的C盘空间。 此处设置的其实是磁盘的最大大小，默认的10G肯定是太小了，可以直接改成100G, 这个是最大值，不是立即分配这么大的磁盘空间。 设置虚拟机 设置粘贴板 导入操作系统镜像 从设置的系统标签页中可以看出系统的启动顺序是“软驱”-&gt;“光驱”-&gt;“硬盘”，因此只要在光驱中导入刚刚下载的操作系统镜像，启动的虚拟机的时候就会开始安装操作系统。 设置虚拟机网络 虚拟机的网络连接方式有很多中，因为涉及到很多网络知识，总结起来就是一张表，如下所示： 因为在做实验的情况下，默认都是希望虚拟机能够访问外网，虚拟机与虚拟机之间，虚拟机与宿主机之间也是可以相互访问的，因此选择桥接模式，网卡选择你当前正在使用的网卡，这样你的虚拟机就相当于是另外与宿主机相同的电脑。 安装Ubuntu 通过方向键移动，回车确认，如果发现鼠标在虚拟机捕获出不来了，可以按键盘右边的CTRL键 启动虚拟机，语言选择英文，然后选择Install Ubuntu。 如果你的宿主机连接的是路由器，那么一般都是通过DHCP自动分配的IP地址，这样的话虚拟机也能通过DHCP自动获取IP地址，从下图中可以看出对应的IP。 如果你的宿主机能够正常上网就不需要配置proxy，直接回车确认下一步就可以。 配置Ubuntu的源，也就是安装软件的默认下载地址，为了提高下载速度，我一般使用华为开源镜像站的源：https://mirrors.huaweicloud.com/ubuntu/ 我们可以手动对磁盘进行分区，但是这个需要对Linux很熟悉，因此此处我们直接选择Use An Entre Disk，让操作系统自动分区。 接下来会让你确认磁盘和分区信息，我们继续就可以。 然后输入你的主机名和密码等信息，ssh identify是用于免密码登陆linux的，一般不需要设置。 接下来会让你安装一些默认的应用程序，也可以什么都不装，保持一个最纯净的系统。 等待安装完毕，就可以开开心心重启了， 重启的过程中VirtualBox会提示你是否将光驱中的镜像移除掉，直接回车就可以移除就剋有了，这样就可以直接从磁盘启动你刚刚安装的系统，否则还是会从光驱中启动。 启动后输入用户名密码，输入ip a命令可以看到虚拟机的IP地址: 由于Ubuntu自带的控制台使用不是很方便，因此可以直接通过xshell连接该虚拟机 VirtualBox的使用说明 鼠标捕获 如果发现鼠标在虚拟机捕获出不来了，可以按键盘右边的CTRL键 保存快照 如下所示，一般第一次安装的时候都做一次快照，因此这样即使后续做了破坏性的操作也可以快速还原。 快速保存并恢复 关闭虚拟机时可以选择快速休眠，下次启动的时候就可以快速从将虚拟机从当前状态恢复。 复制虚拟机 在做实验的时候需要使用多个虚拟机，不用重新安装，直接复制虚拟机即可，在对应的虚拟机上右键就可以，需要在关机的状态下才能复制。但是在复制虚拟机之后最后刷新一下网卡的MAC地址，否则可能会出现相同MAC地址的情况。","tags":[{"name":"环境搭建","slug":"环境搭建","permalink":"http://ruanxinyu.github.io/tags/环境搭建/"}]},{"title":"每天学习一个Linux命令（3）：echo命令","date":"2018-05-02T11:20:58.000Z","path":"posts/每天学习一个Linux命令/每天学习一个Linux命令（3）：echo命令/","text":"echo命令用于输出字符串，可以通过参数和转义等来控制输出格式。 语法 1echo [-neE] [arg ...] 参数 -n 打印不添加换行符 -e 使能转义字符 转义字符 \\b 退格键，即删除一个字符 \\c 抑制后续的输出 \\n 换行 \\t tab键 \\\\ 斜杠 使用小技巧 echo是shell的内部命令，因此查看帮助需要使用help echo echo后的字符串如果使用单引号括起来，则转义和变量都失效(重要) 通过-e参数和\\c转义可以控制换行的输出 常用范例 范例1： 显示普通字符串 命令： echo &quot;this is a text&quot; # 也可以不加引号 输出： 1this is a text 范例2： 显示转义字符 命令： echo &quot;\\&quot;this is a text\\&quot;&quot; 输出： 1&quot;this is a text&quot; 范例3： 显示变量 命令： 12text=\"ffff\"echo \"this is a $&#123;text&#125;\" 输出： 1this is a ffff 范例4： 输出换行 命令： 12echo -e \"this \\n\"echo \"is a text\" 输出： 123this is a text 范例5： 不输出换行 命令： 12echo -e \"this \\c\"echo \"is a text\" 输出： 1this is a text （注：相比于上面的命令，少了两个换行） 范例6： 禁止显示转义和变量（使用单引号） 命令： echo '$name\\&quot;' # 这个很重要 输出： 1$name\\&quot; 范例7： 显示命令执行的结果 命令： 12echo `date`echo $(date) 输出： 12Tue May 1 21:16:57 CST 2018Tue May 1 21:16:57 CST 2018","tags":[{"name":"Linux","slug":"Linux","permalink":"http://ruanxinyu.github.io/tags/Linux/"}]},{"title":"每天学习一个Linux命令（2）：cd命令","date":"2018-05-01T10:00:58.000Z","path":"posts/每天学习一个Linux命令/每天学习一个Linux命令（2）：cd命令/","text":"cd命令用于切换至目标目录，以/开头的则为绝对路径，否则为相对路径。 语法 1cd [dir] 使用小技巧 切换至用户所示在的目录可以使用cd ~ 或者 cd(不带参数) &quot;.&quot; 则是表示目前所在的目录，&quot;..&quot; 则表示目前目录位置的上一层目录 通过pwd命令可以打印当前所在的目录 cd -表示切换至上一次所在的目录 常用范例 范例1： 切换至根目录下的var目录下 命令： cd /var(绝对路径) 范例2： 切换至当前目录下的var目录下 命令： cd var(相对目录) 范例3： 切换至上两级的目录 命令： cd ../../ 范例4： 切换至包含空格的目录 命令： cd 'aa aa'或者cd aa\\ aa 范例5： 切换至当前用户的home目录 命令： cd ~或者cd 范例6： 打印当前所在的目录 命令： pwd 范例7： 切换到上一次所在的目录 命令： cd -","tags":[{"name":"Linux","slug":"Linux","permalink":"http://ruanxinyu.github.io/tags/Linux/"}]},{"title":"每天学习一个Linux命令（1）：ls命令","date":"2018-05-01T08:18:02.000Z","path":"posts/每天学习一个Linux命令/每天学习一个Linux命令（1）：ls命令/","text":"ls命令是linux下最常用的命令。ls命令就是list的缩写，用于显示指定工作目录下之内容（列出目前工作目录所含之文件及子目录)。 语法 1ls [OPTION]... [FILE]... 参数 -a 显示所有文件及目录，包括以.开头的隐藏文件 -A 同 -a ，但不列出 “.” (目前目录) 及 “…” (父目录) -l 除文件名称外，亦将文件型态、权限、拥有者、文件大小等资讯详细列出 -h human-readable，默认-l参数显示出来的文件大小是字节大小，-h参数可以按照KB/MB/GB来显示 -r reverse，将文件以相反次序显示(原定依英文字母次序) -t 将文件依建立时间之先后次序列出 -F 在列出的文件名称后加一符号；例如可执行档则加 “*”, 目录则加 “/” -R recursive，若目录下有文件，则以下之文件亦皆依序列出 使用小技巧 一般Linux操作系统都会存在一个ll的命令，相当于ls -l --color=auto ls命令使支持*通配符的 常用范例 范例1： 列出/var目录下的文件 命令： ls /var 结果： 范例2： 列出目前工作目录下所有名称是s开头的文件，越新的排越后面 命令： ls -ltr s* 结果： 范例3： 将/bin目录以下所有目录及文件详细资料列出 命令： ls -lR /bin","tags":[{"name":"Linux","slug":"Linux","permalink":"http://ruanxinyu.github.io/tags/Linux/"}]},{"title":"如何使用GitHubPages搭建个人博客","date":"2018-04-30T12:07:11.000Z","path":"posts/博客/如何使用GitHubPages搭建个人博客/","text":"我对个人博客的要求 我对个人博客有如下几点要求，因此最终选定通过Hexo+GitHub Pages来搭建。 存在独立域名，别人能通过互联网访问 通过Git进行管理，支持MarkDown语法 不需要自己购买主机维护环境 支持评论分享等功能 配置GitHub Pages 前提： 您需要有一个GitHub的账号，请将下文中的ruanxinyu替换为您的用户名。 点击此处，创建一个仓库， 一般GitHub Pages对应的仓库名称规则为： 用户名.github.io， 如下图所示： 现在仓库有了，但是在推送内容之前还需要设置GitHub的SSH秘钥，通过如下命令生成并查看SSH秘钥，如果需要输入，一路回车就即可： 12ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot; cat /c/Users/you/.ssh/id_rsa.pub 进入到GitHub的Setting页面，添加SSH秘钥，如下图所示： 下面，我们往仓库中推送一个index.html页面来充当我们的博客，可以参考如下命令：（Windows下可以使用git bash终端运行如下命令） 123456git clone git@github.com:RuanXinyu/ruanxinyu.github.io.gitcd ruanxinyu.github.ioecho \"Hello World\" &gt; index.htmlgit add --allgit commit -m \"Initial commit\"git push -u origin master 此时你的博客已经产生，网址为：https://ruanxinyu.github.io/, 点击即可访问: 安装并体验Hexo GitHub Pages相当于一个静态网站，您需要将您的博客全部转换为html页面才可以，当然，这个繁琐的过程不需要我们自己去完成，当前有两个框架可以做这个事情：Jekyll和Hexo，下面我就介绍一下如何通过Hexo快速的发表自己的文章。 Hexo是一个NodeJS实现的博客框架，官方文档地址为： https://hexo.io/zh-cn/docs/, 文档存在中文哦，给力吧！下面说一下使用过程： 执行npm install -g hexo-cli命令安装Hexo（在安装Hexo之前，请您自行安装NodeJS和NPM） 执行hexo init xxx创建一个博客 执行hexo generate渲染MarkDown博文，渲染出来的结果在public目录下 执行npm install hexo-server --save安装server工具，然后执行hexo server，访问http://localhost:4000/网址可在本地访问你的博客，该方式主要用于调试。 执行hexo new xxx创建一篇博文，博文的文件存放在source\\_posts目录下，编辑文档内容，hexo server会自动检测文章的变化并运行generate命令，因此刷新本地网址即可看到你更新的内容。 在将博文推送到GitHub Pages之前，执行npm install hexo-deployer-git --save安装部署工具，然后将根目录下的_config.yml文件中的如下内容更改为您的GitHub Pages的仓库地址，注意是git@开头的地址，否则在使用hexo deploy会报错 1234deploy: type: git repo: git@github.com:RuanXinyu/ruanxinyu.github.com.git branch: master 执行hexo deploy， Hexo将渲染后的页面放到.deploy_git目录，本地提交后，自动将您的博文推送到GitHub Pages所对应的仓库 此时，访问您的GitHubPages就可以看到你更新的文章内容。 切换到Indigo主题 Hexo默认使用的是landscape主题，如果不符合自己的审美，可以在https://hexo.io/themes/查找自己喜欢的主题。我比较喜欢indigo主题，该主题有平铺和卡片两种显示方式，卡片模式的代码是在card分支下，下面以此主题为例。 克隆该主题的代码仓库，如下： 1git clone -b card https://github.com/yscoder/hexo-theme-indigo.git themes/indigo 安装Indigo主题依赖的插件 1234npm install hexo-renderer-less --savenpm install hexo-generator-feed --savenpm install hexo-generator-json-content --savenpm install hexo-helper-qrcode --save 修改顶层配置文件_config.yml中的theme: landscape为theme: indigo，刷新页面即可看到新的主题。 配置Hexo和Indigo主题 Hexo的配置文件为_config.yml，Indigo主题的配置文件在themes/indigo/_config.yml。 Hexo的配置说明文档地址为： https://hexo.io/zh-cn/docs/configuration.html Indigo主题的配置说明文档地址为： https://github.com/yscoder/hexo-theme-indigo/wiki/%E9%85%8D%E7%BD%AE 官方文档已经描述很清楚，当然，最简单的方式是基于别人的进行修改，因此在此我贡献出我的配置，然后对几个点做一下说明。 Hexo配置文件样例 language: zh-CN: 语言的种类可以参考themes/indigo/languages目录下的文件 post_asset_folder: true: 在创建博文的时候自动生成对应的文件夹，以存放该博文对应的图片 配置文件末尾的feed和jsonContent两部分分别是hexo-generator-feed和hexo-generator-json-content两个插件的配置，该部分说明在Indigo的说明文章中。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: RuanXinYu's Blogsubtitle: 路漫漫其修远兮，吾将上下而求索description: 阮新宇的成长记录keywords: Ruandyauthor: 阮新宇email: 1096421257@qq.comurl: http://ruanxinyu.github.io/language: zh-CNtimezone: Asia/Shanghai# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'root: /permalink: :year/:month/:day/:title/permalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: truerelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: false tab_replace: true # Home page setting# path: Root path for your blogs index page. (default = '')# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: path: '' per_page: 20 order_by: -date # Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable paginationper_page: 20pagination_dir: page# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: indigo# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: git@github.com:RuanXinyu/ruanxinyu.github.com.git branch: masterfeed: type: atom path: atom.xml limit: 0jsonContent: meta: false pages: false posts: title: true date: true path: true text: true raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: true Indigo配置文件样例 该主题对应的图片在themes/indigo/source/img，请自行进行替换 样例内容配置了百度统计功能，下文有详细描述 样例内容配置了gitment的评论功能，下文有详细描述 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162# hexo-theme-indigo# https://github.com/yscoder/hexo-theme-indigo# 添加新菜单项遵循以下规则# menu:# link: fontawesome图标，省略前缀，本主题前缀为 icon-，必须# text: About 菜单显示的文字，如果省略即默认与图标一致，首字母会转大写# url: /about 链接，绝对或相对路径，必须。# target: _blank 是否跳出，省略则在当前页面打开menu: home: text: 主页 url: / archives: text: 归档 url: /archives tags: text: 标签 url: /tags th-list: text: 分类 url: /categories github: url: https://github.com/RuanXinyu target: _blank# 你的头像urlavatar: /img/avatar.png# avatar linkavatar_link: /# 头像背景图brand: /img/brand.jpg# faviconfavicon: /favicon.ico# emailemail: 1096421257@qq.com# 设置 Android L Chrome 浏览器状态栏颜色color: '#3F51B5'# 页面标题tags_title: 标签archives_title: 归档categories_title: 分类# 文章截断excerpt_render: falseexcerpt_length: 200excerpt_link: 阅读全文...mathjax: falsearchive_yearly: true# 是否显示文章最后更新时间show_last_updated: true# 是否开启分享share: true# 是否开启打赏，关闭 reward: falsereward: title: 谢谢您的打赏 wechat: /img/wechat.png #微信，关闭设为 false alipay: /img/alipay.jpg #支付宝，关闭设为 false# 是否开启搜索search: true# 是否大屏幕下文章页隐藏导航hideMenu: false# 是否开启toc# toc: falsetoc: list_number: true # 是否显示数字排序# 文章页留言内容，hexo中所有变量及辅助函数等均可调用，具体请查阅 hexo.iopostMessage: 原始链接：&lt;a href=\"&lt;%- url_for(page.path).replace(/index\\.html$/, '') %&gt;\" target=\"_blank\" rel=\"external\"&gt;&lt;%- page.permalink.replace(/index\\.html$/, '') %&gt;&lt;/a&gt;# 站长统计，如要开启，输入CNZZ站点id，如 cnzz: 1255152447cnzz: false# 百度统计，如要开启，改为你的 keybaidu_tongji: b4c4998e548a16b827d4ffe9dbe2b47b# 腾讯分析，如要开启，输入站点idtajs: false# googlegoogle_analytics: falsegoogle_site_verification: false# sogou站长验证 http://zhanzhang.sogou.com/sogou_site_verification: false# lessless: compress: true paths: - source/css/style.less# 以下评论插件开启一个即可# 是否开启 disqusdisqus_shortname: false# 是否开启友言评论, 填写友言用户iduyan_uid: false# 是否使用 gitment，https://github.com/imsun/gitment#gitment: falsegitment: owner: RuanXinyu repo: ruanxinyu.github.com client_id: 2a6e23cf2e39e54ef316 client_secret: f237d3eb9fc94607a0454f894b143efe72eb8aca# Valine Comment system. https://valine.js.orgvaline: enable: false # 如果你想使用valine，请将值设置为 true appId: # your leancloud appId appKey: # your leancloud appKey notify: false # Mail notify verify: false # Verify code avatar: mm # Gravatar style : mm/identicon/monsterid/wavatar/retro/hide placeholder: Just go go # Comment Box placeholder guest_info: nick,mail,link # Comment header info pageSize: 10 # comment list page size# 是否开启Hyper Comments，填写id则启用，false则禁用。http://hypercomments.com# Hyper Comments support. Write your id here, or false to disablehyper_id: false# 规范网址# 让搜索引擎重定向你的不同域名、不同子域、同域不同目录的站点到你期望的路径# https://support.google.com/webmasters/answer/139066# 假设配置为 canonical: http://imys.net，那么从搜索引擎中 www.imys.net 进入会重定向到 imys.netcanonical: false# 版权起始年份since_year: 2015# 用户页面中作者相关的描述性文字，如不需要设为 falseabout: 用户页面中作者相关的描述性文字，如不需要设为 false# “不蒜子”访问量统计，详见 http://ibruce.info/2015/04/04/busuanzi/visit_counter: site_uv: 站点总访客数： site_pv: 站点总访问量：# 动态定义titletitle_change: normal: 欢迎回来！ leave: 您还会回来吗？# 设置为 true 发布后将使用 unpkg cdn 最新的主题样式# 如果想让你的自定义样式生效，把此项设为 falsecdn: true# 设置为 true 将使用 lightbox render 图片lightbox: true# icp备案号 ICP_license: 京ICP备1234556号-1ICP_license: false 配置百度统计 百度统计是可以免费试用的，进入到百度统计注册账号，然后进入到管理页面添加你的网址，如下图所示： 添加完成之后，你就可以看到你的Key，如下图所示： 将你的key值添加到indigo主题的配置文件中即可，如下所示： 12# 百度统计，如要开启，改为你的 keybaidu_tongji: b4c4998e548a16b827d4ffe9dbe2b47b 访问百度统计查看你的网站访问情况等数据。 配置评论功能 友言评论功能已经关闭，因此采用的是gitment插件，该插件是依托于GitHub的Issue的功能的。采用npm install --save gitment命令安装gitment。 点击此处注册OAuth Application。其他内容可以随意填写，但要确保填入正确的 callback URL（一般是评论页面对应的域名，比如： https://ruanxinyu.github.io ）。 你会得到一个client ID和一个client secret，将其配置到indigo的配置文件中： 1234567# 是否使用 gitment，https://github.com/imsun/gitment#gitment: falsegitment: owner: RuanXinyu repo: ruanxinyu.github.com client_id: 2a6e23cf2e29e54ef316 client_secret: f237d3eb9fc94607a0354f894b143efe52eb8aca 页面发布后，你需要访问页面并使用你的GitHub账号登录（请确保你的账号是第二步所填repo的owner），点击初始化按钮，之后其他用户即可在该页面发表评论。 如果初始化时出现Error：validation failed，则说明你的网址超过50个字符，这是由GitHub的Issue限制的，此时可以修改themes\\indigo\\layout\\_partial\\plugins\\gitment.ejs文件的如下内容，以时间为ID： 123456789var gitment = new Gitment(&#123; id: '&lt;%- page.date %&gt;', owner: '&lt;%- theme.gitment.owner %&gt;', repo: '&lt;%- theme.gitment.repo %&gt;', oauth: &#123; client_id: '&lt;%- theme.gitment.client_id %&gt;', client_secret: '&lt;%- theme.gitment.client_secret %&gt;', &#125;,&#125;) 现在在你的博文下就可以进行评论了： 在你所指定的GitHub仓库中的Issue中也会有你的评论信息： 如果出现其他问题，可以参考：https://imsun.net/posts/gitment-introduction/和https://www.jianshu.com/p/57afa4844aaa 使用个人独立域名 经过上述的配置，我们的博客已经能够在公网访问，但是如果您还想需要自己的域名，而不是以github.io结尾的，比如我的域名为：blog.ruanxinyu.cn，那么您可以按照下面的说明进行配置。 配置域名解析DNS 首先您需要购买自己的域名，比如通过阿里云进行购买https://wanwang.aliyun.com/?spm=5176.8142029.388261.275.a7236d3earZNnp，该过程比较繁琐，需要认证。 域名认证通过之后，需要在添在云解析DNS中加一项CNAME将你的独立域名指向你的GitHub Pages网址，如下图所示， 其中ruanxinyu.cn是我购买的域名；blog是我为我的博客分配的二级域名，二级域名是自己随意指定的；ruanxinyu.github.io是我的GitHub Pages地址。 配置GitHub仓库 进入到你的GitHub Pages所在的代码仓库的配置中，将您的域名配置进去： 到此，您就可以通过您的独立域名访问您的博客内容，比如我的：https://blog.ruanxinyu.cn 还存在一个小问题，每次你通过hexo deploy -g将你的博客推送到你的GitHubPages的时候，域名配置就丢失了，为了解决此问题，我们可以在我的Hexo工程添加一个source/CNAME文件，在该文件中写入你的独立域名，比如blog.ruanxinyu.cn，这样每次推送，都会自动给您设置域名。 通过Git的子模块功能管理主题 为什么要用Git的子模块功能呢？ 我们的博客代码是存在我们自己仓库中的，而主题是从别人的仓库中拉取的，并且我们会修改主题中的配置文件。如果我们将主题的内容全部存到我们的仓库中，那么如果主题的作者更新了内容，我们想同步下来就会很费劲。而Git的子模块功能就是为了解决这个问题的，允许你将一个Git仓库当作另外一个Git仓库的子目录，允许你克隆另外一个仓库到你的项目中并且保持你的提交相对独立。 在华为DevCloud上建立私有代码仓 因为敏感信息问题，我不想将hexo工程源码放和主题的源码放在gitHub上，因此我在华为软件开发云上建立了两个私有仓库: 一个用于存放我的hexo工程源码，地址为： 1git@codehub.devcloud.huaweicloud.com:55d03e8e8ec445bfb3fffbc66b1001dd/Blog.git 一个用于存放我修改后的indigo主题，该仓库是从indigo的官方仓库导入进来的, 如下图所示, 地址为： 1git@codehub.devcloud.huaweicloud.com:55d03e8e8ec445bfb3fffbc66b1001dd/hexo-theme-indigo.git 如何添加Git的子模块功能 在第一次使用的时候，需要先添加子模块功能： 1git submodule add -b card git@codehub.devcloud.huaweicloud.com:55d03e8e8ec445bfb3fffbc66b1001dd/hexo-theme-indigo.git themes/indigo 此时，会在你的代码目录下生成.gitmodules文件，该文件记录你的子模块信息： 1234[submodule &quot;themes/indigo&quot;]truepath = themes/indigotrueurl = git@codehub.devcloud.huaweicloud.com:55d03e8e8ec445bfb3fffbc66b1001dd/hexo-theme-indigo.gittruebranch = card 然后执行git submodule init和git submodule update命令将远端的代码同步下来。 如何修改indigo主题的内容 我们根据自己的需要修改主题文件夹中的文件，然后推送至我们的私有仓库即可，可以参考如下命令： 1234cd themes/indigogit add .git commit -m '修改配置信息'git push origin card 如何同步indigo主题官方仓库的更新 首先，我们将我们的仓库与官方的仓库进行一下关联，如下所示： 1git remote add office -t card https://github.com/yscoder/hexo-theme-indigo.git 之后通过git pull office即可将官方的仓库合并到本地。 如何修改Hexo工程代码的内容 Hexo工程就跟普通仓库一样维护即可，与子模块是相互独立的，当前两个仓库分开维护即可。Hexo工程代码并不会管理indigo主题的文件，而只是维护一个子模块的commit id。 克隆已经添加子模块功能的hexo工程 使用子模块之后，克隆Hexo工程代码可以加上--recursive参数，将子模组的内容一起克隆下来，如果没有加该参数，则需要手动执行一下git submodule update： 1git clone --recursive git@codehub.devcloud.huaweicloud.com:55d03e8e8ec445bfb3fffbc66b1001dd/Blog.git 你可能会遇到的坑 执行hexo deploy时报error deployer not found:github错误 您没有安装安装hexo-deployer-git造成的，通过 npm install hexo-deployer-git --save进行安装 执行hexo deploy时报Permission denied (publickey)错误 您的Github没有配置你的SSH key，配置方法参照上文的“配置GitHub Pages”章节 执行hexo deploy时报fatal: could not read Username for 'https://github.com': Invalid argument错误 在GitHub上设置SSH Key，同时将配置文件deploy配置下的git地址改为git@开头的ssh地址，如下所示： 1234deploy: type: git repo: git@github.com:RuanXinyu/ruanxinyu.github.com.git branch: master 百度统计没有数据 百度统计在初次添加后会有一定的延迟，可以手动检查是否添加成功，如下所示: gitment初始化评论时出现Error：validation failed 这是由于你的网址超过50个字符导致的，解决方式请参照上文“配置评论功能”中的第5条","tags":[{"name":"博客","slug":"博客","permalink":"http://ruanxinyu.github.io/tags/博客/"}]},{"title":"JDK安装教程","date":"2018-04-15T06:53:32.000Z","path":"posts/技术文档/JDK安装教程/","text":"学习Java，首先得安装JDK(Java Development Kit)，那么下面就说一下如何在Windows和Linux下安装并验证JDK。 JDK的下载 JDK的官方下载地址为： http://www.oracle.com/technetwork/java/javase/downloads/index.html， 请根据需要下载对应操作系统的安装包。 官方下载速度比较慢，因此可以从华为开源镜像站下载，地址为：https://mirrors.huaweicloud.com/repository/toolkit/java/jdk/ Windows下安装JDK 以jdk-8u151为例，双击上一步下载下来的exe文件，默认安装即可。（备注：路径可以选择其他盘符，但是不建议路径中包含中文及特殊字符） 进入到系统环境变量的管理界面：右键计算机图标=&gt;属性=&gt;高级系统设置=&gt;环境变量 新建变量JAVA_HOME，值为：C:\\Program Files\\Java\\jdk1.8.0_151 编辑变量PATH，追加：%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin; 新建变量CLASSPATH，值为：.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar Linux下安装JDK 以jdk-8u151为例，下载JDK后，将压缩包解压至特定的目录，一般解压至/usr/local目录，下载和解压命令可以参考如下命令： 123wget https://mirrors.huaweicloud.com/repository/toolkit/java/jdk/8u151-b12/jdk-8u151-linux-x64.tar.gzsudo tar -zxvf jdk-8u151-linux-x64.tar.gz -C /usr/local/sudo chown -R $(whoami):$(whoami) /usr/local/jdk1.8.0_151 经JDK的路径加入到环境变量中，在命令行中输入sudo vim /etc/profile，编辑文件，在文件末尾增加如下的内容，然后执行source /etc/profile使环境变量生效。 1234export JAVA_HOME=/usr/local/jdk1.8.0_151export JRE_HOME=/usr/local/jdk1.8.0_151/jreexport CLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libexport PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin JDK的验证 windows打开CMD命令窗口，Linux打开终端端口，输入java -version命令，如果出现如下提示则Java安装成功。","tags":[{"name":"环境搭建","slug":"环境搭建","permalink":"http://ruanxinyu.github.io/tags/环境搭建/"},{"name":"Java","slug":"Java","permalink":"http://ruanxinyu.github.io/tags/Java/"}]}]